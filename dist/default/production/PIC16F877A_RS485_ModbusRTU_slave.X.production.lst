

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 08:25:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F877A Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     000E                     	;# 
   103     000F                     	;# 
   104     0010                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001B                     	;# 
   118     001C                     	;# 
   119     001D                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     0081                     	;# 
   123     0085                     	;# 
   124     0086                     	;# 
   125     0087                     	;# 
   126     0088                     	;# 
   127     0089                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     0091                     	;# 
   132     0092                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     009F                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0000                     	;# 
   208     0001                     	;# 
   209     0002                     	;# 
   210     0003                     	;# 
   211     0004                     	;# 
   212     0005                     	;# 
   213     0006                     	;# 
   214     0007                     	;# 
   215     0008                     	;# 
   216     0009                     	;# 
   217     000A                     	;# 
   218     000B                     	;# 
   219     000C                     	;# 
   220     000D                     	;# 
   221     000E                     	;# 
   222     000E                     	;# 
   223     000F                     	;# 
   224     0010                     	;# 
   225     0011                     	;# 
   226     0012                     	;# 
   227     0013                     	;# 
   228     0014                     	;# 
   229     0015                     	;# 
   230     0015                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001B                     	;# 
   238     001C                     	;# 
   239     001D                     	;# 
   240     001E                     	;# 
   241     001F                     	;# 
   242     0081                     	;# 
   243     0085                     	;# 
   244     0086                     	;# 
   245     0087                     	;# 
   246     0088                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     0091                     	;# 
   252     0092                     	;# 
   253     0093                     	;# 
   254     0094                     	;# 
   255     0098                     	;# 
   256     0099                     	;# 
   257     009C                     	;# 
   258     009D                     	;# 
   259     009E                     	;# 
   260     009F                     	;# 
   261     010C                     	;# 
   262     010D                     	;# 
   263     010E                     	;# 
   264     010F                     	;# 
   265     018C                     	;# 
   266     018D                     	;# 
   267     0000                     	;# 
   268     0001                     	;# 
   269     0002                     	;# 
   270     0003                     	;# 
   271     0004                     	;# 
   272     0005                     	;# 
   273     0006                     	;# 
   274     0007                     	;# 
   275     0008                     	;# 
   276     0009                     	;# 
   277     000A                     	;# 
   278     000B                     	;# 
   279     000C                     	;# 
   280     000D                     	;# 
   281     000E                     	;# 
   282     000E                     	;# 
   283     000F                     	;# 
   284     0010                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0015                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001B                     	;# 
   298     001C                     	;# 
   299     001D                     	;# 
   300     001E                     	;# 
   301     001F                     	;# 
   302     0081                     	;# 
   303     0085                     	;# 
   304     0086                     	;# 
   305     0087                     	;# 
   306     0088                     	;# 
   307     0089                     	;# 
   308     008C                     	;# 
   309     008D                     	;# 
   310     008E                     	;# 
   311     0091                     	;# 
   312     0092                     	;# 
   313     0093                     	;# 
   314     0094                     	;# 
   315     0098                     	;# 
   316     0099                     	;# 
   317     009C                     	;# 
   318     009D                     	;# 
   319     009E                     	;# 
   320     009F                     	;# 
   321     010C                     	;# 
   322     010D                     	;# 
   323     010E                     	;# 
   324     010F                     	;# 
   325     018C                     	;# 
   326     018D                     	;# 
   327     0000                     	;# 
   328     0001                     	;# 
   329     0002                     	;# 
   330     0003                     	;# 
   331     0004                     	;# 
   332     0005                     	;# 
   333     0006                     	;# 
   334     0007                     	;# 
   335     0008                     	;# 
   336     0009                     	;# 
   337     000A                     	;# 
   338     000B                     	;# 
   339     000C                     	;# 
   340     000D                     	;# 
   341     000E                     	;# 
   342     000E                     	;# 
   343     000F                     	;# 
   344     0010                     	;# 
   345     0011                     	;# 
   346     0012                     	;# 
   347     0013                     	;# 
   348     0014                     	;# 
   349     0015                     	;# 
   350     0015                     	;# 
   351     0016                     	;# 
   352     0017                     	;# 
   353     0018                     	;# 
   354     0019                     	;# 
   355     001A                     	;# 
   356     001B                     	;# 
   357     001B                     	;# 
   358     001C                     	;# 
   359     001D                     	;# 
   360     001E                     	;# 
   361     001F                     	;# 
   362     0081                     	;# 
   363     0085                     	;# 
   364     0086                     	;# 
   365     0087                     	;# 
   366     0088                     	;# 
   367     0089                     	;# 
   368     008C                     	;# 
   369     008D                     	;# 
   370     008E                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0094                     	;# 
   375     0098                     	;# 
   376     0099                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0098                     	;# 
   436     0099                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     010C                     	;# 
   442     010D                     	;# 
   443     010E                     	;# 
   444     010F                     	;# 
   445     018C                     	;# 
   446     018D                     	;# 
   447     0000                     	;# 
   448     0001                     	;# 
   449     0002                     	;# 
   450     0003                     	;# 
   451     0004                     	;# 
   452     0005                     	;# 
   453     0006                     	;# 
   454     0007                     	;# 
   455     0008                     	;# 
   456     0009                     	;# 
   457     000A                     	;# 
   458     000B                     	;# 
   459     000C                     	;# 
   460     000D                     	;# 
   461     000E                     	;# 
   462     000E                     	;# 
   463     000F                     	;# 
   464     0010                     	;# 
   465     0011                     	;# 
   466     0012                     	;# 
   467     0013                     	;# 
   468     0014                     	;# 
   469     0015                     	;# 
   470     0015                     	;# 
   471     0016                     	;# 
   472     0017                     	;# 
   473     0018                     	;# 
   474     0019                     	;# 
   475     001A                     	;# 
   476     001B                     	;# 
   477     001B                     	;# 
   478     001C                     	;# 
   479     001D                     	;# 
   480     001E                     	;# 
   481     001F                     	;# 
   482     0081                     	;# 
   483     0085                     	;# 
   484     0086                     	;# 
   485     0087                     	;# 
   486     0088                     	;# 
   487     0089                     	;# 
   488     008C                     	;# 
   489     008D                     	;# 
   490     008E                     	;# 
   491     0091                     	;# 
   492     0092                     	;# 
   493     0093                     	;# 
   494     0094                     	;# 
   495     0098                     	;# 
   496     0099                     	;# 
   497     009C                     	;# 
   498     009D                     	;# 
   499     009E                     	;# 
   500     009F                     	;# 
   501     010C                     	;# 
   502     010D                     	;# 
   503     010E                     	;# 
   504     010F                     	;# 
   505     018C                     	;# 
   506     018D                     	;# 
   507                           
   508                           	psect	idataBANK0
   509     0F8C                     __pidataBANK0:
   510                           
   511                           ;initializer for _slave_rcv_buffer_len
   512     0F8C  3408               	retlw	8
   513     0F8D  3400               	retlw	0
   514                           
   515                           ;initializer for _error_msg
   516     0F8E  3454               	retlw	84
   517     0F8F  3472               	retlw	114
   518     0F90  3461               	retlw	97
   519     0F91  346E               	retlw	110
   520     0F92  3473               	retlw	115
   521     0F93  346D               	retlw	109
   522     0F94  3469               	retlw	105
   523     0F95  3473               	retlw	115
   524     0F96  3473               	retlw	115
   525     0F97  3469               	retlw	105
   526     0F98  346F               	retlw	111
   527     0F99  346E               	retlw	110
   528     0F9A  3420               	retlw	32
   529     0F9B  3465               	retlw	101
   530     0F9C  3472               	retlw	114
   531     0F9D  3472               	retlw	114
   532     0F9E  346F               	retlw	111
   533     0F9F  3472               	retlw	114
   534     0FA0  3400               	retlw	0
   535                           
   536                           ;initializer for _register_val
   537     0FA1  3473               	retlw	115
   538     0FA2  3400               	retlw	0
   539     0FA3  3468               	retlw	104
   540     0FA4  3400               	retlw	0
   541                           
   542                           ;initializer for _coil_val
   543     0FA5  34CD               	retlw	205
   544     0FA6  3421               	retlw	33
   545                           
   546                           	psect	stringtext
   547     0100                     __pstringtext:
   548     0100                     stringtab:
   549     0100                     __stringtab:
   550                           
   551                           ;	String table - string pointers are 2 bytes each
   552     0100  1BFF               	btfsc	btemp+1,7
   553     0101  290A               	ljmp	stringcode
   554     0102  1383               	bcf	3,7
   555     0103  187F               	btfsc	btemp+1,0
   556     0104  1783               	bsf	3,7
   557     0105  0800               	movf	0,w
   558     0106  0A84               	incf	4,f
   559     0107  1903               	skipnz
   560     0108  0AFF               	incf	btemp+1,f
   561     0109  0008               	return
   562     010A                     stringcode:
   563     010A  087F               	movf	btemp+1,w
   564     010B  397F               	andlw	127
   565     010C  008A               	movwf	10
   566     010D  0804               	movf	4,w
   567     010E  0A84               	incf	4,f
   568     010F  1903               	skipnz
   569     0110  0AFF               	incf	btemp+1,f
   570     0111  0082               	movwf	2
   571     0112                     __stringbase:
   572     0112                     __end_of__stringtab:
   573     0112                     _wCRCTable:
   574     0112  3400               	retlw	0
   575     0113  3400               	retlw	0
   576     0114  34C1               	retlw	193
   577     0115  34C0               	retlw	192
   578     0116  3481               	retlw	129
   579     0117  34C1               	retlw	193
   580     0118  3440               	retlw	64
   581     0119  3401               	retlw	1
   582     011A  3401               	retlw	1
   583     011B  34C3               	retlw	195
   584     011C  34C0               	retlw	192
   585     011D  3403               	retlw	3
   586     011E  3480               	retlw	128
   587     011F  3402               	retlw	2
   588     0120  3441               	retlw	65
   589     0121  34C2               	retlw	194
   590     0122  3401               	retlw	1
   591     0123  34C6               	retlw	198
   592     0124  34C0               	retlw	192
   593     0125  3406               	retlw	6
   594     0126  3480               	retlw	128
   595     0127  3407               	retlw	7
   596     0128  3441               	retlw	65
   597     0129  34C7               	retlw	199
   598     012A  3400               	retlw	0
   599     012B  3405               	retlw	5
   600     012C  34C1               	retlw	193
   601     012D  34C5               	retlw	197
   602     012E  3481               	retlw	129
   603     012F  34C4               	retlw	196
   604     0130  3440               	retlw	64
   605     0131  3404               	retlw	4
   606     0132  3401               	retlw	1
   607     0133  34CC               	retlw	204
   608     0134  34C0               	retlw	192
   609     0135  340C               	retlw	12
   610     0136  3480               	retlw	128
   611     0137  340D               	retlw	13
   612     0138  3441               	retlw	65
   613     0139  34CD               	retlw	205
   614     013A  3400               	retlw	0
   615     013B  340F               	retlw	15
   616     013C  34C1               	retlw	193
   617     013D  34CF               	retlw	207
   618     013E  3481               	retlw	129
   619     013F  34CE               	retlw	206
   620     0140  3440               	retlw	64
   621     0141  340E               	retlw	14
   622     0142  3400               	retlw	0
   623     0143  340A               	retlw	10
   624     0144  34C1               	retlw	193
   625     0145  34CA               	retlw	202
   626     0146  3481               	retlw	129
   627     0147  34CB               	retlw	203
   628     0148  3440               	retlw	64
   629     0149  340B               	retlw	11
   630     014A  3401               	retlw	1
   631     014B  34C9               	retlw	201
   632     014C  34C0               	retlw	192
   633     014D  3409               	retlw	9
   634     014E  3480               	retlw	128
   635     014F  3408               	retlw	8
   636     0150  3441               	retlw	65
   637     0151  34C8               	retlw	200
   638     0152  3401               	retlw	1
   639     0153  34D8               	retlw	216
   640     0154  34C0               	retlw	192
   641     0155  3418               	retlw	24
   642     0156  3480               	retlw	128
   643     0157  3419               	retlw	25
   644     0158  3441               	retlw	65
   645     0159  34D9               	retlw	217
   646     015A  3400               	retlw	0
   647     015B  341B               	retlw	27
   648     015C  34C1               	retlw	193
   649     015D  34DB               	retlw	219
   650     015E  3481               	retlw	129
   651     015F  34DA               	retlw	218
   652     0160  3440               	retlw	64
   653     0161  341A               	retlw	26
   654     0162  3400               	retlw	0
   655     0163  341E               	retlw	30
   656     0164  34C1               	retlw	193
   657     0165  34DE               	retlw	222
   658     0166  3481               	retlw	129
   659     0167  34DF               	retlw	223
   660     0168  3440               	retlw	64
   661     0169  341F               	retlw	31
   662     016A  3401               	retlw	1
   663     016B  34DD               	retlw	221
   664     016C  34C0               	retlw	192
   665     016D  341D               	retlw	29
   666     016E  3480               	retlw	128
   667     016F  341C               	retlw	28
   668     0170  3441               	retlw	65
   669     0171  34DC               	retlw	220
   670     0172  3400               	retlw	0
   671     0173  3414               	retlw	20
   672     0174  34C1               	retlw	193
   673     0175  34D4               	retlw	212
   674     0176  3481               	retlw	129
   675     0177  34D5               	retlw	213
   676     0178  3440               	retlw	64
   677     0179  3415               	retlw	21
   678     017A  3401               	retlw	1
   679     017B  34D7               	retlw	215
   680     017C  34C0               	retlw	192
   681     017D  3417               	retlw	23
   682     017E  3480               	retlw	128
   683     017F  3416               	retlw	22
   684     0180  3441               	retlw	65
   685     0181  34D6               	retlw	214
   686     0182  3401               	retlw	1
   687     0183  34D2               	retlw	210
   688     0184  34C0               	retlw	192
   689     0185  3412               	retlw	18
   690     0186  3480               	retlw	128
   691     0187  3413               	retlw	19
   692     0188  3441               	retlw	65
   693     0189  34D3               	retlw	211
   694     018A  3400               	retlw	0
   695     018B  3411               	retlw	17
   696     018C  34C1               	retlw	193
   697     018D  34D1               	retlw	209
   698     018E  3481               	retlw	129
   699     018F  34D0               	retlw	208
   700     0190  3440               	retlw	64
   701     0191  3410               	retlw	16
   702     0192  3401               	retlw	1
   703     0193  34F0               	retlw	240
   704     0194  34C0               	retlw	192
   705     0195  3430               	retlw	48
   706     0196  3480               	retlw	128
   707     0197  3431               	retlw	49
   708     0198  3441               	retlw	65
   709     0199  34F1               	retlw	241
   710     019A  3400               	retlw	0
   711     019B  3433               	retlw	51
   712     019C  34C1               	retlw	193
   713     019D  34F3               	retlw	243
   714     019E  3481               	retlw	129
   715     019F  34F2               	retlw	242
   716     01A0  3440               	retlw	64
   717     01A1  3432               	retlw	50
   718     01A2  3400               	retlw	0
   719     01A3  3436               	retlw	54
   720     01A4  34C1               	retlw	193
   721     01A5  34F6               	retlw	246
   722     01A6  3481               	retlw	129
   723     01A7  34F7               	retlw	247
   724     01A8  3440               	retlw	64
   725     01A9  3437               	retlw	55
   726     01AA  3401               	retlw	1
   727     01AB  34F5               	retlw	245
   728     01AC  34C0               	retlw	192
   729     01AD  3435               	retlw	53
   730     01AE  3480               	retlw	128
   731     01AF  3434               	retlw	52
   732     01B0  3441               	retlw	65
   733     01B1  34F4               	retlw	244
   734     01B2  3400               	retlw	0
   735     01B3  343C               	retlw	60
   736     01B4  34C1               	retlw	193
   737     01B5  34FC               	retlw	252
   738     01B6  3481               	retlw	129
   739     01B7  34FD               	retlw	253
   740     01B8  3440               	retlw	64
   741     01B9  343D               	retlw	61
   742     01BA  3401               	retlw	1
   743     01BB  34FF               	retlw	255
   744     01BC  34C0               	retlw	192
   745     01BD  343F               	retlw	63
   746     01BE  3480               	retlw	128
   747     01BF  343E               	retlw	62
   748     01C0  3441               	retlw	65
   749     01C1  34FE               	retlw	254
   750     01C2  3401               	retlw	1
   751     01C3  34FA               	retlw	250
   752     01C4  34C0               	retlw	192
   753     01C5  343A               	retlw	58
   754     01C6  3480               	retlw	128
   755     01C7  343B               	retlw	59
   756     01C8  3441               	retlw	65
   757     01C9  34FB               	retlw	251
   758     01CA  3400               	retlw	0
   759     01CB  3439               	retlw	57
   760     01CC  34C1               	retlw	193
   761     01CD  34F9               	retlw	249
   762     01CE  3481               	retlw	129
   763     01CF  34F8               	retlw	248
   764     01D0  3440               	retlw	64
   765     01D1  3438               	retlw	56
   766     01D2  3400               	retlw	0
   767     01D3  3428               	retlw	40
   768     01D4  34C1               	retlw	193
   769     01D5  34E8               	retlw	232
   770     01D6  3481               	retlw	129
   771     01D7  34E9               	retlw	233
   772     01D8  3440               	retlw	64
   773     01D9  3429               	retlw	41
   774     01DA  3401               	retlw	1
   775     01DB  34EB               	retlw	235
   776     01DC  34C0               	retlw	192
   777     01DD  342B               	retlw	43
   778     01DE  3480               	retlw	128
   779     01DF  342A               	retlw	42
   780     01E0  3441               	retlw	65
   781     01E1  34EA               	retlw	234
   782     01E2  3401               	retlw	1
   783     01E3  34EE               	retlw	238
   784     01E4  34C0               	retlw	192
   785     01E5  342E               	retlw	46
   786     01E6  3480               	retlw	128
   787     01E7  342F               	retlw	47
   788     01E8  3441               	retlw	65
   789     01E9  34EF               	retlw	239
   790     01EA  3400               	retlw	0
   791     01EB  342D               	retlw	45
   792     01EC  34C1               	retlw	193
   793     01ED  34ED               	retlw	237
   794     01EE  3481               	retlw	129
   795     01EF  34EC               	retlw	236
   796     01F0  3440               	retlw	64
   797     01F1  342C               	retlw	44
   798     01F2  3401               	retlw	1
   799     01F3  34E4               	retlw	228
   800     01F4  34C0               	retlw	192
   801     01F5  3424               	retlw	36
   802     01F6  3480               	retlw	128
   803     01F7  3425               	retlw	37
   804     01F8  3441               	retlw	65
   805     01F9  34E5               	retlw	229
   806     01FA  3400               	retlw	0
   807     01FB  3427               	retlw	39
   808     01FC  34C1               	retlw	193
   809     01FD  34E7               	retlw	231
   810     01FE  3481               	retlw	129
   811     01FF  34E6               	retlw	230
   812     0200  3440               	retlw	64
   813     0201  3426               	retlw	38
   814     0202  3400               	retlw	0
   815     0203  3422               	retlw	34
   816     0204  34C1               	retlw	193
   817     0205  34E2               	retlw	226
   818     0206  3481               	retlw	129
   819     0207  34E3               	retlw	227
   820     0208  3440               	retlw	64
   821     0209  3423               	retlw	35
   822     020A  3401               	retlw	1
   823     020B  34E1               	retlw	225
   824     020C  34C0               	retlw	192
   825     020D  3421               	retlw	33
   826     020E  3480               	retlw	128
   827     020F  3420               	retlw	32
   828     0210  3441               	retlw	65
   829     0211  34E0               	retlw	224
   830     0212  3401               	retlw	1
   831     0213  34A0               	retlw	160
   832     0214  34C0               	retlw	192
   833     0215  3460               	retlw	96
   834     0216  3480               	retlw	128
   835     0217  3461               	retlw	97
   836     0218  3441               	retlw	65
   837     0219  34A1               	retlw	161
   838     021A  3400               	retlw	0
   839     021B  3463               	retlw	99
   840     021C  34C1               	retlw	193
   841     021D  34A3               	retlw	163
   842     021E  3481               	retlw	129
   843     021F  34A2               	retlw	162
   844     0220  3440               	retlw	64
   845     0221  3462               	retlw	98
   846     0222  3400               	retlw	0
   847     0223  3466               	retlw	102
   848     0224  34C1               	retlw	193
   849     0225  34A6               	retlw	166
   850     0226  3481               	retlw	129
   851     0227  34A7               	retlw	167
   852     0228  3440               	retlw	64
   853     0229  3467               	retlw	103
   854     022A  3401               	retlw	1
   855     022B  34A5               	retlw	165
   856     022C  34C0               	retlw	192
   857     022D  3465               	retlw	101
   858     022E  3480               	retlw	128
   859     022F  3464               	retlw	100
   860     0230  3441               	retlw	65
   861     0231  34A4               	retlw	164
   862     0232  3400               	retlw	0
   863     0233  346C               	retlw	108
   864     0234  34C1               	retlw	193
   865     0235  34AC               	retlw	172
   866     0236  3481               	retlw	129
   867     0237  34AD               	retlw	173
   868     0238  3440               	retlw	64
   869     0239  346D               	retlw	109
   870     023A  3401               	retlw	1
   871     023B  34AF               	retlw	175
   872     023C  34C0               	retlw	192
   873     023D  346F               	retlw	111
   874     023E  3480               	retlw	128
   875     023F  346E               	retlw	110
   876     0240  3441               	retlw	65
   877     0241  34AE               	retlw	174
   878     0242  3401               	retlw	1
   879     0243  34AA               	retlw	170
   880     0244  34C0               	retlw	192
   881     0245  346A               	retlw	106
   882     0246  3480               	retlw	128
   883     0247  346B               	retlw	107
   884     0248  3441               	retlw	65
   885     0249  34AB               	retlw	171
   886     024A  3400               	retlw	0
   887     024B  3469               	retlw	105
   888     024C  34C1               	retlw	193
   889     024D  34A9               	retlw	169
   890     024E  3481               	retlw	129
   891     024F  34A8               	retlw	168
   892     0250  3440               	retlw	64
   893     0251  3468               	retlw	104
   894     0252  3400               	retlw	0
   895     0253  3478               	retlw	120
   896     0254  34C1               	retlw	193
   897     0255  34B8               	retlw	184
   898     0256  3481               	retlw	129
   899     0257  34B9               	retlw	185
   900     0258  3440               	retlw	64
   901     0259  3479               	retlw	121
   902     025A  3401               	retlw	1
   903     025B  34BB               	retlw	187
   904     025C  34C0               	retlw	192
   905     025D  347B               	retlw	123
   906     025E  3480               	retlw	128
   907     025F  347A               	retlw	122
   908     0260  3441               	retlw	65
   909     0261  34BA               	retlw	186
   910     0262  3401               	retlw	1
   911     0263  34BE               	retlw	190
   912     0264  34C0               	retlw	192
   913     0265  347E               	retlw	126
   914     0266  3480               	retlw	128
   915     0267  347F               	retlw	127
   916     0268  3441               	retlw	65
   917     0269  34BF               	retlw	191
   918     026A  3400               	retlw	0
   919     026B  347D               	retlw	125
   920     026C  34C1               	retlw	193
   921     026D  34BD               	retlw	189
   922     026E  3481               	retlw	129
   923     026F  34BC               	retlw	188
   924     0270  3440               	retlw	64
   925     0271  347C               	retlw	124
   926     0272  3401               	retlw	1
   927     0273  34B4               	retlw	180
   928     0274  34C0               	retlw	192
   929     0275  3474               	retlw	116
   930     0276  3480               	retlw	128
   931     0277  3475               	retlw	117
   932     0278  3441               	retlw	65
   933     0279  34B5               	retlw	181
   934     027A  3400               	retlw	0
   935     027B  3477               	retlw	119
   936     027C  34C1               	retlw	193
   937     027D  34B7               	retlw	183
   938     027E  3481               	retlw	129
   939     027F  34B6               	retlw	182
   940     0280  3440               	retlw	64
   941     0281  3476               	retlw	118
   942     0282  3400               	retlw	0
   943     0283  3472               	retlw	114
   944     0284  34C1               	retlw	193
   945     0285  34B2               	retlw	178
   946     0286  3481               	retlw	129
   947     0287  34B3               	retlw	179
   948     0288  3440               	retlw	64
   949     0289  3473               	retlw	115
   950     028A  3401               	retlw	1
   951     028B  34B1               	retlw	177
   952     028C  34C0               	retlw	192
   953     028D  3471               	retlw	113
   954     028E  3480               	retlw	128
   955     028F  3470               	retlw	112
   956     0290  3441               	retlw	65
   957     0291  34B0               	retlw	176
   958     0292  3400               	retlw	0
   959     0293  3450               	retlw	80
   960     0294  34C1               	retlw	193
   961     0295  3490               	retlw	144
   962     0296  3481               	retlw	129
   963     0297  3491               	retlw	145
   964     0298  3440               	retlw	64
   965     0299  3451               	retlw	81
   966     029A  3401               	retlw	1
   967     029B  3493               	retlw	147
   968     029C  34C0               	retlw	192
   969     029D  3453               	retlw	83
   970     029E  3480               	retlw	128
   971     029F  3452               	retlw	82
   972     02A0  3441               	retlw	65
   973     02A1  3492               	retlw	146
   974     02A2  3401               	retlw	1
   975     02A3  3496               	retlw	150
   976     02A4  34C0               	retlw	192
   977     02A5  3456               	retlw	86
   978     02A6  3480               	retlw	128
   979     02A7  3457               	retlw	87
   980     02A8  3441               	retlw	65
   981     02A9  3497               	retlw	151
   982     02AA  3400               	retlw	0
   983     02AB  3455               	retlw	85
   984     02AC  34C1               	retlw	193
   985     02AD  3495               	retlw	149
   986     02AE  3481               	retlw	129
   987     02AF  3494               	retlw	148
   988     02B0  3440               	retlw	64
   989     02B1  3454               	retlw	84
   990     02B2  3401               	retlw	1
   991     02B3  349C               	retlw	156
   992     02B4  34C0               	retlw	192
   993     02B5  345C               	retlw	92
   994     02B6  3480               	retlw	128
   995     02B7  345D               	retlw	93
   996     02B8  3441               	retlw	65
   997     02B9  349D               	retlw	157
   998     02BA  3400               	retlw	0
   999     02BB  345F               	retlw	95
  1000     02BC  34C1               	retlw	193
  1001     02BD  349F               	retlw	159
  1002     02BE  3481               	retlw	129
  1003     02BF  349E               	retlw	158
  1004     02C0  3440               	retlw	64
  1005     02C1  345E               	retlw	94
  1006     02C2  3400               	retlw	0
  1007     02C3  345A               	retlw	90
  1008     02C4  34C1               	retlw	193
  1009     02C5  349A               	retlw	154
  1010     02C6  3481               	retlw	129
  1011     02C7  349B               	retlw	155
  1012     02C8  3440               	retlw	64
  1013     02C9  345B               	retlw	91
  1014     02CA  3401               	retlw	1
  1015     02CB  3499               	retlw	153
  1016     02CC  34C0               	retlw	192
  1017     02CD  3459               	retlw	89
  1018     02CE  3480               	retlw	128
  1019     02CF  3458               	retlw	88
  1020     02D0  3441               	retlw	65
  1021     02D1  3498               	retlw	152
  1022     02D2  3401               	retlw	1
  1023     02D3  3488               	retlw	136
  1024     02D4  34C0               	retlw	192
  1025     02D5  3448               	retlw	72
  1026     02D6  3480               	retlw	128
  1027     02D7  3449               	retlw	73
  1028     02D8  3441               	retlw	65
  1029     02D9  3489               	retlw	137
  1030     02DA  3400               	retlw	0
  1031     02DB  344B               	retlw	75
  1032     02DC  34C1               	retlw	193
  1033     02DD  348B               	retlw	139
  1034     02DE  3481               	retlw	129
  1035     02DF  348A               	retlw	138
  1036     02E0  3440               	retlw	64
  1037     02E1  344A               	retlw	74
  1038     02E2  3400               	retlw	0
  1039     02E3  344E               	retlw	78
  1040     02E4  34C1               	retlw	193
  1041     02E5  348E               	retlw	142
  1042     02E6  3481               	retlw	129
  1043     02E7  348F               	retlw	143
  1044     02E8  3440               	retlw	64
  1045     02E9  344F               	retlw	79
  1046     02EA  3401               	retlw	1
  1047     02EB  348D               	retlw	141
  1048     02EC  34C0               	retlw	192
  1049     02ED  344D               	retlw	77
  1050     02EE  3480               	retlw	128
  1051     02EF  344C               	retlw	76
  1052     02F0  3441               	retlw	65
  1053     02F1  348C               	retlw	140
  1054     02F2  3400               	retlw	0
  1055     02F3  3444               	retlw	68
  1056     02F4  34C1               	retlw	193
  1057     02F5  3484               	retlw	132
  1058     02F6  3481               	retlw	129
  1059     02F7  3485               	retlw	133
  1060     02F8  3440               	retlw	64
  1061     02F9  3445               	retlw	69
  1062     02FA  3401               	retlw	1
  1063     02FB  3487               	retlw	135
  1064     02FC  34C0               	retlw	192
  1065     02FD  3447               	retlw	71
  1066     02FE  3480               	retlw	128
  1067     02FF  3446               	retlw	70
  1068     0300  3441               	retlw	65
  1069     0301  3486               	retlw	134
  1070     0302  3401               	retlw	1
  1071     0303  3482               	retlw	130
  1072     0304  34C0               	retlw	192
  1073     0305  3442               	retlw	66
  1074     0306  3480               	retlw	128
  1075     0307  3443               	retlw	67
  1076     0308  3441               	retlw	65
  1077     0309  3483               	retlw	131
  1078     030A  3400               	retlw	0
  1079     030B  3441               	retlw	65
  1080     030C  34C1               	retlw	193
  1081     030D  3481               	retlw	129
  1082     030E  3481               	retlw	129
  1083     030F  3480               	retlw	128
  1084     0310  3440               	retlw	64
  1085     0311  3440               	retlw	64
  1086     0312                     __end_of_wCRCTable:
  1087     001A                     _RCREG	set	26
  1088     0019                     _TXREG	set	25
  1089     0040                     _RD0	set	64
  1090     0043                     _RD3	set	67
  1091     0042                     _RD2	set	66
  1092     0047                     _RD7	set	71
  1093     0046                     _RD6	set	70
  1094     0045                     _RD5	set	69
  1095     0044                     _RD4	set	68
  1096     0065                     _RCIF	set	101
  1097     005F                     _GIE	set	95
  1098     005E                     _PEIE	set	94
  1099     00C4                     _CREN	set	196
  1100     00C6                     _RX9	set	198
  1101     00C7                     _SPEN	set	199
  1102     0088                     _TRISD	set	136
  1103     0099                     _SPBRG	set	153
  1104     0440                     _TRISD0	set	1088
  1105     0443                     _TRISD3	set	1091
  1106     0442                     _TRISD2	set	1090
  1107     04C1                     _TRMT	set	1217
  1108     0465                     _RCIE	set	1125
  1109     04C2                     _BRGH	set	1218
  1110     04C5                     _TXEN	set	1221
  1111     04C6                     _TX9	set	1222
  1112     04C4                     _SYNC	set	1220
  1113     043F                     _TRISC7	set	1087
  1114     043E                     _TRISC6	set	1086
  1115                           
  1116                           	psect	cinit
  1117     0015                     start_initialization:	
  1118                           ; #config settings
  1119                           
  1120     0015                     __initialization:
  1121                           
  1122                           ; Initialize objects allocated to BANK0
  1123     0015  1383               	bcf	3,7	;select IRP bank0
  1124     0016  303B               	movlw	low (__pdataBANK0+27)
  1125     0017  00FD               	movwf	btemp+-1
  1126     0018  300F               	movlw	high __pidataBANK0
  1127     0019  00FE               	movwf	btemp
  1128     001A  308C               	movlw	low __pidataBANK0
  1129     001B  00FF               	movwf	btemp+1
  1130     001C  3020               	movlw	low __pdataBANK0
  1131     001D  0084               	movwf	4
  1132     001E  120A  158A  2705  120A  118A  	fcall	init_ram0
  1133                           
  1134                           ; Clear objects allocated to BANK1
  1135     0023  30A0               	movlw	low __pbssBANK1
  1136     0024  0084               	movwf	4
  1137     0025  30D2               	movlw	low (__pbssBANK1+50)
  1138     0026  120A  158A  26B5  120A  118A  	fcall	clear_ram0
  1139                           
  1140                           ; Clear objects allocated to BANK0
  1141     002B  3053               	movlw	low __pbssBANK0
  1142     002C  0084               	movwf	4
  1143     002D  305C               	movlw	low (__pbssBANK0+9)
  1144     002E  120A  158A  26B5  120A  118A  	fcall	clear_ram0
  1145     0033                     end_of_initialization:	
  1146                           ;End of C runtime variable initialization code
  1147                           
  1148     0033                     __end_of__initialization:
  1149     0033  0183               	clrf	3
  1150     0034  120A  158A  2EEE   	ljmp	_main	;jump to C main() function
  1151                           
  1152                           	psect	bssBANK0
  1153     0053                     __pbssBANK0:
  1154     0053                     _uart_str_idx@PIC16F877A_UART$F221:
  1155     0053                     	ds	2
  1156     0055                     _uart_str_idx@PIC16F877A_UART$F183:
  1157     0055                     	ds	2
  1158     0057                     _uart_str_idx@PIC16F877A_UART$F117:
  1159     0057                     	ds	2
  1160     0059                     _uart_str_idx:
  1161     0059                     	ds	2
  1162     005B                     _change_rcv_len:
  1163     005B                     	ds	1
  1164                           
  1165                           	psect	dataBANK0
  1166     0020                     __pdataBANK0:
  1167     0020                     _slave_rcv_buffer_len:
  1168     0020                     	ds	2
  1169     0022                     _error_msg:
  1170     0022                     	ds	19
  1171     0035                     _register_val:
  1172     0035                     	ds	4
  1173     0039                     _coil_val:
  1174     0039                     	ds	2
  1175                           
  1176                           	psect	bssBANK1
  1177     00A0                     __pbssBANK1:
  1178     00A0                     _tx_buffer:
  1179     00A0                     	ds	25
  1180     00B9                     _rcv_buffer:
  1181     00B9                     	ds	25
  1182                           
  1183                           	psect	inittext
  1184     0F01                     init_fetch0:	
  1185                           ;	Called with low address in FSR and high address in W
  1186                           
  1187     0F01  087E               	movf	btemp,w
  1188     0F02  008A               	movwf	10
  1189     0F03  087F               	movf	btemp+1,w
  1190     0F04  0082               	movwf	2
  1191     0F05                     init_ram0:	
  1192                           ;Called with:
  1193                           ;	high address of idata address in btemp 
  1194                           ;	low address of idata address in btemp+1 
  1195                           ;	low address of data in FSR
  1196                           ;	high address + 1 of data in btemp-1
  1197                           
  1198     0F05  120A  158A  2701  120A  158A  	fcall	init_fetch0
  1199     0F0A  0080               	movwf	0
  1200     0F0B  0A84               	incf	4,f
  1201     0F0C  0804               	movf	4,w
  1202     0F0D  067D               	xorwf	btemp+-1,w
  1203     0F0E  1903               	btfsc	3,2
  1204     0F0F  3400               	retlw	0
  1205     0F10  0AFF               	incf	btemp+1,f
  1206     0F11  1903               	btfsc	3,2
  1207     0F12  0AFE               	incf	btemp,f
  1208     0F13  2F05               	goto	init_ram0
  1209                           
  1210                           	psect	clrtext
  1211     0EB5                     clear_ram0:	
  1212                           ;	Called with FSR containing the base address, and
  1213                           ;	W with the last address+1
  1214                           
  1215     0EB5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1216     0EB6                     clrloop0:
  1217     0EB6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1218     0EB7  0A84               	incf	4,f	;increment pointer
  1219     0EB8  0604               	xorwf	4,w	;XOR with final address
  1220     0EB9  1903               	btfsc	3,2	;have we reached the end yet?
  1221     0EBA  3400               	retlw	0	;all done for this memory range, return
  1222     0EBB  0604               	xorwf	4,w	;XOR again to restore value
  1223     0EBC  2EB6               	goto	clrloop0	;do the next byte
  1224                           
  1225                           	psect	cstackCOMMON
  1226     0070                     __pcstackCOMMON:
  1227     0070                     ?_LCD_Clear:
  1228     0070                     ?_modbusMesHandling:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0070                     ?_modbusRTUInit:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0070                     ?_LCD_Init:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237     0070                     ?_LCD_Write_String:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240     0070                     ?_UARTTransRcvInit:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243     0070                     ?_UARTsendChar:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246     0070                     ??_UARTsendChar:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249     0070                     ?_UARTsendString:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0070                     ?_UARTrcvChar:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255     0070                     ??_UARTrcvChar:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258     0070                     ?_ISR:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261     0070                     ?_main:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ?_LCD_DATA:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ?_LCD_CMD:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ?_LCD_Write_Char:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ?_RS485TxConfig:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ?_RS485Init:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ?_RS485sendString:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ?_clearBuffer:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ?i1_LCD_DATA:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ??i1_LCD_DATA:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ?i1_LCD_CMD:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ?i1_LCD_Clear:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ?_strlen:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0070                     ?_crc16:	
  1301                           ; 2 bytes @ 0x0
  1302                           
  1303     0070                     ?___awdiv:	
  1304                           ; 2 bytes @ 0x0
  1305                           
  1306     0070                     UARTsendChar@c:	
  1307                           ; 2 bytes @ 0x0
  1308                           
  1309     0070                     UARTrcvChar@c:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     i1LCD_DATA@Data:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     crc16@length:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     clearBuffer@len:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321     0070                     ___awdiv@divisor:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x0
  1326     0070                     	ds	1
  1327     0071                     ??_UARTsendString:
  1328     0071                     ??_LCD_Write_Char:	
  1329                           ; 1 bytes @ 0x1
  1330                           
  1331     0071                     ??i1_LCD_CMD:	
  1332                           ; 1 bytes @ 0x1
  1333                           
  1334     0071                     ?_UARTrcvString:	
  1335                           ; 1 bytes @ 0x1
  1336                           
  1337     0071                     UARTrcvString@length:	
  1338                           ; 2 bytes @ 0x1
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x1
  1342     0071                     	ds	1
  1343     0072                     ??_strlen:
  1344     0072                     ??_crc16:	
  1345                           ; 1 bytes @ 0x2
  1346                           
  1347     0072                     ??_clearBuffer:	
  1348                           ; 1 bytes @ 0x2
  1349                           
  1350     0072                     strlen@s:	
  1351                           ; 1 bytes @ 0x2
  1352                           
  1353     0072                     UARTsendString@i:	
  1354                           ; 1 bytes @ 0x2
  1355                           
  1356     0072                     ___awdiv@dividend:	
  1357                           ; 2 bytes @ 0x2
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x2
  1361     0072                     	ds	1
  1362     0073                     ??_UARTrcvString:
  1363     0073                     LCD_Write_Char@Low4:	
  1364                           ; 1 bytes @ 0x3
  1365                           
  1366     0073                     strlen@cp:	
  1367                           ; 1 bytes @ 0x3
  1368                           
  1369     0073                     i1LCD_CMD@CMD:	
  1370                           ; 1 bytes @ 0x3
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x3
  1374     0073                     	ds	1
  1375     0074                     ?_LCD_Set_Cursor:
  1376     0074                     ?_memcpy:	
  1377                           ; 1 bytes @ 0x4
  1378                           
  1379     0074                     ??___awdiv:	
  1380                           ; 1 bytes @ 0x4
  1381                           
  1382     0074                     ??i1_LCD_Clear:	
  1383                           ; 1 bytes @ 0x4
  1384                           
  1385     0074                     UARTsendString@str:	
  1386                           ; 1 bytes @ 0x4
  1387                           
  1388     0074                     LCD_Write_Char@High4:	
  1389                           ; 1 bytes @ 0x4
  1390                           
  1391     0074                     LCD_Set_Cursor@c:	
  1392                           ; 1 bytes @ 0x4
  1393                           
  1394     0074                     clearBuffer@buffer:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397     0074                     ___awdiv@counter:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400     0074                     memcpy@s1:	
  1401                           ; 1 bytes @ 0x4
  1402                           
  1403                           
  1404                           ; 1 bytes @ 0x4
  1405     0074                     	ds	1
  1406     0075                     ??_LCD_Set_Cursor:
  1407     0075                     ??_RS485sendString:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410     0075                     UARTrcvString@rcv_buffer:	
  1411                           ; 1 bytes @ 0x5
  1412                           
  1413     0075                     LCD_Write_Char@Data:	
  1414                           ; 1 bytes @ 0x5
  1415                           
  1416     0075                     clearBuffer@i:	
  1417                           ; 1 bytes @ 0x5
  1418                           
  1419     0075                     ___awdiv@sign:	
  1420                           ; 1 bytes @ 0x5
  1421                           
  1422     0075                     memcpy@n:	
  1423                           ; 1 bytes @ 0x5
  1424                           
  1425                           
  1426                           ; 2 bytes @ 0x5
  1427     0075                     	ds	1
  1428     0076                     ??_LCD_Write_String:
  1429     0076                     ?_RS485rcvString:	
  1430                           ; 1 bytes @ 0x6
  1431                           
  1432     0076                     LCD_Set_Cursor@r:	
  1433                           ; 2 bytes @ 0x6
  1434                           
  1435     0076                     RS485sendString@str:	
  1436                           ; 1 bytes @ 0x6
  1437                           
  1438     0076                     crc16@temp:	
  1439                           ; 1 bytes @ 0x6
  1440                           
  1441     0076                     RS485rcvString@length:	
  1442                           ; 1 bytes @ 0x6
  1443                           
  1444     0076                     ___awdiv@quotient:	
  1445                           ; 2 bytes @ 0x6
  1446                           
  1447                           
  1448                           ; 2 bytes @ 0x6
  1449     0076                     	ds	1
  1450     0077                     ??_memcpy:
  1451     0077                     LCD_Set_Cursor@Low4:	
  1452                           ; 1 bytes @ 0x7
  1453                           
  1454     0077                     crc16@buffer:	
  1455                           ; 1 bytes @ 0x7
  1456                           
  1457     0077                     memcpy@tmp:	
  1458                           ; 1 bytes @ 0x7
  1459                           
  1460     0077                     LCD_Write_String@i:	
  1461                           ; 1 bytes @ 0x7
  1462                           
  1463                           
  1464                           ; 2 bytes @ 0x7
  1465     0077                     	ds	1
  1466     0078                     ??_RS485rcvString:
  1467     0078                     LCD_Set_Cursor@High4:	
  1468                           ; 1 bytes @ 0x8
  1469                           
  1470     0078                     memcpy@d1:	
  1471                           ; 1 bytes @ 0x8
  1472                           
  1473     0078                     RS485rcvString@done:	
  1474                           ; 1 bytes @ 0x8
  1475                           
  1476     0078                     crc16@crcWord:	
  1477                           ; 2 bytes @ 0x8
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x8
  1481     0078                     	ds	1
  1482     0079                     LCD_Write_String@str:
  1483     0079                     LCD_Set_Cursor@Temp:	
  1484                           ; 1 bytes @ 0x9
  1485                           
  1486     0079                     memcpy@d:	
  1487                           ; 1 bytes @ 0x9
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x9
  1491     0079                     	ds	1
  1492     007A                     ?_modbusResponseCoilsRead:
  1493     007A                     ?_modbusResponseRegistersRead:	
  1494                           ; 1 bytes @ 0xA
  1495                           
  1496     007A                     ?_modbusResponseMultipleWrite:	
  1497                           ; 1 bytes @ 0xA
  1498                           
  1499     007A                     RS485rcvString@rcv_buffer:	
  1500                           ; 1 bytes @ 0xA
  1501                           
  1502     007A                     memcpy@s:	
  1503                           ; 1 bytes @ 0xA
  1504                           
  1505     007A                     modbusResponseCoilsRead@length:	
  1506                           ; 1 bytes @ 0xA
  1507                           
  1508     007A                     modbusResponseRegistersRead@length:	
  1509                           ; 2 bytes @ 0xA
  1510                           
  1511     007A                     modbusResponseMultipleWrite@length:	
  1512                           ; 2 bytes @ 0xA
  1513                           
  1514                           
  1515                           ; 2 bytes @ 0xA
  1516     007A                     	ds	1
  1517     007B                     ?_modbusResponseSingleWrite:
  1518     007B                     ?_modbusRcvRequest:	
  1519                           ; 1 bytes @ 0xB
  1520                           
  1521     007B                     modbusResponseSingleWrite@length:	
  1522                           ; 2 bytes @ 0xB
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0xB
  1526     007B                     	ds	1
  1527     007C                     modbusResponseCoilsRead@rcv_buffer:
  1528     007C                     modbusResponseRegistersRead@rcv_buffer:	
  1529                           ; 1 bytes @ 0xC
  1530                           
  1531     007C                     modbusResponseMultipleWrite@rcv_buffer:	
  1532                           ; 1 bytes @ 0xC
  1533                           
  1534                           
  1535                           ; 1 bytes @ 0xC
  1536     007C                     	ds	1
  1537     007D                     modbusResponseCoilsRead@coil_value:
  1538     007D                     modbusResponseRegistersRead@register_value:	
  1539                           ; 1 bytes @ 0xD
  1540                           
  1541     007D                     modbusResponseSingleWrite@rcv_buffer:	
  1542                           ; 1 bytes @ 0xD
  1543                           
  1544                           
  1545                           ; 1 bytes @ 0xD
  1546     007D                     	ds	1
  1547     007E                     ??_modbusMesHandling:
  1548     007E                     ??_modbusResponseSingleWrite:	
  1549                           ; 1 bytes @ 0xE
  1550                           
  1551                           
  1552                           	psect	cstackBANK0
  1553     003B                     __pcstackBANK0:	
  1554                           ; 1 bytes @ 0xE
  1555                           
  1556     003B                     ??_modbusRcvRequest:
  1557     003B                     ??_modbusResponseCoilsRead:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     003B                     ??_modbusResponseRegistersRead:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563     003B                     ??_modbusResponseMultipleWrite:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566     003B                     modbusResponseSingleWrite@tx_buffer:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569                           
  1570                           ; 1 bytes @ 0x0
  1571     003B                     	ds	2
  1572     003D                     modbusRcvRequest@modbus_rcv_request_done:
  1573     003D                     modbusResponseCoilsRead@coil_num:	
  1574                           ; 2 bytes @ 0x2
  1575                           
  1576     003D                     modbusResponseMultipleWrite@checksum:	
  1577                           ; 2 bytes @ 0x2
  1578                           
  1579                           
  1580                           ; 2 bytes @ 0x2
  1581     003D                     	ds	2
  1582     003F                     modbusRcvRequest@rcv_buffer:
  1583     003F                     modbusResponseMultipleWrite@tx_buffer:	
  1584                           ; 1 bytes @ 0x4
  1585                           
  1586     003F                     modbusResponseCoilsRead@checksum:	
  1587                           ; 1 bytes @ 0x4
  1588                           
  1589                           
  1590                           ; 2 bytes @ 0x4
  1591     003F                     	ds	1
  1592     0040                     modbusResponseMultipleWrite@i:
  1593                           
  1594                           ; 1 bytes @ 0x5
  1595     0040                     	ds	1
  1596     0041                     modbusResponseCoilsRead@i:
  1597                           
  1598                           ; 1 bytes @ 0x6
  1599     0041                     	ds	1
  1600     0042                     modbusResponseCoilsRead@tx_buffer:
  1601     0042                     modbusResponseRegistersRead@register_num:	
  1602                           ; 1 bytes @ 0x7
  1603                           
  1604                           
  1605                           ; 2 bytes @ 0x7
  1606     0042                     	ds	2
  1607     0044                     modbusResponseRegistersRead@checksum:
  1608                           
  1609                           ; 2 bytes @ 0x9
  1610     0044                     	ds	2
  1611     0046                     modbusResponseRegistersRead@i:
  1612                           
  1613                           ; 1 bytes @ 0xB
  1614     0046                     	ds	1
  1615     0047                     modbusResponseRegistersRead@tx_buffer:
  1616                           
  1617                           ; 1 bytes @ 0xC
  1618     0047                     	ds	1
  1619     0048                     modbusMesHandling@function:
  1620                           
  1621                           ; 1 bytes @ 0xD
  1622     0048                     	ds	1
  1623     0049                     ??_ISR:
  1624                           
  1625                           ; 1 bytes @ 0xE
  1626     0049                     	ds	4
  1627     004D                     ??_modbusRTUInit:
  1628     004D                     ??_UARTTransRcvInit:	
  1629                           ; 1 bytes @ 0x12
  1630                           
  1631     004D                     ??_LCD_DATA:	
  1632                           ; 1 bytes @ 0x12
  1633                           
  1634     004D                     ??_RS485TxConfig:	
  1635                           ; 1 bytes @ 0x12
  1636                           
  1637     004D                     ??_RS485Init:	
  1638                           ; 1 bytes @ 0x12
  1639                           
  1640     004D                     LCD_DATA@Data:	
  1641                           ; 1 bytes @ 0x12
  1642                           
  1643                           
  1644                           ; 1 bytes @ 0x12
  1645     004D                     	ds	1
  1646     004E                     ??_LCD_CMD:
  1647                           
  1648                           ; 1 bytes @ 0x13
  1649     004E                     	ds	2
  1650     0050                     LCD_CMD@CMD:
  1651                           
  1652                           ; 1 bytes @ 0x15
  1653     0050                     	ds	1
  1654     0051                     ??_LCD_Clear:
  1655     0051                     ??_LCD_Init:	
  1656                           ; 1 bytes @ 0x16
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x16
  1660     0051                     	ds	2
  1661     0053                     ??_main:
  1662                           
  1663                           	psect	maintext
  1664     0EEE                     __pmaintext:	
  1665                           ; 1 bytes @ 0x18
  1666 ;;
  1667 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1668 ;;
  1669 ;; *************** function _main *****************
  1670 ;; Defined at:
  1671 ;;		line 35 in file "PIC16F877A_RS485_ModbusRTU_slave.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : B00/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels required when called: 9
  1691 ;; This function calls:
  1692 ;;		_LCD_Clear
  1693 ;;		_LCD_Init
  1694 ;;		_modbusRTUInit
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700     0EEE                     _main:	
  1701                           ;psect for function _main
  1702                           
  1703     0EEE                     l1919:	
  1704                           ;incstack = 0
  1705 ;; hardware stack exceeded
  1706                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1707                           
  1708                           
  1709                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 37:     modbusRTUInit();
  1710     0EEE  120A  158A  26A8  120A  158A  	fcall	_modbusRTUInit
  1711                           
  1712                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 40:     LCD_Init();
  1713     0EF3  120A  118A  2587  120A  158A  	fcall	_LCD_Init
  1714                           
  1715                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 41:     LCD_Clear();
  1716     0EF8  120A  158A  26E1  120A  158A  	fcall	_LCD_Clear
  1717     0EFD                     l111:	
  1718                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 44:     while(1)
  1719                           
  1720     0EFD                     l112:	
  1721                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 45:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 47:  
      +                             }
  1722                           
  1723     0EFD  2EFD               	goto	l111
  1724     0EFE  120A  118A  2812   	ljmp	start
  1725     0F01                     __end_of_main:
  1726                           
  1727                           	psect	text1
  1728     0EA8                     __ptext1:	
  1729 ;; *************** function _modbusRTUInit *****************
  1730 ;; Defined at:
  1731 ;;		line 17 in file "RS485_ModbusRTU_slave.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 8
  1752 ;; This function calls:
  1753 ;;		_RS485Init
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759     0EA8                     _modbusRTUInit:	
  1760                           ;psect for function _modbusRTUInit
  1761                           
  1762     0EA8                     l1869:	
  1763                           ;incstack = 0
  1764 ;; hardware stack exceeded
  1765                           ; Regs used in _modbusRTUInit: [wreg+status,2+status,0+pclath+cstack]
  1766                           
  1767                           
  1768                           ;RS485_ModbusRTU_slave.c: 19:     RS485Init();
  1769     0EA8  120A  158A  26BD  120A  158A  	fcall	_RS485Init
  1770     0EAD                     l267:
  1771     0EAD  0008               	return
  1772     0EAE                     __end_of_modbusRTUInit:
  1773                           
  1774                           	psect	text2
  1775     0EBD                     __ptext2:	
  1776 ;; *************** function _RS485Init *****************
  1777 ;; Defined at:
  1778 ;;		line 19 in file "PIC16F877A_RS485.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 7
  1799 ;; This function calls:
  1800 ;;		_RS485TxConfig
  1801 ;;		_UARTTransRcvInit
  1802 ;; This function is called by:
  1803 ;;		_modbusRTUInit
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     0EBD                     _RS485Init:	
  1808                           ;psect for function _RS485Init
  1809                           
  1810     0EBD                     l1745:	
  1811                           ;incstack = 0
  1812 ;; hardware stack exceeded
  1813                           ; Regs used in _RS485Init: [wreg+status,2+status,0+pclath+cstack]
  1814                           
  1815                           
  1816                           ;PIC16F877A_RS485.c: 22:     RS485TxConfig();
  1817     0EBD  120A  158A  26AE  120A  158A  	fcall	_RS485TxConfig
  1818     0EC2                     l1747:
  1819                           
  1820                           ;PIC16F877A_RS485.c: 24:     UARTTransRcvInit();
  1821     0EC2  120A  158A  27C3  120A  158A  	fcall	_UARTTransRcvInit
  1822     0EC7                     l220:
  1823     0EC7  0008               	return
  1824     0EC8                     __end_of_RS485Init:
  1825                           
  1826                           	psect	text3
  1827     0FC3                     __ptext3:	
  1828 ;; *************** function _UARTTransRcvInit *****************
  1829 ;; Defined at:
  1830 ;;		line 48 in file "PIC16F877A_UART.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 6
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_RS485Init
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858     0FC3                     _UARTTransRcvInit:	
  1859                           ;psect for function _UARTTransRcvInit
  1860                           
  1861     0FC3                     l1457:	
  1862                           ;incstack = 0
  1863 ;; hardware stack exceeded
  1864                           ; Regs used in _UARTTransRcvInit: [wreg]
  1865                           
  1866                           
  1867                           ;PIC16F877A_UART.c: 51:     TRISC6 = 1;
  1868     0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  1869     0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  1870     0FC5  1707               	bsf	7,6	;volatile
  1871                           
  1872                           ;PIC16F877A_UART.c: 52:     TRISC7 = 1;
  1873     0FC6  1787               	bsf	7,7	;volatile
  1874                           
  1875                           ;PIC16F877A_UART.c: 54:     SPEN = 1;
  1876     0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  1877     0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  1878     0FC9  1798               	bsf	24,7	;volatile
  1879                           
  1880                           ;PIC16F877A_UART.c: 56:     SYNC = 0;
  1881     0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  1882     0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  1883     0FCC  1218               	bcf	24,4	;volatile
  1884                           
  1885                           ;PIC16F877A_UART.c: 58:     TX9 = 0;
  1886     0FCD  1318               	bcf	24,6	;volatile
  1887                           
  1888                           ;PIC16F877A_UART.c: 59:     RX9 = 0;
  1889     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0FD0  1318               	bcf	24,6	;volatile
  1892                           
  1893                           ;PIC16F877A_UART.c: 61:     TXEN = 1;
  1894     0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1895     0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1896     0FD3  1698               	bsf	24,5	;volatile
  1897                           
  1898                           ;PIC16F877A_UART.c: 62:     CREN = 1;
  1899     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1900     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1901     0FD6  1618               	bsf	24,4	;volatile
  1902                           
  1903                           ;PIC16F877A_UART.c: 64:     BRGH = 1;
  1904     0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1905     0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1906     0FD9  1518               	bsf	24,2	;volatile
  1907     0FDA                     l1459:
  1908                           
  1909                           ;PIC16F877A_UART.c: 65:     SPBRG = ((16000000) / 57600) / 16 - 1;
  1910     0FDA  3010               	movlw	16
  1911     0FDB  0099               	movwf	25	;volatile
  1912     0FDC                     l1461:
  1913                           
  1914                           ;PIC16F877A_UART.c: 67:     RCIE = 1;
  1915     0FDC  168C               	bsf	12,5	;volatile
  1916     0FDD                     l1463:
  1917                           
  1918                           ;PIC16F877A_UART.c: 68:     PEIE = 1;
  1919     0FDD  170B               	bsf	11,6	;volatile
  1920     0FDE                     l1465:
  1921                           
  1922                           ;PIC16F877A_UART.c: 69:     GIE = 1;
  1923     0FDE  178B               	bsf	11,7	;volatile
  1924     0FDF                     l43:
  1925     0FDF  0008               	return
  1926     0FE0                     __end_of_UARTTransRcvInit:
  1927                           
  1928                           	psect	text4
  1929     0EAE                     __ptext4:	
  1930 ;; *************** function _RS485TxConfig *****************
  1931 ;; Defined at:
  1932 ;;		line 8 in file "PIC16F877A_RS485.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		None
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 6
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_RS485Init
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960     0EAE                     _RS485TxConfig:	
  1961                           ;psect for function _RS485TxConfig
  1962                           
  1963     0EAE                     l1525:	
  1964                           ;incstack = 0
  1965 ;; hardware stack exceeded
  1966                           ; Regs used in _RS485TxConfig: []
  1967                           
  1968                           
  1969                           ;PIC16F877A_RS485.c: 11:     TRISD0 = 0;
  1970     0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  1971     0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  1972     0EB0  1008               	bcf	8,0	;volatile
  1973                           
  1974                           ;PIC16F877A_RS485.c: 13:     RD0 = 0;
  1975     0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  1976     0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  1977     0EB3  1008               	bcf	8,0	;volatile
  1978     0EB4                     l217:
  1979     0EB4  0008               	return
  1980     0EB5                     __end_of_RS485TxConfig:
  1981                           
  1982                           	psect	text5
  1983     0587                     __ptext5:	
  1984 ;; *************** function _LCD_Init *****************
  1985 ;; Defined at:
  1986 ;;		line 47 in file "LCD16x2.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0
  2002 ;;      Temps:          0       2       0       0       0
  2003 ;;      Totals:         0       2       0       0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 8
  2007 ;; This function calls:
  2008 ;;		_LCD_CMD
  2009 ;;		_LCD_DATA
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015     0587                     _LCD_Init:	
  2016                           ;psect for function _LCD_Init
  2017                           
  2018     0587                     l1871:	
  2019                           ;incstack = 0
  2020 ;; hardware stack exceeded
  2021                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2022                           
  2023                           
  2024                           ;LCD16x2.c: 50:   TRISD = 0x00;
  2025     0587  1683               	bsf	3,5	;RP0=1, select bank1
  2026     0588  1303               	bcf	3,6	;RP1=0, select bank1
  2027     0589  0188               	clrf	8	;volatile
  2028     058A                     l1873:
  2029                           
  2030                           ;LCD16x2.c: 51:   TRISD2 = 0;
  2031     058A  1108               	bcf	8,2	;volatile
  2032     058B                     l1875:
  2033                           
  2034                           ;LCD16x2.c: 52:   TRISD3 = 0;
  2035     058B  1188               	bcf	8,3	;volatile
  2036     058C                     l1877:
  2037                           
  2038                           ;LCD16x2.c: 54:   LCD_DATA(0x00);
  2039     058C  3000               	movlw	0
  2040     058D  120A  158A  27E0  120A  118A  	fcall	_LCD_DATA
  2041     0592                     l1879:
  2042                           
  2043                           ;LCD16x2.c: 55:   _delay((unsigned long)((30)*(16000000/4000.0)));
  2044     0592  309C               	movlw	156
  2045     0593  1283               	bcf	3,5	;RP0=0, select bank0
  2046     0594  1303               	bcf	3,6	;RP1=0, select bank0
  2047     0595  00D2               	movwf	??_LCD_Init+1
  2048     0596  30D6               	movlw	214
  2049     0597  00D1               	movwf	??_LCD_Init
  2050     0598                     u1197:
  2051     0598  0BD1               	decfsz	??_LCD_Init,f
  2052     0599  2D98               	goto	u1197
  2053     059A  0BD2               	decfsz	??_LCD_Init+1,f
  2054     059B  2D98               	goto	u1197
  2055     059C  0000               	nop
  2056     059D                     l1881:
  2057                           
  2058                           ;LCD16x2.c: 56:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  2059     059D  3003               	movlw	3
  2060     059E  1283               	bcf	3,5	;RP0=0, select bank0
  2061     059F  1303               	bcf	3,6	;RP1=0, select bank0
  2062     05A0  00D2               	movwf	??_LCD_Init+1
  2063     05A1  3097               	movlw	151
  2064     05A2  00D1               	movwf	??_LCD_Init
  2065     05A3                     u1207:
  2066     05A3  0BD1               	decfsz	??_LCD_Init,f
  2067     05A4  2DA3               	goto	u1207
  2068     05A5  0BD2               	decfsz	??_LCD_Init+1,f
  2069     05A6  2DA3               	goto	u1207
  2070     05A7                     l1883:
  2071                           
  2072                           ;LCD16x2.c: 57:   LCD_CMD(0x03);
  2073     05A7  3003               	movlw	3
  2074     05A8  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2075     05AD                     l1885:
  2076                           
  2077                           ;LCD16x2.c: 58:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2078     05AD  301A               	movlw	26
  2079     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2080     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2081     05B0  00D2               	movwf	??_LCD_Init+1
  2082     05B1  30F7               	movlw	247
  2083     05B2  00D1               	movwf	??_LCD_Init
  2084     05B3                     u1217:
  2085     05B3  0BD1               	decfsz	??_LCD_Init,f
  2086     05B4  2DB3               	goto	u1217
  2087     05B5  0BD2               	decfsz	??_LCD_Init+1,f
  2088     05B6  2DB3               	goto	u1217
  2089     05B7  2DB8               	nop2
  2090     05B8                     l1887:
  2091                           
  2092                           ;LCD16x2.c: 59:   LCD_CMD(0x03);
  2093     05B8  3003               	movlw	3
  2094     05B9  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2095     05BE                     l1889:
  2096                           
  2097                           ;LCD16x2.c: 60:   _delay((unsigned long)((150)*(16000000/4000000.0)));
  2098     05BE  30C7               	movlw	199
  2099     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2100     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2101     05C1  00D1               	movwf	??_LCD_Init
  2102     05C2                     u1227:
  2103     05C2  0BD1               	decfsz	??_LCD_Init,f
  2104     05C3  2DC2               	goto	u1227
  2105     05C4                     l1891:
  2106                           
  2107                           ;LCD16x2.c: 61:   LCD_CMD(0x03);
  2108     05C4  3003               	movlw	3
  2109     05C5  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2110     05CA                     l1893:
  2111                           
  2112                           ;LCD16x2.c: 62:   LCD_CMD(0x02);
  2113     05CA  3002               	movlw	2
  2114     05CB  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2115     05D0                     l1895:
  2116                           
  2117                           ;LCD16x2.c: 63:   LCD_CMD(0x02);
  2118     05D0  3002               	movlw	2
  2119     05D1  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2120     05D6                     l1897:
  2121                           
  2122                           ;LCD16x2.c: 64:   LCD_CMD(0x08);
  2123     05D6  3008               	movlw	8
  2124     05D7  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2125     05DC                     l1899:
  2126                           
  2127                           ;LCD16x2.c: 65:   LCD_CMD(0x00);
  2128     05DC  3000               	movlw	0
  2129     05DD  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2130     05E2                     l1901:
  2131                           
  2132                           ;LCD16x2.c: 66:   LCD_CMD(0x0C);
  2133     05E2  300C               	movlw	12
  2134     05E3  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2135     05E8                     l1903:
  2136                           
  2137                           ;LCD16x2.c: 67:   LCD_CMD(0x00);
  2138     05E8  3000               	movlw	0
  2139     05E9  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2140     05EE                     l1905:
  2141                           
  2142                           ;LCD16x2.c: 68:   LCD_CMD(0x06);
  2143     05EE  3006               	movlw	6
  2144     05EF  120A  158A  2771  120A  118A  	fcall	_LCD_CMD
  2145     05F4                     l173:
  2146     05F4  0008               	return
  2147     05F5                     __end_of_LCD_Init:
  2148                           
  2149                           	psect	text6
  2150     0EE1                     __ptext6:	
  2151 ;; *************** function _LCD_Clear *****************
  2152 ;; Defined at:
  2153 ;;		line 99 in file "LCD16x2.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 8
  2174 ;; This function calls:
  2175 ;;		_LCD_CMD
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181     0EE1                     _LCD_Clear:	
  2182                           ;psect for function _LCD_Clear
  2183                           
  2184     0EE1                     l1809:	
  2185                           ;incstack = 0
  2186 ;; hardware stack exceeded
  2187                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2188                           
  2189                           
  2190                           ;LCD16x2.c: 101:   LCD_CMD(0);
  2191     0EE1  3000               	movlw	0
  2192     0EE2  120A  158A  2771  120A  158A  	fcall	_LCD_CMD
  2193                           
  2194                           ;LCD16x2.c: 102:   LCD_CMD(1);
  2195     0EE7  3001               	movlw	1
  2196     0EE8  120A  158A  2771  120A  158A  	fcall	_LCD_CMD
  2197     0EED                     l185:
  2198     0EED  0008               	return
  2199     0EEE                     __end_of_LCD_Clear:
  2200                           
  2201                           	psect	text7
  2202     0F71                     __ptext7:	
  2203 ;; *************** function _LCD_CMD *****************
  2204 ;; Defined at:
  2205 ;;		line 31 in file "LCD16x2.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  CMD             1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  CMD             1   21[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, pclath, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       0       0       0       0
  2220 ;;      Locals:         0       1       0       0       0
  2221 ;;      Temps:          0       2       0       0       0
  2222 ;;      Totals:         0       3       0       0       0
  2223 ;;Total ram usage:        3 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 7
  2226 ;; This function calls:
  2227 ;;		_LCD_DATA
  2228 ;; This function is called by:
  2229 ;;		_LCD_Init
  2230 ;;		_LCD_Clear
  2231 ;;		_LCD_SR
  2232 ;;		_LCD_SL
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     0F71                     _LCD_CMD:	
  2237                           ;psect for function _LCD_CMD
  2238                           
  2239                           
  2240                           ;incstack = 0
  2241 ;; hardware stack exceeded
  2242                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2243                           ;LCD_CMD@CMD stored from wreg
  2244     0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2245     0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2246     0F73  00D0               	movwf	LCD_CMD@CMD
  2247     0F74                     l1733:
  2248                           
  2249                           ;LCD16x2.c: 31: static void LCD_CMD(uint8_t CMD);LCD16x2.c: 32: {;LCD16x2.c: 34:   RD2 =
      +                           0;
  2250     0F74  1108               	bcf	8,2	;volatile
  2251     0F75                     l1735:
  2252                           
  2253                           ;LCD16x2.c: 36:   LCD_DATA(CMD);
  2254     0F75  0850               	movf	LCD_CMD@CMD,w
  2255     0F76  120A  158A  27E0  120A  158A  	fcall	_LCD_DATA
  2256     0F7B                     l1737:
  2257                           
  2258                           ;LCD16x2.c: 38:   RD3 = 1;
  2259     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2260     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2261     0F7D  1588               	bsf	8,3	;volatile
  2262     0F7E                     l1739:
  2263                           
  2264                           ;LCD16x2.c: 39:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  2265     0F7E  3003               	movlw	3
  2266     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  2267     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  2268     0F81  00CF               	movwf	??_LCD_CMD+1
  2269     0F82  3097               	movlw	151
  2270     0F83  00CE               	movwf	??_LCD_CMD
  2271     0F84                     u1237:
  2272     0F84  0BCE               	decfsz	??_LCD_CMD,f
  2273     0F85  2F84               	goto	u1237
  2274     0F86  0BCF               	decfsz	??_LCD_CMD+1,f
  2275     0F87  2F84               	goto	u1237
  2276     0F88                     l1741:
  2277                           
  2278                           ;LCD16x2.c: 40:   RD3 = 0;
  2279     0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2280     0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2281     0F8A  1188               	bcf	8,3	;volatile
  2282     0F8B                     l170:
  2283     0F8B  0008               	return
  2284     0F8C                     __end_of_LCD_CMD:
  2285                           
  2286                           	psect	text8
  2287     0FE0                     __ptext8:	
  2288 ;; *************** function _LCD_DATA *****************
  2289 ;; Defined at:
  2290 ;;		line 9 in file "LCD16x2.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  Data            1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  Data            1   18[BANK0 ] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       1       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         0       1       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 6
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_LCD_CMD
  2315 ;;		_LCD_Init
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319     0FE0                     _LCD_DATA:	
  2320                           ;psect for function _LCD_DATA
  2321                           
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _LCD_DATA: [wreg]
  2325                           ;LCD_DATA@Data stored from wreg
  2326     0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0FE2  00CD               	movwf	LCD_DATA@Data
  2329     0FE3                     l1491:
  2330                           
  2331                           ;LCD16x2.c: 9: static void LCD_DATA(uint8_t Data);LCD16x2.c: 10: {;LCD16x2.c: 11:   if(D
      +                          ata & 1)
  2332     0FE3  1C4D               	btfss	LCD_DATA@Data,0
  2333     0FE4  2FE6               	goto	u671
  2334     0FE5  2FE7               	goto	u670
  2335     0FE6                     u671:
  2336     0FE6  2FE9               	goto	l159
  2337     0FE7                     u670:
  2338     0FE7                     l1493:
  2339                           
  2340                           ;LCD16x2.c: 12:     RD4 = 1;
  2341     0FE7  1608               	bsf	8,4	;volatile
  2342     0FE8  2FEA               	goto	l160
  2343     0FE9                     l159:	
  2344                           ;LCD16x2.c: 13:   else
  2345                           
  2346                           
  2347                           ;LCD16x2.c: 14:     RD4 = 0;
  2348     0FE9  1208               	bcf	8,4	;volatile
  2349     0FEA                     l160:
  2350                           
  2351                           ;LCD16x2.c: 15:   if(Data & 2)
  2352     0FEA  1CCD               	btfss	LCD_DATA@Data,1
  2353     0FEB  2FED               	goto	u681
  2354     0FEC  2FEE               	goto	u680
  2355     0FED                     u681:
  2356     0FED  2FF0               	goto	l161
  2357     0FEE                     u680:
  2358     0FEE                     l1495:
  2359                           
  2360                           ;LCD16x2.c: 16:     RD5 = 1;
  2361     0FEE  1688               	bsf	8,5	;volatile
  2362     0FEF  2FF1               	goto	l162
  2363     0FF0                     l161:	
  2364                           ;LCD16x2.c: 17:   else
  2365                           
  2366                           
  2367                           ;LCD16x2.c: 18:     RD5 = 0;
  2368     0FF0  1288               	bcf	8,5	;volatile
  2369     0FF1                     l162:
  2370                           
  2371                           ;LCD16x2.c: 19:   if(Data & 4)
  2372     0FF1  1D4D               	btfss	LCD_DATA@Data,2
  2373     0FF2  2FF4               	goto	u691
  2374     0FF3  2FF5               	goto	u690
  2375     0FF4                     u691:
  2376     0FF4  2FF7               	goto	l163
  2377     0FF5                     u690:
  2378     0FF5                     l1497:
  2379                           
  2380                           ;LCD16x2.c: 20:     RD6 = 1;
  2381     0FF5  1708               	bsf	8,6	;volatile
  2382     0FF6  2FF8               	goto	l164
  2383     0FF7                     l163:	
  2384                           ;LCD16x2.c: 21:   else
  2385                           
  2386                           
  2387                           ;LCD16x2.c: 22:     RD6 = 0;
  2388     0FF7  1308               	bcf	8,6	;volatile
  2389     0FF8                     l164:
  2390                           
  2391                           ;LCD16x2.c: 23:   if(Data & 8)
  2392     0FF8  1DCD               	btfss	LCD_DATA@Data,3
  2393     0FF9  2FFB               	goto	u701
  2394     0FFA  2FFC               	goto	u700
  2395     0FFB                     u701:
  2396     0FFB  2FFE               	goto	l165
  2397     0FFC                     u700:
  2398     0FFC                     l1499:
  2399                           
  2400                           ;LCD16x2.c: 24:     RD7 = 1;
  2401     0FFC  1788               	bsf	8,7	;volatile
  2402     0FFD  2FFF               	goto	l167
  2403     0FFE                     l165:	
  2404                           ;LCD16x2.c: 25:   else
  2405                           
  2406                           
  2407                           ;LCD16x2.c: 26:     RD7 = 0;
  2408     0FFE  1388               	bcf	8,7	;volatile
  2409     0FFF                     l167:
  2410     0FFF  0008               	return
  2411     1000                     __end_of_LCD_DATA:
  2412                           
  2413                           	psect	text9
  2414     0037                     __ptext9:	
  2415 ;; *************** function _ISR *****************
  2416 ;; Defined at:
  2417 ;;		line 22 in file "PIC16F877A_RS485_ModbusRTU_slave.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0
  2433 ;;      Temps:          0       4       0       0       0
  2434 ;;      Totals:         0       4       0       0       0
  2435 ;;Total ram usage:        4 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 5
  2438 ;; This function calls:
  2439 ;;		_LCD_Set_Cursor
  2440 ;;		_modbusMesHandling
  2441 ;;		_modbusRcvRequest
  2442 ;;		i1_LCD_Clear
  2443 ;; This function is called by:
  2444 ;;		Interrupt level 1
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     0037                     _ISR:	
  2449                           ;psect for function _ISR
  2450                           
  2451     0037                     i1l1911:
  2452                           
  2453                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 24:     if(RCIF)
  2454     0037  1E8C               	btfss	12,5	;volatile
  2455     0038  283A               	goto	u117_21
  2456     0039  283B               	goto	u117_20
  2457     003A                     u117_21:
  2458     003A  2859               	goto	i1l106
  2459     003B                     u117_20:
  2460     003B                     i1l1913:
  2461                           
  2462                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 25:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 26:  
      +                                 if(modbusRcvRequest(rcv_buffer))
  2463     003B  30B9               	movlw	(low (_rcv_buffer| 0))& (0+255)
  2464     003C  120A  118A  2510  120A  118A  	fcall	_modbusRcvRequest
  2465     0041  087B               	movf	?_modbusRcvRequest,w
  2466     0042  047C               	iorwf	?_modbusRcvRequest+1,w
  2467     0043  1903               	btfsc	3,2
  2468     0044  2846               	goto	u118_21
  2469     0045  2847               	goto	u118_20
  2470     0046                     u118_21:
  2471     0046  2859               	goto	i1l106
  2472     0047                     u118_20:
  2473     0047                     i1l1915:
  2474                           
  2475                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 27:         {;PIC16F877A_RS485_ModbusRTU_slave.c: 2
      +                          8:             LCD_Clear();
  2476     0047  120A  158A  26D4  120A  118A  	fcall	i1_LCD_Clear
  2477                           
  2478                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 29:             LCD_Set_Cursor(1, 1);
  2479     004C  01F4               	clrf	LCD_Set_Cursor@c
  2480     004D  0AF4               	incf	LCD_Set_Cursor@c,f
  2481     004E  3001               	movlw	1
  2482     004F  120A  118A  2796  120A  118A  	fcall	_LCD_Set_Cursor
  2483     0054                     i1l1917:
  2484                           
  2485                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 30:             modbusMesHandling();
  2486     0054  120A  118A  23E3  120A  118A  	fcall	_modbusMesHandling
  2487     0059                     i1l106:
  2488     0059  1283               	bcf	3,5	;RP0=0, select bank0
  2489     005A  1303               	bcf	3,6	;RP1=0, select bank0
  2490     005B  084C               	movf	??_ISR+3,w
  2491     005C  00FF               	movwf	btemp+1
  2492     005D  084B               	movf	??_ISR+2,w
  2493     005E  008A               	movwf	10
  2494     005F  084A               	movf	??_ISR+1,w
  2495     0060  0084               	movwf	4
  2496     0061  0E49               	swapf	??_ISR,w
  2497     0062  0083               	movwf	3
  2498     0063  0EFE               	swapf	btemp,f
  2499     0064  0E7E               	swapf	btemp,w
  2500     0065  0009               	retfie
  2501     0066                     __end_of_ISR:
  2502                           
  2503                           	psect	intentry
  2504     0004                     __pintentry:	
  2505                           ;incstack = 0
  2506 ;; hardware stack exceeded
  2507                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2508                           
  2509     0004                     interrupt_function:
  2510     007E                     saved_w	set	btemp
  2511     0004  00FE               	movwf	btemp
  2512     0005  0E03               	swapf	3,w
  2513     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2514     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2515     0008  00C9               	movwf	??_ISR
  2516     0009  0804               	movf	4,w
  2517     000A  00CA               	movwf	??_ISR+1
  2518     000B  080A               	movf	10,w
  2519     000C  00CB               	movwf	??_ISR+2
  2520     000D  087F               	movf	btemp+1,w
  2521     000E  00CC               	movwf	??_ISR+3
  2522     000F  120A  118A  2837   	ljmp	_ISR
  2523                           
  2524                           	psect	text10
  2525     0ED4                     __ptext10:	
  2526 ;; *************** function i1_LCD_Clear *****************
  2527 ;; Defined at:
  2528 ;;		line 99 in file "LCD16x2.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0
  2545 ;;      Totals:         0       0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 2
  2549 ;; This function calls:
  2550 ;;		i1_LCD_CMD
  2551 ;; This function is called by:
  2552 ;;		_ISR
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556     0ED4                     i1_LCD_Clear:	
  2557                           ;psect for function i1_LCD_Clear
  2558                           
  2559     0ED4                     i1l1907:	
  2560                           ;incstack = 0
  2561                           ; Regs used in i1_LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2562                           
  2563                           
  2564                           ;LCD16x2.c: 101:   LCD_CMD(0);
  2565     0ED4  3000               	movlw	0
  2566     0ED5  120A  158A  2757  120A  158A  	fcall	i1_LCD_CMD
  2567                           
  2568                           ;LCD16x2.c: 102:   LCD_CMD(1);
  2569     0EDA  3001               	movlw	1
  2570     0EDB  120A  158A  2757  120A  158A  	fcall	i1_LCD_CMD
  2571     0EE0                     i1l185:
  2572     0EE0  0008               	return
  2573     0EE1                     __end_ofi1_LCD_Clear:
  2574                           
  2575                           	psect	text11
  2576     0510                     __ptext11:	
  2577 ;; *************** function _modbusRcvRequest *****************
  2578 ;; Defined at:
  2579 ;;		line 23 in file "RS485_ModbusRTU_slave.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  2582 ;;		 -> rcv_buffer(25), 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  rcv_buffer      1    4[BANK0 ] PTR unsigned char 
  2585 ;;		 -> rcv_buffer(25), 
  2586 ;;  modbus_rcv_r    2    2[BANK0 ] int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2   11[COMMON] int 
  2589 ;; Registers used:
  2590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         2       0       0       0       0
  2597 ;;      Locals:         0       3       0       0       0
  2598 ;;      Temps:          0       2       0       0       0
  2599 ;;      Totals:         2       5       0       0       0
  2600 ;;Total ram usage:        7 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 3
  2603 ;; This function calls:
  2604 ;;		_RS485rcvString
  2605 ;; This function is called by:
  2606 ;;		_ISR
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610     0510                     _modbusRcvRequest:	
  2611                           ;psect for function _modbusRcvRequest
  2612                           
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in _modbusRcvRequest: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2616                           ;modbusRcvRequest@rcv_buffer stored from wreg
  2617     0510  1283               	bcf	3,5	;RP0=0, select bank0
  2618     0511  1303               	bcf	3,6	;RP1=0, select bank0
  2619     0512  00BF               	movwf	modbusRcvRequest@rcv_buffer
  2620     0513                     i1l1769:
  2621                           
  2622                           ;RS485_ModbusRTU_slave.c: 23: int modbusRcvRequest(uint8_t *rcv_buffer);RS485_ModbusRTU_
      +                          slave.c: 24: {;RS485_ModbusRTU_slave.c: 26:     int modbus_rcv_request_done = RS485rcvSt
      +                          ring((char *)rcv_buffer, slave_rcv_buffer_len);
  2623     0513  0821               	movf	_slave_rcv_buffer_len+1,w
  2624     0514  00F7               	movwf	RS485rcvString@length+1
  2625     0515  0820               	movf	_slave_rcv_buffer_len,w
  2626     0516  00F6               	movwf	RS485rcvString@length
  2627     0517  083F               	movf	modbusRcvRequest@rcv_buffer,w
  2628     0518  120A  158A  2740  120A  118A  	fcall	_RS485rcvString
  2629     051D  0877               	movf	?_RS485rcvString+1,w
  2630     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2631     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2632     0520  00BE               	movwf	modbusRcvRequest@modbus_rcv_request_done+1
  2633     0521  0876               	movf	?_RS485rcvString,w
  2634     0522  00BD               	movwf	modbusRcvRequest@modbus_rcv_request_done
  2635     0523                     i1l1771:
  2636                           
  2637                           ;RS485_ModbusRTU_slave.c: 29:     if (modbus_rcv_request_done)
  2638     0523  083D               	movf	modbusRcvRequest@modbus_rcv_request_done,w
  2639     0524  043E               	iorwf	modbusRcvRequest@modbus_rcv_request_done+1,w
  2640     0525  1903               	btfsc	3,2
  2641     0526  2D28               	goto	u92_21
  2642     0527  2D29               	goto	u92_20
  2643     0528                     u92_21:
  2644     0528  2D3F               	goto	i1l1789
  2645     0529                     u92_20:
  2646     0529                     i1l1773:
  2647                           
  2648                           ;RS485_ModbusRTU_slave.c: 30:     {;RS485_ModbusRTU_slave.c: 31:         slave_rcv_buffe
      +                          r_len = 8;
  2649     0529  3008               	movlw	8
  2650     052A  00A0               	movwf	_slave_rcv_buffer_len
  2651     052B  3000               	movlw	0
  2652     052C  00A1               	movwf	_slave_rcv_buffer_len+1
  2653     052D                     i1l1775:
  2654                           
  2655                           ;RS485_ModbusRTU_slave.c: 32:         change_rcv_len = 0;
  2656     052D  01DB               	clrf	_change_rcv_len
  2657     052E                     i1l1777:
  2658                           
  2659                           ;RS485_ModbusRTU_slave.c: 33:         if (rcv_buffer[0] != 0x05)
  2660     052E  083F               	movf	modbusRcvRequest@rcv_buffer,w
  2661     052F  0084               	movwf	4
  2662     0530  3005               	movlw	5
  2663     0531  1383               	bcf	3,7	;select IRP bank0
  2664     0532  0600               	xorwf	0,w
  2665     0533  1903               	btfsc	3,2
  2666     0534  2D36               	goto	u93_21
  2667     0535  2D37               	goto	u93_20
  2668     0536                     u93_21:
  2669     0536  2D3A               	goto	i1l1785
  2670     0537                     u93_20:
  2671     0537                     i1l1779:
  2672                           
  2673                           ;RS485_ModbusRTU_slave.c: 34:             return 0;
  2674     0537  01FB               	clrf	?_modbusRcvRequest
  2675     0538  01FC               	clrf	?_modbusRcvRequest+1
  2676     0539  2D86               	goto	i1l272
  2677     053A                     i1l1785:
  2678                           
  2679                           ;RS485_ModbusRTU_slave.c: 36:             return 1;
  2680     053A  3001               	movlw	1
  2681     053B  00FB               	movwf	?_modbusRcvRequest
  2682     053C  3000               	movlw	0
  2683     053D  00FC               	movwf	?_modbusRcvRequest+1
  2684     053E  2D86               	goto	i1l272
  2685     053F                     i1l1789:
  2686                           
  2687                           ;RS485_ModbusRTU_slave.c: 40:     if (modbus_rcv_request_done == 0 && uart_str_idx == 2)
  2688     053F  083D               	movf	modbusRcvRequest@modbus_rcv_request_done,w
  2689     0540  043E               	iorwf	modbusRcvRequest@modbus_rcv_request_done+1,w
  2690     0541  1D03               	btfss	3,2
  2691     0542  2D44               	goto	u94_21
  2692     0543  2D45               	goto	u94_20
  2693     0544                     u94_21:
  2694     0544  2D5F               	goto	i1l1797
  2695     0545                     u94_20:
  2696     0545                     i1l1791:
  2697     0545  3002               	movlw	2
  2698     0546  0653               	xorwf	_uart_str_idx@PIC16F877A_UART$F221,w
  2699     0547  0454               	iorwf	_uart_str_idx@PIC16F877A_UART$F221+1,w
  2700     0548  1D03               	btfss	3,2
  2701     0549  2D4B               	goto	u95_21
  2702     054A  2D4C               	goto	u95_20
  2703     054B                     u95_21:
  2704     054B  2D5F               	goto	i1l1797
  2705     054C                     u95_20:
  2706     054C                     i1l1793:
  2707                           
  2708                           ;RS485_ModbusRTU_slave.c: 41:     {;RS485_ModbusRTU_slave.c: 42:         if (rcv_buffer[
      +                          1] == 0x0F || rcv_buffer[1] == 0x10)
  2709     054C  0A3F               	incf	modbusRcvRequest@rcv_buffer,w
  2710     054D  0084               	movwf	4
  2711     054E  300F               	movlw	15
  2712     054F  1383               	bcf	3,7	;select IRP bank0
  2713     0550  0600               	xorwf	0,w
  2714     0551  1903               	btfsc	3,2
  2715     0552  2D54               	goto	u96_21
  2716     0553  2D55               	goto	u96_20
  2717     0554                     u96_21:
  2718     0554  2D5D               	goto	i1l277
  2719     0555                     u96_20:
  2720     0555                     i1l1795:
  2721     0555  0A3F               	incf	modbusRcvRequest@rcv_buffer,w
  2722     0556  0084               	movwf	4
  2723     0557  3010               	movlw	16
  2724     0558  0600               	xorwf	0,w
  2725     0559  1D03               	btfss	3,2
  2726     055A  2D5C               	goto	u97_21
  2727     055B  2D5D               	goto	u97_20
  2728     055C                     u97_21:
  2729     055C  2D5F               	goto	i1l1797
  2730     055D                     u97_20:
  2731     055D                     i1l277:
  2732                           
  2733                           ;RS485_ModbusRTU_slave.c: 43:             change_rcv_len = 1;
  2734     055D  01DB               	clrf	_change_rcv_len
  2735     055E  0ADB               	incf	_change_rcv_len,f
  2736     055F                     i1l1797:
  2737                           
  2738                           ;RS485_ModbusRTU_slave.c: 47:     if (change_rcv_len)
  2739     055F  085B               	movf	_change_rcv_len,w
  2740     0560  1903               	btfsc	3,2
  2741     0561  2D63               	goto	u98_21
  2742     0562  2D64               	goto	u98_20
  2743     0563                     u98_21:
  2744     0563  2D82               	goto	i1l1805
  2745     0564                     u98_20:
  2746     0564                     i1l1799:
  2747                           
  2748                           ;RS485_ModbusRTU_slave.c: 48:     {;RS485_ModbusRTU_slave.c: 49:         if (modbus_rcv_
      +                          request_done == 0 && uart_str_idx == 7)
  2749     0564  083D               	movf	modbusRcvRequest@modbus_rcv_request_done,w
  2750     0565  043E               	iorwf	modbusRcvRequest@modbus_rcv_request_done+1,w
  2751     0566  1D03               	btfss	3,2
  2752     0567  2D69               	goto	u99_21
  2753     0568  2D6A               	goto	u99_20
  2754     0569                     u99_21:
  2755     0569  2D82               	goto	i1l1805
  2756     056A                     u99_20:
  2757     056A                     i1l1801:
  2758     056A  3007               	movlw	7
  2759     056B  0653               	xorwf	_uart_str_idx@PIC16F877A_UART$F221,w
  2760     056C  0454               	iorwf	_uart_str_idx@PIC16F877A_UART$F221+1,w
  2761     056D  1D03               	btfss	3,2
  2762     056E  2D70               	goto	u100_21
  2763     056F  2D71               	goto	u100_20
  2764     0570                     u100_21:
  2765     0570  2D82               	goto	i1l1805
  2766     0571                     u100_20:
  2767     0571                     i1l1803:
  2768                           
  2769                           ;RS485_ModbusRTU_slave.c: 50:             slave_rcv_buffer_len += 1 + rcv_buffer[6];
  2770     0571  083F               	movf	modbusRcvRequest@rcv_buffer,w
  2771     0572  3E06               	addlw	6
  2772     0573  0084               	movwf	4
  2773     0574  1383               	bcf	3,7	;select IRP bank0
  2774     0575  0800               	movf	0,w
  2775     0576  3E01               	addlw	1
  2776     0577  00BB               	movwf	??_modbusRcvRequest
  2777     0578  3000               	movlw	0
  2778     0579  1803               	skipnc
  2779     057A  3001               	movlw	1
  2780     057B  00BC               	movwf	??_modbusRcvRequest+1
  2781     057C  083B               	movf	??_modbusRcvRequest,w
  2782     057D  07A0               	addwf	_slave_rcv_buffer_len,f
  2783     057E  1803               	skipnc
  2784     057F  0AA1               	incf	_slave_rcv_buffer_len+1,f
  2785     0580  083C               	movf	??_modbusRcvRequest+1,w
  2786     0581  07A1               	addwf	_slave_rcv_buffer_len+1,f
  2787     0582                     i1l1805:
  2788                           
  2789                           ;RS485_ModbusRTU_slave.c: 52:     return modbus_rcv_request_done;
  2790     0582  083E               	movf	modbusRcvRequest@modbus_rcv_request_done+1,w
  2791     0583  00FC               	movwf	?_modbusRcvRequest+1
  2792     0584  083D               	movf	modbusRcvRequest@modbus_rcv_request_done,w
  2793     0585  00FB               	movwf	?_modbusRcvRequest
  2794     0586                     i1l272:
  2795     0586  0008               	return
  2796     0587                     __end_of_modbusRcvRequest:
  2797                           
  2798                           	psect	text12
  2799     0F40                     __ptext12:	
  2800 ;; *************** function _RS485rcvString *****************
  2801 ;; Defined at:
  2802 ;;		line 63 in file "PIC16F877A_RS485.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  2805 ;;		 -> rcv_buffer(25), 
  2806 ;;  length          2    6[COMMON] unsigned int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  rcv_buffer      1   10[COMMON] PTR unsigned char 
  2809 ;;		 -> rcv_buffer(25), 
  2810 ;;  done            2    8[COMMON] int 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2    6[COMMON] int 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         2       0       0       0       0
  2821 ;;      Locals:         3       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0
  2823 ;;      Totals:         5       0       0       0       0
  2824 ;;Total ram usage:        5 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		_UARTrcvString
  2829 ;; This function is called by:
  2830 ;;		_modbusRcvRequest
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     0F40                     _RS485rcvString:	
  2835                           ;psect for function _RS485rcvString
  2836                           
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _RS485rcvString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2840                           ;RS485rcvString@rcv_buffer stored from wreg
  2841     0F40  00FA               	movwf	RS485rcvString@rcv_buffer
  2842     0F41                     i1l1749:
  2843                           
  2844                           ;PIC16F877A_RS485.c: 63: int RS485rcvString(char* rcv_buffer, uint16_t length);PIC16F877
      +                          A_RS485.c: 64: {;PIC16F877A_RS485.c: 66:     RD0 = 0;
  2845     0F41  1283               	bcf	3,5	;RP0=0, select bank0
  2846     0F42  1303               	bcf	3,6	;RP1=0, select bank0
  2847     0F43  1008               	bcf	8,0	;volatile
  2848     0F44                     i1l1751:
  2849                           
  2850                           ;PIC16F877A_RS485.c: 68:     int done = UARTrcvString(rcv_buffer, length);
  2851     0F44  0877               	movf	RS485rcvString@length+1,w
  2852     0F45  00F2               	movwf	UARTrcvString@length+1
  2853     0F46  0876               	movf	RS485rcvString@length,w
  2854     0F47  00F1               	movwf	UARTrcvString@length
  2855     0F48  087A               	movf	RS485rcvString@rcv_buffer,w
  2856     0F49  120A  118A  26FF  120A  158A  	fcall	_UARTrcvString
  2857     0F4E  0872               	movf	?_UARTrcvString+1,w
  2858     0F4F  00F9               	movwf	RS485rcvString@done+1
  2859     0F50  0871               	movf	?_UARTrcvString,w
  2860     0F51  00F8               	movwf	RS485rcvString@done
  2861     0F52                     i1l1753:
  2862                           
  2863                           ;PIC16F877A_RS485.c: 69:     return done;
  2864     0F52  0879               	movf	RS485rcvString@done+1,w
  2865     0F53  00F7               	movwf	?_RS485rcvString+1
  2866     0F54  0878               	movf	RS485rcvString@done,w
  2867     0F55  00F6               	movwf	?_RS485rcvString
  2868     0F56                     i1l232:
  2869     0F56  0008               	return
  2870     0F57                     __end_of_RS485rcvString:
  2871                           
  2872                           	psect	text13
  2873     06FF                     __ptext13:	
  2874 ;; *************** function _UARTrcvString *****************
  2875 ;; Defined at:
  2876 ;;		line 97 in file "PIC16F877A_UART.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  rcv_buffer      1    wreg     PTR unsigned char 
  2879 ;;		 -> rcv_buffer(25), 
  2880 ;;  length          2    1[COMMON] unsigned int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  rcv_buffer      1    5[COMMON] PTR unsigned char 
  2883 ;;		 -> rcv_buffer(25), 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    1[COMMON] int 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         2       0       0       0       0
  2894 ;;      Locals:         1       0       0       0       0
  2895 ;;      Temps:          2       0       0       0       0
  2896 ;;      Totals:         5       0       0       0       0
  2897 ;;Total ram usage:        5 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 1
  2900 ;; This function calls:
  2901 ;;		_UARTrcvChar
  2902 ;; This function is called by:
  2903 ;;		_RS485rcvString
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907     06FF                     _UARTrcvString:	
  2908                           ;psect for function _UARTrcvString
  2909                           
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _UARTrcvString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2913                           ;UARTrcvString@rcv_buffer stored from wreg
  2914     06FF  00F5               	movwf	UARTrcvString@rcv_buffer
  2915     0700                     i1l1467:
  2916                           
  2917                           ;PIC16F877A_UART.c: 97: int UARTrcvString(char *rcv_buffer, uint16_t length);PIC16F877A_
      +                          UART.c: 98: {;PIC16F877A_UART.c: 99:     if (uart_str_idx == length - 1)
  2918     0700  0871               	movf	UARTrcvString@length,w
  2919     0701  3EFF               	addlw	255
  2920     0702  00F3               	movwf	??_UARTrcvString
  2921     0703  0872               	movf	UARTrcvString@length+1,w
  2922     0704  1803               	skipnc
  2923     0705  3E01               	addlw	1
  2924     0706  3EFF               	addlw	255
  2925     0707  00F4               	movwf	??_UARTrcvString+1
  2926     0708  1283               	bcf	3,5	;RP0=0, select bank0
  2927     0709  1303               	bcf	3,6	;RP1=0, select bank0
  2928     070A  085A               	movf	_uart_str_idx+1,w
  2929     070B  0674               	xorwf	??_UARTrcvString+1,w
  2930     070C  1D03               	skipz
  2931     070D  2F10               	goto	u66_25
  2932     070E  0859               	movf	_uart_str_idx,w
  2933     070F  0673               	xorwf	??_UARTrcvString,w
  2934     0710                     u66_25:
  2935     0710  1D03               	skipz
  2936     0711  2F13               	goto	u66_21
  2937     0712  2F14               	goto	u66_20
  2938     0713                     u66_21:
  2939     0713  2F35               	goto	i1l1483
  2940     0714                     u66_20:
  2941     0714                     i1l1469:
  2942                           
  2943                           ;PIC16F877A_UART.c: 100:     {;PIC16F877A_UART.c: 101:         rcv_buffer[uart_str_idx++
      +                          ] = UARTrcvChar();
  2944     0714  0859               	movf	_uart_str_idx,w
  2945     0715  0775               	addwf	UARTrcvString@rcv_buffer,w
  2946     0716  00F3               	movwf	??_UARTrcvString
  2947     0717  0873               	movf	??_UARTrcvString,w
  2948     0718  0084               	movwf	4
  2949     0719  120A  158A  26A2  120A  118A  	fcall	_UARTrcvChar
  2950     071E  1383               	bcf	3,7	;select IRP bank0
  2951     071F  0080               	movwf	0
  2952     0720                     i1l1471:
  2953     0720  3001               	movlw	1
  2954     0721  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0722  1303               	bcf	3,6	;RP1=0, select bank0
  2956     0723  07D9               	addwf	_uart_str_idx,f
  2957     0724  1803               	skipnc
  2958     0725  0ADA               	incf	_uart_str_idx+1,f
  2959     0726  3000               	movlw	0
  2960     0727  07DA               	addwf	_uart_str_idx+1,f
  2961     0728                     i1l1473:
  2962                           
  2963                           ;PIC16F877A_UART.c: 102:         rcv_buffer[uart_str_idx] = '\0';
  2964     0728  0859               	movf	_uart_str_idx,w
  2965     0729  0775               	addwf	UARTrcvString@rcv_buffer,w
  2966     072A  00F3               	movwf	??_UARTrcvString
  2967     072B  0873               	movf	??_UARTrcvString,w
  2968     072C  0084               	movwf	4
  2969     072D  0180               	clrf	0
  2970     072E                     i1l1475:
  2971                           
  2972                           ;PIC16F877A_UART.c: 103:         uart_str_idx = 0;
  2973     072E  01D9               	clrf	_uart_str_idx
  2974     072F  01DA               	clrf	_uart_str_idx+1
  2975     0730                     i1l1477:
  2976                           
  2977                           ;PIC16F877A_UART.c: 104:         return 1;
  2978     0730  3001               	movlw	1
  2979     0731  00F1               	movwf	?_UARTrcvString
  2980     0732  3000               	movlw	0
  2981     0733  00F2               	movwf	?_UARTrcvString+1
  2982     0734  2F4B               	goto	i1l62
  2983     0735                     i1l1483:
  2984                           
  2985                           ;PIC16F877A_UART.c: 107:     {;PIC16F877A_UART.c: 108:         rcv_buffer[uart_str_idx++
      +                          ] = UARTrcvChar();
  2986     0735  0859               	movf	_uart_str_idx,w
  2987     0736  0775               	addwf	UARTrcvString@rcv_buffer,w
  2988     0737  00F3               	movwf	??_UARTrcvString
  2989     0738  0873               	movf	??_UARTrcvString,w
  2990     0739  0084               	movwf	4
  2991     073A  120A  158A  26A2  120A  118A  	fcall	_UARTrcvChar
  2992     073F  1383               	bcf	3,7	;select IRP bank0
  2993     0740  0080               	movwf	0
  2994     0741                     i1l1485:
  2995     0741  3001               	movlw	1
  2996     0742  1283               	bcf	3,5	;RP0=0, select bank0
  2997     0743  1303               	bcf	3,6	;RP1=0, select bank0
  2998     0744  07D9               	addwf	_uart_str_idx,f
  2999     0745  1803               	skipnc
  3000     0746  0ADA               	incf	_uart_str_idx+1,f
  3001     0747  3000               	movlw	0
  3002     0748  07DA               	addwf	_uart_str_idx+1,f
  3003     0749                     i1l1487:
  3004                           
  3005                           ;PIC16F877A_UART.c: 109:         return 0;
  3006     0749  01F1               	clrf	?_UARTrcvString
  3007     074A  01F2               	clrf	?_UARTrcvString+1
  3008     074B                     i1l62:
  3009     074B  0008               	return
  3010     074C                     __end_of_UARTrcvString:
  3011                           
  3012                           	psect	text14
  3013     0EA2                     __ptext14:	
  3014 ;; *************** function _UARTrcvChar *****************
  3015 ;; Defined at:
  3016 ;;		line 89 in file "PIC16F877A_UART.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  c               1    0[COMMON] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      unsigned char 
  3023 ;; Registers used:
  3024 ;;		wreg
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         1       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0
  3033 ;;      Totals:         1       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_UARTrcvString
  3040 ;;		_RS485rcvChar
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044     0EA2                     _UARTrcvChar:	
  3045                           ;psect for function _UARTrcvChar
  3046                           
  3047     0EA2                     i1l1443:	
  3048                           ;incstack = 0
  3049                           ; Regs used in _UARTrcvChar: [wreg]
  3050                           
  3051                           
  3052                           ;PIC16F877A_UART.c: 91:     char c;;PIC16F877A_UART.c: 92:     c = RCREG;
  3053     0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3054     0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  3055     0EA4  081A               	movf	26,w	;volatile
  3056     0EA5  00F0               	movwf	UARTrcvChar@c
  3057                           
  3058                           ;PIC16F877A_UART.c: 93:     return c;
  3059     0EA6  0870               	movf	UARTrcvChar@c,w
  3060     0EA7                     i1l58:
  3061     0EA7  0008               	return
  3062     0EA8                     __end_of_UARTrcvChar:
  3063                           
  3064                           	psect	text15
  3065     03E3                     __ptext15:	
  3066 ;; *************** function _modbusMesHandling *****************
  3067 ;; Defined at:
  3068 ;;		line 52 in file "PIC16F877A_RS485_ModbusRTU_slave.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  function        1   13[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       1       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         0       1       0       0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 4
  3089 ;; This function calls:
  3090 ;;		_LCD_Write_String
  3091 ;;		_modbusResponseCoilsRead
  3092 ;;		_modbusResponseMultipleWrite
  3093 ;;		_modbusResponseRegistersRead
  3094 ;;		_modbusResponseSingleWrite
  3095 ;; This function is called by:
  3096 ;;		_ISR
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100     03E3                     _modbusMesHandling:	
  3101                           ;psect for function _modbusMesHandling
  3102                           
  3103     03E3                     i1l1833:	
  3104                           ;incstack = 0
  3105 ;; hardware stack exceeded
  3106                           ; Regs used in _modbusMesHandling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3107                           
  3108                           
  3109                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 54:     uint8_t function = rcv_buffer[1];
  3110     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3111     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  3112     03E5  083A               	movf	(_rcv_buffer^(0+128)+1),w
  3113     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3114     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3115     03E8  00C8               	movwf	modbusMesHandling@function
  3116     03E9                     i1l1835:
  3117                           
  3118                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 56:     if(function == 1 || function == 2)
  3119     03E9  0348               	decf	modbusMesHandling@function,w
  3120     03EA  1903               	btfsc	3,2
  3121     03EB  2BED               	goto	u105_21
  3122     03EC  2BEE               	goto	u105_20
  3123     03ED                     u105_21:
  3124     03ED  2BF4               	goto	i1l1839
  3125     03EE                     u105_20:
  3126     03EE                     i1l1837:
  3127     03EE  3002               	movlw	2
  3128     03EF  0648               	xorwf	modbusMesHandling@function,w
  3129     03F0  1D03               	btfss	3,2
  3130     03F1  2BF3               	goto	u106_21
  3131     03F2  2BF4               	goto	u106_20
  3132     03F3                     u106_21:
  3133     03F3  2C0E               	goto	i1l1843
  3134     03F4                     u106_20:
  3135     03F4                     i1l1839:
  3136                           
  3137                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 57:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 58:  
      +                                 if(! modbusResponseCoilsRead(tx_buffer, 25, rcv_buffer, coil_val))
  3138     03F4  3019               	movlw	25
  3139     03F5  00FA               	movwf	modbusResponseCoilsRead@length
  3140     03F6  3000               	movlw	0
  3141     03F7  00FB               	movwf	modbusResponseCoilsRead@length+1
  3142     03F8  30B9               	movlw	(low (_rcv_buffer| 0))& (0+255)
  3143     03F9  00FC               	movwf	modbusResponseCoilsRead@rcv_buffer
  3144     03FA  3039               	movlw	(low (_coil_val| 0))& (0+255)
  3145     03FB  00FD               	movwf	modbusResponseCoilsRead@coil_value
  3146     03FC  30A0               	movlw	(low (_tx_buffer| 0))& (0+255)
  3147     03FD  120A  118A  247D  120A  118A  	fcall	_modbusResponseCoilsRead
  3148     0402  3A00               	xorlw	0
  3149     0403  1D03               	skipz
  3150     0404  2C06               	goto	u107_21
  3151     0405  2C07               	goto	u107_20
  3152     0406                     u107_21:
  3153     0406  2C7C               	goto	i1l136
  3154     0407                     u107_20:
  3155     0407                     i1l1841:
  3156                           
  3157                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 59:         {;PIC16F877A_RS485_ModbusRTU_slave.c: 6
      +                          0:             LCD_Write_String(error_msg);
  3158     0407  3022               	movlw	(low (_error_msg| 0))& (0+255)
  3159     0408  120A  118A  20DC  120A  118A  	fcall	_LCD_Write_String
  3160     040D  2C7C               	goto	i1l136
  3161     040E                     i1l1843:
  3162     040E  3003               	movlw	3
  3163     040F  0648               	xorwf	modbusMesHandling@function,w
  3164     0410  1903               	btfsc	3,2
  3165     0411  2C13               	goto	u108_21
  3166     0412  2C14               	goto	u108_20
  3167     0413                     u108_21:
  3168     0413  2C1A               	goto	i1l1847
  3169     0414                     u108_20:
  3170     0414                     i1l1845:
  3171     0414  3004               	movlw	4
  3172     0415  0648               	xorwf	modbusMesHandling@function,w
  3173     0416  1D03               	btfss	3,2
  3174     0417  2C19               	goto	u109_21
  3175     0418  2C1A               	goto	u109_20
  3176     0419                     u109_21:
  3177     0419  2C34               	goto	i1l1851
  3178     041A                     u109_20:
  3179     041A                     i1l1847:
  3180                           
  3181                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 64:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 65:  
      +                                 if(! modbusResponseRegistersRead(tx_buffer, 25, rcv_buffer, register_val))
  3182     041A  3019               	movlw	25
  3183     041B  00FA               	movwf	modbusResponseRegistersRead@length
  3184     041C  3000               	movlw	0
  3185     041D  00FB               	movwf	modbusResponseRegistersRead@length+1
  3186     041E  30B9               	movlw	(low (_rcv_buffer| 0))& (0+255)
  3187     041F  00FC               	movwf	modbusResponseRegistersRead@rcv_buffer
  3188     0420  3035               	movlw	(low (_register_val| 0))& (0+255)
  3189     0421  00FD               	movwf	modbusResponseRegistersRead@register_value
  3190     0422  30A0               	movlw	(low (_tx_buffer| 0))& (0+255)
  3191     0423  120A  118A  2312  120A  118A  	fcall	_modbusResponseRegistersRead
  3192     0428  3A00               	xorlw	0
  3193     0429  1D03               	skipz
  3194     042A  2C2C               	goto	u110_21
  3195     042B  2C2D               	goto	u110_20
  3196     042C                     u110_21:
  3197     042C  2C7C               	goto	i1l136
  3198     042D                     u110_20:
  3199     042D                     i1l1849:
  3200                           
  3201                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 66:         {;PIC16F877A_RS485_ModbusRTU_slave.c: 6
      +                          7:             LCD_Write_String(error_msg);
  3202     042D  3022               	movlw	(low (_error_msg| 0))& (0+255)
  3203     042E  120A  118A  20DC  120A  118A  	fcall	_LCD_Write_String
  3204     0433  2C7C               	goto	i1l136
  3205     0434                     i1l1851:
  3206     0434  3005               	movlw	5
  3207     0435  0648               	xorwf	modbusMesHandling@function,w
  3208     0436  1903               	btfsc	3,2
  3209     0437  2C39               	goto	u111_21
  3210     0438  2C3A               	goto	u111_20
  3211     0439                     u111_21:
  3212     0439  2C40               	goto	i1l1855
  3213     043A                     u111_20:
  3214     043A                     i1l1853:
  3215     043A  3006               	movlw	6
  3216     043B  0648               	xorwf	modbusMesHandling@function,w
  3217     043C  1D03               	btfss	3,2
  3218     043D  2C3F               	goto	u112_21
  3219     043E  2C40               	goto	u112_20
  3220     043F                     u112_21:
  3221     043F  2C58               	goto	i1l1859
  3222     0440                     u112_20:
  3223     0440                     i1l1855:
  3224                           
  3225                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 71:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 72:  
      +                                 if(! modbusResponseSingleWrite(tx_buffer, 25, rcv_buffer))
  3226     0440  3019               	movlw	25
  3227     0441  00FB               	movwf	modbusResponseSingleWrite@length
  3228     0442  3000               	movlw	0
  3229     0443  00FC               	movwf	modbusResponseSingleWrite@length+1
  3230     0444  30B9               	movlw	(low (_rcv_buffer| 0))& (0+255)
  3231     0445  00FD               	movwf	modbusResponseSingleWrite@rcv_buffer
  3232     0446  30A0               	movlw	(low (_tx_buffer| 0))& (0+255)
  3233     0447  120A  118A  2066  120A  118A  	fcall	_modbusResponseSingleWrite
  3234     044C  3A00               	xorlw	0
  3235     044D  1D03               	skipz
  3236     044E  2C50               	goto	u113_21
  3237     044F  2C51               	goto	u113_20
  3238     0450                     u113_21:
  3239     0450  2C7C               	goto	i1l136
  3240     0451                     u113_20:
  3241     0451                     i1l1857:
  3242                           
  3243                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 73:         {;PIC16F877A_RS485_ModbusRTU_slave.c: 7
      +                          4:             LCD_Write_String(error_msg);
  3244     0451  3022               	movlw	(low (_error_msg| 0))& (0+255)
  3245     0452  120A  118A  20DC  120A  118A  	fcall	_LCD_Write_String
  3246     0457  2C7C               	goto	i1l136
  3247     0458                     i1l1859:
  3248     0458  300F               	movlw	15
  3249     0459  0648               	xorwf	modbusMesHandling@function,w
  3250     045A  1903               	btfsc	3,2
  3251     045B  2C5D               	goto	u114_21
  3252     045C  2C5E               	goto	u114_20
  3253     045D                     u114_21:
  3254     045D  2C64               	goto	i1l1863
  3255     045E                     u114_20:
  3256     045E                     i1l1861:
  3257     045E  3010               	movlw	16
  3258     045F  0648               	xorwf	modbusMesHandling@function,w
  3259     0460  1D03               	btfss	3,2
  3260     0461  2C63               	goto	u115_21
  3261     0462  2C64               	goto	u115_20
  3262     0463                     u115_21:
  3263     0463  2C7C               	goto	i1l136
  3264     0464                     u115_20:
  3265     0464                     i1l1863:
  3266                           
  3267                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 78:     {;PIC16F877A_RS485_ModbusRTU_slave.c: 79:  
      +                                 if(! modbusResponseMultipleWrite(tx_buffer, 25, rcv_buffer))
  3268     0464  3019               	movlw	25
  3269     0465  00FA               	movwf	modbusResponseMultipleWrite@length
  3270     0466  3000               	movlw	0
  3271     0467  00FB               	movwf	modbusResponseMultipleWrite@length+1
  3272     0468  30B9               	movlw	(low (_rcv_buffer| 0))& (0+255)
  3273     0469  00FC               	movwf	modbusResponseMultipleWrite@rcv_buffer
  3274     046A  30A0               	movlw	(low (_tx_buffer| 0))& (0+255)
  3275     046B  120A  118A  265C  120A  118A  	fcall	_modbusResponseMultipleWrite
  3276     0470  3A00               	xorlw	0
  3277     0471  1D03               	skipz
  3278     0472  2C74               	goto	u116_21
  3279     0473  2C75               	goto	u116_20
  3280     0474                     u116_21:
  3281     0474  2C7C               	goto	i1l121
  3282     0475                     u116_20:
  3283     0475                     i1l1865:
  3284                           
  3285                           ;PIC16F877A_RS485_ModbusRTU_slave.c: 80:         {;PIC16F877A_RS485_ModbusRTU_slave.c: 8
      +                          1:             LCD_Write_String(error_msg);
  3286     0475  3022               	movlw	(low (_error_msg| 0))& (0+255)
  3287     0476  120A  118A  20DC  120A  118A  	fcall	_LCD_Write_String
  3288     047B  2C7C               	goto	i1l136
  3289     047C                     i1l121:
  3290     047C                     i1l136:
  3291     047C  0008               	return
  3292     047D                     __end_of_modbusMesHandling:
  3293                           
  3294                           	psect	text16
  3295     0066                     __ptext16:	
  3296 ;; *************** function _modbusResponseSingleWrite *****************
  3297 ;; Defined at:
  3298 ;;		line 121 in file "RS485_ModbusRTU_slave.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  tx_buffer       1    wreg     PTR unsigned char 
  3301 ;;		 -> tx_buffer(25), 
  3302 ;;  length          2   11[COMMON] unsigned int 
  3303 ;;  rcv_buffer      1   13[COMMON] PTR unsigned char 
  3304 ;;		 -> rcv_buffer(25), 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  tx_buffer       1    0[BANK0 ] PTR unsigned char 
  3307 ;;		 -> tx_buffer(25), 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      unsigned char 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3317 ;;      Params:         3       0       0       0       0
  3318 ;;      Locals:         0       1       0       0       0
  3319 ;;      Temps:          0       0       0       0       0
  3320 ;;      Totals:         3       1       0       0       0
  3321 ;;Total ram usage:        4 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 3
  3324 ;; This function calls:
  3325 ;;		_RS485sendString
  3326 ;;		_clearBuffer
  3327 ;;		_memcpy
  3328 ;;		_strlen
  3329 ;; This function is called by:
  3330 ;;		_modbusMesHandling
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     0066                     _modbusResponseSingleWrite:	
  3335                           ;psect for function _modbusResponseSingleWrite
  3336                           
  3337                           
  3338                           ;incstack = 0
  3339 ;; hardware stack exceeded
  3340                           ; Regs used in _modbusResponseSingleWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  3341                           ;modbusResponseSingleWrite@tx_buffer stored from wreg
  3342     0066  1283               	bcf	3,5	;RP0=0, select bank0
  3343     0067  1303               	bcf	3,6	;RP1=0, select bank0
  3344     0068  00BB               	movwf	modbusResponseSingleWrite@tx_buffer
  3345     0069                     i1l1697:
  3346                           
  3347                           ;RS485_ModbusRTU_slave.c: 121: uint8_t modbusResponseSingleWrite(uint8_t *tx_buffer, uin
      +                          t16_t length, uint8_t *rcv_buffer);RS485_ModbusRTU_slave.c: 122: {;RS485_ModbusRTU_slave
      +                          .c: 124:     clearBuffer(tx_buffer, length);
  3348     0069  087C               	movf	modbusResponseSingleWrite@length+1,w
  3349     006A  00F1               	movwf	clearBuffer@len+1
  3350     006B  087B               	movf	modbusResponseSingleWrite@length,w
  3351     006C  00F0               	movwf	clearBuffer@len
  3352     006D  083B               	movf	modbusResponseSingleWrite@tx_buffer,w
  3353     006E  120A  158A  27A7  120A  118A  	fcall	_clearBuffer
  3354                           
  3355                           ;RS485_ModbusRTU_slave.c: 126:     memcpy(tx_buffer, rcv_buffer, strlen((char *)rcv_buff
      +                          er) + 1);
  3356     0073  087D               	movf	modbusResponseSingleWrite@rcv_buffer,w
  3357     0074  00F4               	movwf	memcpy@s1
  3358     0075  087D               	movf	modbusResponseSingleWrite@rcv_buffer,w
  3359     0076  120A  158A  2729  120A  118A  	fcall	_strlen
  3360     007B  0870               	movf	?_strlen,w
  3361     007C  3E01               	addlw	1
  3362     007D  00F5               	movwf	memcpy@n
  3363     007E  0871               	movf	?_strlen+1,w
  3364     007F  1803               	skipnc
  3365     0080  3E01               	addlw	1
  3366     0081  3E00               	addlw	0
  3367     0082  00F6               	movwf	memcpy@n+1
  3368     0083  1283               	bcf	3,5	;RP0=0, select bank0
  3369     0084  1303               	bcf	3,6	;RP1=0, select bank0
  3370     0085  083B               	movf	modbusResponseSingleWrite@tx_buffer,w
  3371     0086  120A  118A  2095  120A  118A  	fcall	_memcpy
  3372     008B                     i1l1699:
  3373                           
  3374                           ;RS485_ModbusRTU_slave.c: 129:     RS485sendString((char *)tx_buffer);
  3375     008B  1283               	bcf	3,5	;RP0=0, select bank0
  3376     008C  1303               	bcf	3,6	;RP1=0, select bank0
  3377     008D  083B               	movf	modbusResponseSingleWrite@tx_buffer,w
  3378     008E  120A  158A  2714  120A  118A  	fcall	_RS485sendString
  3379     0093                     i1l1701:
  3380                           
  3381                           ;RS485_ModbusRTU_slave.c: 130:     return 1;
  3382     0093  3001               	movlw	1
  3383     0094                     i1l296:
  3384     0094  0008               	return
  3385     0095                     __end_of_modbusResponseSingleWrite:
  3386                           
  3387                           	psect	text17
  3388     0F29                     __ptext17:	
  3389 ;; *************** function _strlen *****************
  3390 ;; Defined at:
  3391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  s               1    wreg     PTR const unsigned char 
  3394 ;;		 -> rcv_buffer(25), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  s               1    2[COMMON] PTR const unsigned char 
  3397 ;;		 -> rcv_buffer(25), 
  3398 ;;  cp              1    3[COMMON] PTR const unsigned char 
  3399 ;;		 -> rcv_buffer(25), 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMMON] unsigned int 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         2       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         4       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_modbusResponseSingleWrite
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422     0F29                     _strlen:	
  3423                           ;psect for function _strlen
  3424                           
  3425                           
  3426                           ;incstack = 0
  3427                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1]
  3428                           ;strlen@s stored from wreg
  3429     0F29  00F2               	movwf	strlen@s
  3430     0F2A                     i1l1559:
  3431     0F2A  0872               	movf	strlen@s,w
  3432     0F2B  00F3               	movwf	strlen@cp
  3433     0F2C  2F31               	goto	i1l1563
  3434     0F2D                     i1l1561:
  3435     0F2D  3001               	movlw	1
  3436     0F2E  00FF               	movwf	btemp+1
  3437     0F2F  087F               	movf	btemp+1,w
  3438     0F30  07F3               	addwf	strlen@cp,f
  3439     0F31                     i1l1563:
  3440     0F31  0873               	movf	strlen@cp,w
  3441     0F32  0084               	movwf	4
  3442     0F33  1383               	bcf	3,7	;select IRP bank0
  3443     0F34  0800               	movf	0,w
  3444     0F35  1D03               	btfss	3,2
  3445     0F36  2F38               	goto	u75_21
  3446     0F37  2F39               	goto	u75_20
  3447     0F38                     u75_21:
  3448     0F38  2F2D               	goto	i1l1561
  3449     0F39                     u75_20:
  3450     0F39                     i1l1565:
  3451     0F39  0872               	movf	strlen@s,w
  3452     0F3A  0273               	subwf	strlen@cp,w
  3453     0F3B  00F0               	movwf	?_strlen
  3454     0F3C  01F1               	clrf	?_strlen+1
  3455     0F3D  1BF0               	btfsc	?_strlen,7
  3456     0F3E  03F1               	decf	?_strlen+1,f
  3457     0F3F                     i1l847:
  3458     0F3F  0008               	return
  3459     0F40                     __end_of_strlen:
  3460                           
  3461                           	psect	text18
  3462     0095                     __ptext18:	
  3463 ;; *************** function _memcpy *****************
  3464 ;; Defined at:
  3465 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\memcpy.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  d1              1    wreg     PTR void 
  3468 ;;		 -> tx_buffer(25), 
  3469 ;;  s1              1    4[COMMON] PTR const void 
  3470 ;;		 -> rcv_buffer(25), 
  3471 ;;  n               2    5[COMMON] unsigned int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  d1              1    8[COMMON] PTR void 
  3474 ;;		 -> tx_buffer(25), 
  3475 ;;  s               1   10[COMMON] PTR const unsigned char 
  3476 ;;		 -> rcv_buffer(25), 
  3477 ;;  d               1    9[COMMON] PTR unsigned char 
  3478 ;;		 -> tx_buffer(25), 
  3479 ;;  tmp             1    7[COMMON] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      PTR void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3489 ;;      Params:         3       0       0       0       0
  3490 ;;      Locals:         4       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0
  3492 ;;      Totals:         7       0       0       0       0
  3493 ;;Total ram usage:        7 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_modbusResponseSingleWrite
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502     0095                     _memcpy:	
  3503                           ;psect for function _memcpy
  3504                           
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+btemp+1]
  3508                           ;memcpy@d1 stored from wreg
  3509     0095  00F8               	movwf	memcpy@d1
  3510     0096                     i1l1569:
  3511     0096  0874               	movf	memcpy@s1,w
  3512     0097  00FA               	movwf	memcpy@s
  3513     0098  0878               	movf	memcpy@d1,w
  3514     0099  00F9               	movwf	memcpy@d
  3515     009A  28AC               	goto	i1l1577
  3516     009B                     i1l1571:
  3517     009B  087A               	movf	memcpy@s,w
  3518     009C  0084               	movwf	4
  3519     009D  1383               	bcf	3,7	;select IRP bank0
  3520     009E  0800               	movf	0,w
  3521     009F  00F7               	movwf	memcpy@tmp
  3522     00A0                     i1l1573:
  3523     00A0  3001               	movlw	1
  3524     00A1  00FF               	movwf	btemp+1
  3525     00A2  087F               	movf	btemp+1,w
  3526     00A3  07FA               	addwf	memcpy@s,f
  3527     00A4                     i1l1575:
  3528     00A4  0879               	movf	memcpy@d,w
  3529     00A5  0084               	movwf	4
  3530     00A6  0877               	movf	memcpy@tmp,w
  3531     00A7  0080               	movwf	0
  3532     00A8  3001               	movlw	1
  3533     00A9  00FF               	movwf	btemp+1
  3534     00AA  087F               	movf	btemp+1,w
  3535     00AB  07F9               	addwf	memcpy@d,f
  3536     00AC                     i1l1577:
  3537     00AC  3001               	movlw	1
  3538     00AD  02F5               	subwf	memcpy@n,f
  3539     00AE  3000               	movlw	0
  3540     00AF  1C03               	skipc
  3541     00B0  03F6               	decf	memcpy@n+1,f
  3542     00B1  02F6               	subwf	memcpy@n+1,f
  3543     00B2  0A75               	incf	memcpy@n,w
  3544     00B3  1D03               	skipz
  3545     00B4  28B9               	goto	u76_21
  3546     00B5  0A76               	incf	memcpy@n+1,w
  3547     00B6  1D03               	btfss	3,2
  3548     00B7  28B9               	goto	u76_21
  3549     00B8  28BA               	goto	u76_20
  3550     00B9                     u76_21:
  3551     00B9  289B               	goto	i1l1571
  3552     00BA                     u76_20:
  3553     00BA                     i1l841:
  3554     00BA  0008               	return
  3555     00BB                     __end_of_memcpy:
  3556                           
  3557                           	psect	text19
  3558     0312                     __ptext19:	
  3559 ;; *************** function _modbusResponseRegistersRead *****************
  3560 ;; Defined at:
  3561 ;;		line 86 in file "RS485_ModbusRTU_slave.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  tx_buffer       1    wreg     PTR unsigned char 
  3564 ;;		 -> tx_buffer(25), 
  3565 ;;  length          2   10[COMMON] unsigned int 
  3566 ;;  rcv_buffer      1   12[COMMON] PTR unsigned char 
  3567 ;;		 -> rcv_buffer(25), 
  3568 ;;  register_val    1   13[COMMON] PTR unsigned int 
  3569 ;;		 -> register_val(4), 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  tx_buffer       1   12[BANK0 ] PTR unsigned char 
  3572 ;;		 -> tx_buffer(25), 
  3573 ;;  checksum        2    9[BANK0 ] unsigned int 
  3574 ;;  register_num    2    7[BANK0 ] unsigned int 
  3575 ;;  i               1   11[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      unsigned char 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         4       0       0       0       0
  3586 ;;      Locals:         0       6       0       0       0
  3587 ;;      Temps:          0       7       0       0       0
  3588 ;;      Totals:         4      13       0       0       0
  3589 ;;Total ram usage:       17 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 3
  3592 ;; This function calls:
  3593 ;;		_RS485sendString
  3594 ;;		___awdiv
  3595 ;;		_clearBuffer
  3596 ;;		_crc16
  3597 ;; This function is called by:
  3598 ;;		_modbusMesHandling
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     0312                     _modbusResponseRegistersRead:	
  3603                           ;psect for function _modbusResponseRegistersRead
  3604                           
  3605                           
  3606                           ;incstack = 0
  3607 ;; hardware stack exceeded
  3608                           ; Regs used in _modbusResponseRegistersRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  3609                           ;modbusResponseRegistersRead@tx_buffer stored from wreg
  3610     0312  1283               	bcf	3,5	;RP0=0, select bank0
  3611     0313  1303               	bcf	3,6	;RP1=0, select bank0
  3612     0314  00C7               	movwf	modbusResponseRegistersRead@tx_buffer
  3613     0315                     i1l1663:
  3614                           
  3615                           ;RS485_ModbusRTU_slave.c: 86: uint8_t modbusResponseRegistersRead(uint8_t *tx_buffer, ui
      +                          nt16_t length, uint8_t *rcv_buffer, uint16_t *register_value);RS485_ModbusRTU_slave.c: 8
      +                          7: {;RS485_ModbusRTU_slave.c: 89:     clearBuffer(tx_buffer, length);
  3616     0315  087B               	movf	modbusResponseRegistersRead@length+1,w
  3617     0316  00F1               	movwf	clearBuffer@len+1
  3618     0317  087A               	movf	modbusResponseRegistersRead@length,w
  3619     0318  00F0               	movwf	clearBuffer@len
  3620     0319  0847               	movf	modbusResponseRegistersRead@tx_buffer,w
  3621     031A  120A  158A  27A7  120A  118A  	fcall	_clearBuffer
  3622     031F                     i1l1665:
  3623                           
  3624                           ;RS485_ModbusRTU_slave.c: 92:     tx_buffer[0] = 0x05;
  3625     031F  1283               	bcf	3,5	;RP0=0, select bank0
  3626     0320  1303               	bcf	3,6	;RP1=0, select bank0
  3627     0321  0847               	movf	modbusResponseRegistersRead@tx_buffer,w
  3628     0322  0084               	movwf	4
  3629     0323  3005               	movlw	5
  3630     0324  1383               	bcf	3,7	;select IRP bank0
  3631     0325  0080               	movwf	0
  3632     0326                     i1l1667:
  3633                           
  3634                           ;RS485_ModbusRTU_slave.c: 93:     tx_buffer[1] = rcv_buffer[1];
  3635     0326  0A7C               	incf	modbusResponseRegistersRead@rcv_buffer,w
  3636     0327  0084               	movwf	4
  3637     0328  0800               	movf	0,w
  3638     0329  00FF               	movwf	btemp+1
  3639     032A  0A47               	incf	modbusResponseRegistersRead@tx_buffer,w
  3640     032B  0084               	movwf	4
  3641     032C  087F               	movf	btemp+1,w
  3642     032D  0080               	movwf	0
  3643     032E                     i1l1669:
  3644                           
  3645                           ;RS485_ModbusRTU_slave.c: 96:     uint16_t register_num = (rcv_buffer[4] << 8) + rcv_buf
      +                          fer[5];
  3646     032E  087C               	movf	modbusResponseRegistersRead@rcv_buffer,w
  3647     032F  3E04               	addlw	4
  3648     0330  0084               	movwf	4
  3649     0331  0800               	movf	0,w
  3650     0332  00BB               	movwf	??_modbusResponseRegistersRead
  3651     0333  01BC               	clrf	??_modbusResponseRegistersRead+1
  3652     0334  083B               	movf	??_modbusResponseRegistersRead,w
  3653     0335  00BC               	movwf	??_modbusResponseRegistersRead+1
  3654     0336  01BB               	clrf	??_modbusResponseRegistersRead
  3655     0337  087C               	movf	modbusResponseRegistersRead@rcv_buffer,w
  3656     0338  3E05               	addlw	5
  3657     0339  0084               	movwf	4
  3658     033A  0800               	movf	0,w
  3659     033B  073B               	addwf	??_modbusResponseRegistersRead,w
  3660     033C  00C2               	movwf	modbusResponseRegistersRead@register_num
  3661     033D  3000               	movlw	0
  3662     033E  1803               	skipnc
  3663     033F  3001               	movlw	1
  3664     0340  073C               	addwf	??_modbusResponseRegistersRead+1,w
  3665     0341  00C3               	movwf	modbusResponseRegistersRead@register_num+1
  3666     0342                     i1l1671:
  3667                           
  3668                           ;RS485_ModbusRTU_slave.c: 97:     tx_buffer[2] = register_num * 2;
  3669     0342  0847               	movf	modbusResponseRegistersRead@tx_buffer,w
  3670     0343  3E02               	addlw	2
  3671     0344  0084               	movwf	4
  3672     0345  0842               	movf	modbusResponseRegistersRead@register_num,w
  3673     0346  00BB               	movwf	??_modbusResponseRegistersRead
  3674     0347  073B               	addwf	??_modbusResponseRegistersRead,w
  3675     0348  0080               	movwf	0
  3676     0349                     i1l1673:
  3677                           
  3678                           ;RS485_ModbusRTU_slave.c: 100:     uint8_t i;;RS485_ModbusRTU_slave.c: 101:     for (i =
      +                           0; i < register_num * 2; ++i)
  3679     0349  01C6               	clrf	modbusResponseRegistersRead@i
  3680     034A  2BA1               	goto	i1l1681
  3681     034B                     i1l289:
  3682                           
  3683                           ;RS485_ModbusRTU_slave.c: 102:     {;RS485_ModbusRTU_slave.c: 103:         if (i % 2 == 
      +                          0)
  3684     034B  1846               	btfsc	modbusResponseRegistersRead@i,0
  3685     034C  2B4E               	goto	u89_21
  3686     034D  2B4F               	goto	u89_20
  3687     034E                     u89_21:
  3688     034E  2B79               	goto	i1l1677
  3689     034F                     u89_20:
  3690     034F                     i1l1675:
  3691                           
  3692                           ;RS485_ModbusRTU_slave.c: 104:             tx_buffer[3 + i] = (register_value[i / 2] >> 
      +                          8) & 0xFF;
  3693     034F  3002               	movlw	2
  3694     0350  00F0               	movwf	___awdiv@divisor
  3695     0351  3000               	movlw	0
  3696     0352  00F1               	movwf	___awdiv@divisor+1
  3697     0353  0846               	movf	modbusResponseRegistersRead@i,w
  3698     0354  00BB               	movwf	??_modbusResponseRegistersRead
  3699     0355  01BC               	clrf	??_modbusResponseRegistersRead+1
  3700     0356  083B               	movf	??_modbusResponseRegistersRead,w
  3701     0357  00F2               	movwf	___awdiv@dividend
  3702     0358  083C               	movf	??_modbusResponseRegistersRead+1,w
  3703     0359  00F3               	movwf	___awdiv@dividend+1
  3704     035A  120A  118A  25F5  120A  118A  	fcall	___awdiv
  3705     035F  0870               	movf	?___awdiv,w
  3706     0360  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0361  1303               	bcf	3,6	;RP1=0, select bank0
  3708     0362  00BD               	movwf	??_modbusResponseRegistersRead+2
  3709     0363  073D               	addwf	??_modbusResponseRegistersRead+2,w
  3710     0364  077D               	addwf	modbusResponseRegistersRead@register_value,w
  3711     0365  00BE               	movwf	??_modbusResponseRegistersRead+3
  3712     0366  083E               	movf	??_modbusResponseRegistersRead+3,w
  3713     0367  0084               	movwf	4
  3714     0368  1383               	bcf	3,7	;select IRP bank0
  3715     0369  0800               	movf	0,w
  3716     036A  00BF               	movwf	??_modbusResponseRegistersRead+4
  3717     036B  0A84               	incf	4,f
  3718     036C  0800               	movf	0,w
  3719     036D  00C0               	movwf	??_modbusResponseRegistersRead+5
  3720     036E  0840               	movf	??_modbusResponseRegistersRead+5,w
  3721     036F  00FF               	movwf	btemp+1
  3722     0370  0846               	movf	modbusResponseRegistersRead@i,w
  3723     0371  0747               	addwf	modbusResponseRegistersRead@tx_buffer,w
  3724     0372  00C1               	movwf	??_modbusResponseRegistersRead+6
  3725     0373  0841               	movf	??_modbusResponseRegistersRead+6,w
  3726     0374  3E03               	addlw	3
  3727     0375  0084               	movwf	4
  3728     0376  087F               	movf	btemp+1,w
  3729     0377  0080               	movwf	0
  3730     0378  2B9D               	goto	i1l1679
  3731     0379                     i1l1677:
  3732                           
  3733                           ;RS485_ModbusRTU_slave.c: 106:             tx_buffer[3 + i] = register_value[i / 2] & 0x
      +                          FF;
  3734     0379  3002               	movlw	2
  3735     037A  00F0               	movwf	___awdiv@divisor
  3736     037B  3000               	movlw	0
  3737     037C  00F1               	movwf	___awdiv@divisor+1
  3738     037D  0846               	movf	modbusResponseRegistersRead@i,w
  3739     037E  00BB               	movwf	??_modbusResponseRegistersRead
  3740     037F  01BC               	clrf	??_modbusResponseRegistersRead+1
  3741     0380  083B               	movf	??_modbusResponseRegistersRead,w
  3742     0381  00F2               	movwf	___awdiv@dividend
  3743     0382  083C               	movf	??_modbusResponseRegistersRead+1,w
  3744     0383  00F3               	movwf	___awdiv@dividend+1
  3745     0384  120A  118A  25F5  120A  118A  	fcall	___awdiv
  3746     0389  0870               	movf	?___awdiv,w
  3747     038A  1283               	bcf	3,5	;RP0=0, select bank0
  3748     038B  1303               	bcf	3,6	;RP1=0, select bank0
  3749     038C  00BD               	movwf	??_modbusResponseRegistersRead+2
  3750     038D  073D               	addwf	??_modbusResponseRegistersRead+2,w
  3751     038E  077D               	addwf	modbusResponseRegistersRead@register_value,w
  3752     038F  00BE               	movwf	??_modbusResponseRegistersRead+3
  3753     0390  083E               	movf	??_modbusResponseRegistersRead+3,w
  3754     0391  0084               	movwf	4
  3755     0392  1383               	bcf	3,7	;select IRP bank0
  3756     0393  0800               	movf	0,w
  3757     0394  00FF               	movwf	btemp+1
  3758     0395  0846               	movf	modbusResponseRegistersRead@i,w
  3759     0396  0747               	addwf	modbusResponseRegistersRead@tx_buffer,w
  3760     0397  00BF               	movwf	??_modbusResponseRegistersRead+4
  3761     0398  083F               	movf	??_modbusResponseRegistersRead+4,w
  3762     0399  3E03               	addlw	3
  3763     039A  0084               	movwf	4
  3764     039B  087F               	movf	btemp+1,w
  3765     039C  0080               	movwf	0
  3766     039D                     i1l1679:
  3767                           
  3768                           ;RS485_ModbusRTU_slave.c: 107:     }
  3769     039D  3001               	movlw	1
  3770     039E  00FF               	movwf	btemp+1
  3771     039F  087F               	movf	btemp+1,w
  3772     03A0  07C6               	addwf	modbusResponseRegistersRead@i,f
  3773     03A1                     i1l1681:
  3774     03A1  0843               	movf	modbusResponseRegistersRead@register_num+1,w
  3775     03A2  00BC               	movwf	??_modbusResponseRegistersRead+1
  3776     03A3  0842               	movf	modbusResponseRegistersRead@register_num,w
  3777     03A4  00BB               	movwf	??_modbusResponseRegistersRead
  3778     03A5  1003               	clrc
  3779     03A6  0DBB               	rlf	??_modbusResponseRegistersRead,f
  3780     03A7  0DBC               	rlf	??_modbusResponseRegistersRead+1,f
  3781     03A8  0846               	movf	modbusResponseRegistersRead@i,w
  3782     03A9  00BD               	movwf	??_modbusResponseRegistersRead+2
  3783     03AA  01BE               	clrf	??_modbusResponseRegistersRead+3
  3784     03AB  083C               	movf	??_modbusResponseRegistersRead+1,w
  3785     03AC  023E               	subwf	??_modbusResponseRegistersRead+3,w
  3786     03AD  1D03               	skipz
  3787     03AE  2BB1               	goto	u90_25
  3788     03AF  083B               	movf	??_modbusResponseRegistersRead,w
  3789     03B0  023D               	subwf	??_modbusResponseRegistersRead+2,w
  3790     03B1                     u90_25:
  3791     03B1  1C03               	skipc
  3792     03B2  2BB4               	goto	u90_21
  3793     03B3  2BB5               	goto	u90_20
  3794     03B4                     u90_21:
  3795     03B4  2B4B               	goto	i1l289
  3796     03B5                     u90_20:
  3797     03B5                     i1l1683:
  3798                           
  3799                           ;RS485_ModbusRTU_slave.c: 110:     uint16_t checksum = crc16(tx_buffer, i);
  3800     03B5  0846               	movf	modbusResponseRegistersRead@i,w
  3801     03B6  00BB               	movwf	??_modbusResponseRegistersRead
  3802     03B7  01BC               	clrf	??_modbusResponseRegistersRead+1
  3803     03B8  083B               	movf	??_modbusResponseRegistersRead,w
  3804     03B9  00F0               	movwf	crc16@length
  3805     03BA  083C               	movf	??_modbusResponseRegistersRead+1,w
  3806     03BB  00F1               	movwf	crc16@length+1
  3807     03BC  0847               	movf	modbusResponseRegistersRead@tx_buffer,w
  3808     03BD  120A  118A  274C  120A  118A  	fcall	_crc16
  3809     03C2  0871               	movf	?_crc16+1,w
  3810     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3811     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3812     03C5  00C5               	movwf	modbusResponseRegistersRead@checksum+1
  3813     03C6  0870               	movf	?_crc16,w
  3814     03C7  00C4               	movwf	modbusResponseRegistersRead@checksum
  3815     03C8                     i1l1685:
  3816                           
  3817                           ;RS485_ModbusRTU_slave.c: 111:     tx_buffer[i++] = checksum & 0xFF;
  3818     03C8  0846               	movf	modbusResponseRegistersRead@i,w
  3819     03C9  0747               	addwf	modbusResponseRegistersRead@tx_buffer,w
  3820     03CA  00BB               	movwf	??_modbusResponseRegistersRead
  3821     03CB  083B               	movf	??_modbusResponseRegistersRead,w
  3822     03CC  0084               	movwf	4
  3823     03CD  0844               	movf	modbusResponseRegistersRead@checksum,w
  3824     03CE  1383               	bcf	3,7	;select IRP bank0
  3825     03CF  0080               	movwf	0
  3826     03D0                     i1l1687:
  3827     03D0  3001               	movlw	1
  3828     03D1  00FF               	movwf	btemp+1
  3829     03D2  087F               	movf	btemp+1,w
  3830     03D3  07C6               	addwf	modbusResponseRegistersRead@i,f
  3831     03D4                     i1l1689:
  3832                           
  3833                           ;RS485_ModbusRTU_slave.c: 112:     tx_buffer[i] = (checksum >> 8) & 0xFF;
  3834     03D4  0846               	movf	modbusResponseRegistersRead@i,w
  3835     03D5  0747               	addwf	modbusResponseRegistersRead@tx_buffer,w
  3836     03D6  00BB               	movwf	??_modbusResponseRegistersRead
  3837     03D7  083B               	movf	??_modbusResponseRegistersRead,w
  3838     03D8  0084               	movwf	4
  3839     03D9  0845               	movf	modbusResponseRegistersRead@checksum+1,w
  3840     03DA  0080               	movwf	0
  3841     03DB                     i1l1691:
  3842                           
  3843                           ;RS485_ModbusRTU_slave.c: 115:     RS485sendString((char *)tx_buffer);
  3844     03DB  0847               	movf	modbusResponseRegistersRead@tx_buffer,w
  3845     03DC  120A  158A  2714  120A  118A  	fcall	_RS485sendString
  3846     03E1                     i1l1693:
  3847                           
  3848                           ;RS485_ModbusRTU_slave.c: 117:     return 1;
  3849     03E1  3001               	movlw	1
  3850     03E2                     i1l293:
  3851     03E2  0008               	return
  3852     03E3                     __end_of_modbusResponseRegistersRead:
  3853                           
  3854                           	psect	text20
  3855     05F5                     __ptext20:	
  3856 ;; *************** function ___awdiv *****************
  3857 ;; Defined at:
  3858 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  divisor         2    0[COMMON] int 
  3861 ;;  dividend        2    2[COMMON] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  quotient        2    6[COMMON] int 
  3864 ;;  sign            1    5[COMMON] unsigned char 
  3865 ;;  counter         1    4[COMMON] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    0[COMMON] int 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, btemp+1
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3875 ;;      Params:         4       0       0       0       0
  3876 ;;      Locals:         4       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0
  3878 ;;      Totals:         8       0       0       0       0
  3879 ;;Total ram usage:        8 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_modbusResponseRegistersRead
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888     05F5                     ___awdiv:	
  3889                           ;psect for function ___awdiv
  3890                           
  3891     05F5                     i1l1579:	
  3892                           ;incstack = 0
  3893                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3894                           
  3895     05F5  01F5               	clrf	___awdiv@sign
  3896     05F6                     i1l1581:
  3897     05F6  1FF1               	btfss	___awdiv@divisor+1,7
  3898     05F7  2DF9               	goto	u77_21
  3899     05F8  2DFA               	goto	u77_20
  3900     05F9                     u77_21:
  3901     05F9  2E01               	goto	i1l1587
  3902     05FA                     u77_20:
  3903     05FA                     i1l1583:
  3904     05FA  09F0               	comf	___awdiv@divisor,f
  3905     05FB  09F1               	comf	___awdiv@divisor+1,f
  3906     05FC  0AF0               	incf	___awdiv@divisor,f
  3907     05FD  1903               	skipnz
  3908     05FE  0AF1               	incf	___awdiv@divisor+1,f
  3909     05FF                     i1l1585:
  3910     05FF  01F5               	clrf	___awdiv@sign
  3911     0600  0AF5               	incf	___awdiv@sign,f
  3912     0601                     i1l1587:
  3913     0601  1FF3               	btfss	___awdiv@dividend+1,7
  3914     0602  2E04               	goto	u78_21
  3915     0603  2E05               	goto	u78_20
  3916     0604                     u78_21:
  3917     0604  2E0E               	goto	i1l1593
  3918     0605                     u78_20:
  3919     0605                     i1l1589:
  3920     0605  09F2               	comf	___awdiv@dividend,f
  3921     0606  09F3               	comf	___awdiv@dividend+1,f
  3922     0607  0AF2               	incf	___awdiv@dividend,f
  3923     0608  1903               	skipnz
  3924     0609  0AF3               	incf	___awdiv@dividend+1,f
  3925     060A                     i1l1591:
  3926     060A  3001               	movlw	1
  3927     060B  00FF               	movwf	btemp+1
  3928     060C  087F               	movf	btemp+1,w
  3929     060D  06F5               	xorwf	___awdiv@sign,f
  3930     060E                     i1l1593:
  3931     060E  01F6               	clrf	___awdiv@quotient
  3932     060F  01F7               	clrf	___awdiv@quotient+1
  3933     0610                     i1l1595:
  3934     0610  0870               	movf	___awdiv@divisor,w
  3935     0611  0471               	iorwf	___awdiv@divisor+1,w
  3936     0612  1903               	btfsc	3,2
  3937     0613  2E15               	goto	u79_21
  3938     0614  2E16               	goto	u79_20
  3939     0615                     u79_21:
  3940     0615  2E4D               	goto	i1l1615
  3941     0616                     u79_20:
  3942     0616                     i1l1597:
  3943     0616  01F4               	clrf	___awdiv@counter
  3944     0617  0AF4               	incf	___awdiv@counter,f
  3945     0618  2E24               	goto	i1l1603
  3946     0619                     i1l1599:
  3947     0619  3001               	movlw	1
  3948     061A                     u80_25:
  3949     061A  1003               	clrc
  3950     061B  0DF0               	rlf	___awdiv@divisor,f
  3951     061C  0DF1               	rlf	___awdiv@divisor+1,f
  3952     061D  3EFF               	addlw	-1
  3953     061E  1D03               	skipz
  3954     061F  2E1A               	goto	u80_25
  3955     0620                     i1l1601:
  3956     0620  3001               	movlw	1
  3957     0621  00FF               	movwf	btemp+1
  3958     0622  087F               	movf	btemp+1,w
  3959     0623  07F4               	addwf	___awdiv@counter,f
  3960     0624                     i1l1603:
  3961     0624  1FF1               	btfss	___awdiv@divisor+1,7
  3962     0625  2E27               	goto	u81_21
  3963     0626  2E28               	goto	u81_20
  3964     0627                     u81_21:
  3965     0627  2E19               	goto	i1l1599
  3966     0628                     u81_20:
  3967     0628                     i1l1605:
  3968     0628  3001               	movlw	1
  3969     0629                     u82_25:
  3970     0629  1003               	clrc
  3971     062A  0DF6               	rlf	___awdiv@quotient,f
  3972     062B  0DF7               	rlf	___awdiv@quotient+1,f
  3973     062C  3EFF               	addlw	-1
  3974     062D  1D03               	skipz
  3975     062E  2E29               	goto	u82_25
  3976     062F  0871               	movf	___awdiv@divisor+1,w
  3977     0630  0273               	subwf	___awdiv@dividend+1,w
  3978     0631  1D03               	skipz
  3979     0632  2E35               	goto	u83_25
  3980     0633  0870               	movf	___awdiv@divisor,w
  3981     0634  0272               	subwf	___awdiv@dividend,w
  3982     0635                     u83_25:
  3983     0635  1C03               	skipc
  3984     0636  2E38               	goto	u83_21
  3985     0637  2E39               	goto	u83_20
  3986     0638                     u83_21:
  3987     0638  2E40               	goto	i1l1611
  3988     0639                     u83_20:
  3989     0639                     i1l1607:
  3990     0639  0870               	movf	___awdiv@divisor,w
  3991     063A  02F2               	subwf	___awdiv@dividend,f
  3992     063B  0871               	movf	___awdiv@divisor+1,w
  3993     063C  1C03               	skipc
  3994     063D  03F3               	decf	___awdiv@dividend+1,f
  3995     063E  02F3               	subwf	___awdiv@dividend+1,f
  3996     063F                     i1l1609:
  3997     063F  1476               	bsf	___awdiv@quotient,0
  3998     0640                     i1l1611:
  3999     0640  3001               	movlw	1
  4000     0641                     u84_25:
  4001     0641  1003               	clrc
  4002     0642  0CF1               	rrf	___awdiv@divisor+1,f
  4003     0643  0CF0               	rrf	___awdiv@divisor,f
  4004     0644  3EFF               	addlw	-1
  4005     0645  1D03               	skipz
  4006     0646  2E41               	goto	u84_25
  4007     0647                     i1l1613:
  4008     0647  3001               	movlw	1
  4009     0648  02F4               	subwf	___awdiv@counter,f
  4010     0649  1D03               	btfss	3,2
  4011     064A  2E4C               	goto	u85_21
  4012     064B  2E4D               	goto	u85_20
  4013     064C                     u85_21:
  4014     064C  2E28               	goto	i1l1605
  4015     064D                     u85_20:
  4016     064D                     i1l1615:
  4017     064D  0875               	movf	___awdiv@sign,w
  4018     064E  1903               	btfsc	3,2
  4019     064F  2E51               	goto	u86_21
  4020     0650  2E52               	goto	u86_20
  4021     0651                     u86_21:
  4022     0651  2E57               	goto	i1l1619
  4023     0652                     u86_20:
  4024     0652                     i1l1617:
  4025     0652  09F6               	comf	___awdiv@quotient,f
  4026     0653  09F7               	comf	___awdiv@quotient+1,f
  4027     0654  0AF6               	incf	___awdiv@quotient,f
  4028     0655  1903               	skipnz
  4029     0656  0AF7               	incf	___awdiv@quotient+1,f
  4030     0657                     i1l1619:
  4031     0657  0877               	movf	___awdiv@quotient+1,w
  4032     0658  00F1               	movwf	?___awdiv+1
  4033     0659  0876               	movf	___awdiv@quotient,w
  4034     065A  00F0               	movwf	?___awdiv
  4035     065B                     i1l540:
  4036     065B  0008               	return
  4037     065C                     __end_of___awdiv:
  4038                           
  4039                           	psect	text21
  4040     065C                     __ptext21:	
  4041 ;; *************** function _modbusResponseMultipleWrite *****************
  4042 ;; Defined at:
  4043 ;;		line 134 in file "RS485_ModbusRTU_slave.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  tx_buffer       1    wreg     PTR unsigned char 
  4046 ;;		 -> tx_buffer(25), 
  4047 ;;  length          2   10[COMMON] unsigned int 
  4048 ;;  rcv_buffer      1   12[COMMON] PTR unsigned char 
  4049 ;;		 -> rcv_buffer(25), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  tx_buffer       1    4[BANK0 ] PTR unsigned char 
  4052 ;;		 -> tx_buffer(25), 
  4053 ;;  checksum        2    2[BANK0 ] unsigned int 
  4054 ;;  i               1    5[BANK0 ] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      unsigned char 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4064 ;;      Params:         3       0       0       0       0
  4065 ;;      Locals:         0       4       0       0       0
  4066 ;;      Temps:          0       2       0       0       0
  4067 ;;      Totals:         3       6       0       0       0
  4068 ;;Total ram usage:        9 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 3
  4071 ;; This function calls:
  4072 ;;		_RS485sendString
  4073 ;;		_clearBuffer
  4074 ;;		_crc16
  4075 ;; This function is called by:
  4076 ;;		_modbusMesHandling
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080     065C                     _modbusResponseMultipleWrite:	
  4081                           ;psect for function _modbusResponseMultipleWrite
  4082                           
  4083                           
  4084                           ;incstack = 0
  4085 ;; hardware stack exceeded
  4086                           ; Regs used in _modbusResponseMultipleWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  4087                           ;modbusResponseMultipleWrite@tx_buffer stored from wreg
  4088     065C  1283               	bcf	3,5	;RP0=0, select bank0
  4089     065D  1303               	bcf	3,6	;RP1=0, select bank0
  4090     065E  00BF               	movwf	modbusResponseMultipleWrite@tx_buffer
  4091     065F                     i1l1705:
  4092                           
  4093                           ;RS485_ModbusRTU_slave.c: 134: uint8_t modbusResponseMultipleWrite(uint8_t *tx_buffer, u
      +                          int16_t length, uint8_t *rcv_buffer);RS485_ModbusRTU_slave.c: 135: {;RS485_ModbusRTU_sla
      +                          ve.c: 137:     clearBuffer(tx_buffer, length);
  4094     065F  087B               	movf	modbusResponseMultipleWrite@length+1,w
  4095     0660  00F1               	movwf	clearBuffer@len+1
  4096     0661  087A               	movf	modbusResponseMultipleWrite@length,w
  4097     0662  00F0               	movwf	clearBuffer@len
  4098     0663  083F               	movf	modbusResponseMultipleWrite@tx_buffer,w
  4099     0664  120A  158A  27A7  120A  118A  	fcall	_clearBuffer
  4100     0669                     i1l1707:
  4101                           
  4102                           ;RS485_ModbusRTU_slave.c: 140:     uint8_t i;;RS485_ModbusRTU_slave.c: 141:     for (i =
      +                           0; i < 6; ++i)
  4103     0669  1283               	bcf	3,5	;RP0=0, select bank0
  4104     066A  1303               	bcf	3,6	;RP1=0, select bank0
  4105     066B  01C0               	clrf	modbusResponseMultipleWrite@i
  4106     066C                     i1l1713:
  4107                           
  4108                           ;RS485_ModbusRTU_slave.c: 142:         tx_buffer[i] = rcv_buffer[0];
  4109     066C  087C               	movf	modbusResponseMultipleWrite@rcv_buffer,w
  4110     066D  0084               	movwf	4
  4111     066E  1383               	bcf	3,7	;select IRP bank0
  4112     066F  0800               	movf	0,w
  4113     0670  00FF               	movwf	btemp+1
  4114     0671  0840               	movf	modbusResponseMultipleWrite@i,w
  4115     0672  073F               	addwf	modbusResponseMultipleWrite@tx_buffer,w
  4116     0673  00BB               	movwf	??_modbusResponseMultipleWrite
  4117     0674  083B               	movf	??_modbusResponseMultipleWrite,w
  4118     0675  0084               	movwf	4
  4119     0676  087F               	movf	btemp+1,w
  4120     0677  0080               	movwf	0
  4121     0678                     i1l1715:
  4122     0678  3001               	movlw	1
  4123     0679  00FF               	movwf	btemp+1
  4124     067A  087F               	movf	btemp+1,w
  4125     067B  07C0               	addwf	modbusResponseMultipleWrite@i,f
  4126     067C                     i1l1717:
  4127     067C  3006               	movlw	6
  4128     067D  0240               	subwf	modbusResponseMultipleWrite@i,w
  4129     067E  1C03               	skipc
  4130     067F  2E81               	goto	u91_21
  4131     0680  2E82               	goto	u91_20
  4132     0681                     u91_21:
  4133     0681  2E6C               	goto	i1l1713
  4134     0682                     u91_20:
  4135     0682                     i1l1719:
  4136                           
  4137                           ;RS485_ModbusRTU_slave.c: 145:     uint16_t checksum = crc16(tx_buffer, i);
  4138     0682  0840               	movf	modbusResponseMultipleWrite@i,w
  4139     0683  00BB               	movwf	??_modbusResponseMultipleWrite
  4140     0684  01BC               	clrf	??_modbusResponseMultipleWrite+1
  4141     0685  083B               	movf	??_modbusResponseMultipleWrite,w
  4142     0686  00F0               	movwf	crc16@length
  4143     0687  083C               	movf	??_modbusResponseMultipleWrite+1,w
  4144     0688  00F1               	movwf	crc16@length+1
  4145     0689  083F               	movf	modbusResponseMultipleWrite@tx_buffer,w
  4146     068A  120A  118A  274C  120A  118A  	fcall	_crc16
  4147     068F  0871               	movf	?_crc16+1,w
  4148     0690  1283               	bcf	3,5	;RP0=0, select bank0
  4149     0691  1303               	bcf	3,6	;RP1=0, select bank0
  4150     0692  00BE               	movwf	modbusResponseMultipleWrite@checksum+1
  4151     0693  0870               	movf	?_crc16,w
  4152     0694  00BD               	movwf	modbusResponseMultipleWrite@checksum
  4153     0695                     i1l1721:
  4154                           
  4155                           ;RS485_ModbusRTU_slave.c: 146:     tx_buffer[i++] = checksum & 0xFF;
  4156     0695  0840               	movf	modbusResponseMultipleWrite@i,w
  4157     0696  073F               	addwf	modbusResponseMultipleWrite@tx_buffer,w
  4158     0697  00BB               	movwf	??_modbusResponseMultipleWrite
  4159     0698  083B               	movf	??_modbusResponseMultipleWrite,w
  4160     0699  0084               	movwf	4
  4161     069A  083D               	movf	modbusResponseMultipleWrite@checksum,w
  4162     069B  1383               	bcf	3,7	;select IRP bank0
  4163     069C  0080               	movwf	0
  4164     069D                     i1l1723:
  4165     069D  3001               	movlw	1
  4166     069E  00FF               	movwf	btemp+1
  4167     069F  087F               	movf	btemp+1,w
  4168     06A0  07C0               	addwf	modbusResponseMultipleWrite@i,f
  4169     06A1                     i1l1725:
  4170                           
  4171                           ;RS485_ModbusRTU_slave.c: 147:     tx_buffer[i] = (checksum >> 8) & 0xFF;
  4172     06A1  0840               	movf	modbusResponseMultipleWrite@i,w
  4173     06A2  073F               	addwf	modbusResponseMultipleWrite@tx_buffer,w
  4174     06A3  00BB               	movwf	??_modbusResponseMultipleWrite
  4175     06A4  083B               	movf	??_modbusResponseMultipleWrite,w
  4176     06A5  0084               	movwf	4
  4177     06A6  083E               	movf	modbusResponseMultipleWrite@checksum+1,w
  4178     06A7  0080               	movwf	0
  4179     06A8                     i1l1727:
  4180                           
  4181                           ;RS485_ModbusRTU_slave.c: 150:     RS485sendString((char *)tx_buffer);
  4182     06A8  083F               	movf	modbusResponseMultipleWrite@tx_buffer,w
  4183     06A9  120A  158A  2714  120A  118A  	fcall	_RS485sendString
  4184     06AE                     i1l1729:
  4185                           
  4186                           ;RS485_ModbusRTU_slave.c: 151:     return 1;
  4187     06AE  3001               	movlw	1
  4188     06AF                     i1l301:
  4189     06AF  0008               	return
  4190     06B0                     __end_of_modbusResponseMultipleWrite:
  4191                           
  4192                           	psect	text22
  4193     047D                     __ptext22:	
  4194 ;; *************** function _modbusResponseCoilsRead *****************
  4195 ;; Defined at:
  4196 ;;		line 56 in file "RS485_ModbusRTU_slave.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  tx_buffer       1    wreg     PTR unsigned char 
  4199 ;;		 -> tx_buffer(25), 
  4200 ;;  length          2   10[COMMON] unsigned int 
  4201 ;;  rcv_buffer      1   12[COMMON] PTR unsigned char 
  4202 ;;		 -> rcv_buffer(25), 
  4203 ;;  coil_value      1   13[COMMON] PTR unsigned char 
  4204 ;;		 -> coil_val(2), 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  tx_buffer       1    7[BANK0 ] PTR unsigned char 
  4207 ;;		 -> tx_buffer(25), 
  4208 ;;  checksum        2    4[BANK0 ] unsigned int 
  4209 ;;  coil_num        2    2[BANK0 ] unsigned int 
  4210 ;;  i               1    6[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      unsigned char 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         4       0       0       0       0
  4221 ;;      Locals:         0       6       0       0       0
  4222 ;;      Temps:          0       2       0       0       0
  4223 ;;      Totals:         4       8       0       0       0
  4224 ;;Total ram usage:       12 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 3
  4227 ;; This function calls:
  4228 ;;		_RS485sendString
  4229 ;;		_clearBuffer
  4230 ;;		_crc16
  4231 ;; This function is called by:
  4232 ;;		_modbusMesHandling
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236     047D                     _modbusResponseCoilsRead:	
  4237                           ;psect for function _modbusResponseCoilsRead
  4238                           
  4239                           
  4240                           ;incstack = 0
  4241 ;; hardware stack exceeded
  4242                           ; Regs used in _modbusResponseCoilsRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4243                           ;modbusResponseCoilsRead@tx_buffer stored from wreg
  4244     047D  1283               	bcf	3,5	;RP0=0, select bank0
  4245     047E  1303               	bcf	3,6	;RP1=0, select bank0
  4246     047F  00C2               	movwf	modbusResponseCoilsRead@tx_buffer
  4247     0480                     i1l1623:
  4248                           
  4249                           ;RS485_ModbusRTU_slave.c: 56: uint8_t modbusResponseCoilsRead(uint8_t *tx_buffer, uint16
      +                          _t length, uint8_t *rcv_buffer, uint8_t* coil_value);RS485_ModbusRTU_slave.c: 57: {;RS48
      +                          5_ModbusRTU_slave.c: 59:     clearBuffer(tx_buffer, length);
  4250     0480  087B               	movf	modbusResponseCoilsRead@length+1,w
  4251     0481  00F1               	movwf	clearBuffer@len+1
  4252     0482  087A               	movf	modbusResponseCoilsRead@length,w
  4253     0483  00F0               	movwf	clearBuffer@len
  4254     0484  0842               	movf	modbusResponseCoilsRead@tx_buffer,w
  4255     0485  120A  158A  27A7  120A  118A  	fcall	_clearBuffer
  4256     048A                     i1l1625:
  4257                           
  4258                           ;RS485_ModbusRTU_slave.c: 62:     tx_buffer[0] = 0x05;
  4259     048A  1283               	bcf	3,5	;RP0=0, select bank0
  4260     048B  1303               	bcf	3,6	;RP1=0, select bank0
  4261     048C  0842               	movf	modbusResponseCoilsRead@tx_buffer,w
  4262     048D  0084               	movwf	4
  4263     048E  3005               	movlw	5
  4264     048F  1383               	bcf	3,7	;select IRP bank0
  4265     0490  0080               	movwf	0
  4266     0491                     i1l1627:
  4267                           
  4268                           ;RS485_ModbusRTU_slave.c: 63:     tx_buffer[1] = rcv_buffer[1];
  4269     0491  0A7C               	incf	modbusResponseCoilsRead@rcv_buffer,w
  4270     0492  0084               	movwf	4
  4271     0493  0800               	movf	0,w
  4272     0494  00FF               	movwf	btemp+1
  4273     0495  0A42               	incf	modbusResponseCoilsRead@tx_buffer,w
  4274     0496  0084               	movwf	4
  4275     0497  087F               	movf	btemp+1,w
  4276     0498  0080               	movwf	0
  4277     0499                     i1l1629:
  4278                           
  4279                           ;RS485_ModbusRTU_slave.c: 66:     uint16_t coil_num = (rcv_buffer[4] << 8) + rcv_buffer[
      +                          5];
  4280     0499  087C               	movf	modbusResponseCoilsRead@rcv_buffer,w
  4281     049A  3E04               	addlw	4
  4282     049B  0084               	movwf	4
  4283     049C  0800               	movf	0,w
  4284     049D  00BB               	movwf	??_modbusResponseCoilsRead
  4285     049E  01BC               	clrf	??_modbusResponseCoilsRead+1
  4286     049F  083B               	movf	??_modbusResponseCoilsRead,w
  4287     04A0  00BC               	movwf	??_modbusResponseCoilsRead+1
  4288     04A1  01BB               	clrf	??_modbusResponseCoilsRead
  4289     04A2  087C               	movf	modbusResponseCoilsRead@rcv_buffer,w
  4290     04A3  3E05               	addlw	5
  4291     04A4  0084               	movwf	4
  4292     04A5  0800               	movf	0,w
  4293     04A6  073B               	addwf	??_modbusResponseCoilsRead,w
  4294     04A7  00BD               	movwf	modbusResponseCoilsRead@coil_num
  4295     04A8  3000               	movlw	0
  4296     04A9  1803               	skipnc
  4297     04AA  3001               	movlw	1
  4298     04AB  073C               	addwf	??_modbusResponseCoilsRead+1,w
  4299     04AC  00BE               	movwf	modbusResponseCoilsRead@coil_num+1
  4300     04AD                     i1l1631:
  4301                           
  4302                           ;RS485_ModbusRTU_slave.c: 67:     tx_buffer[2] = (coil_num / 8) + 1;
  4303     04AD  0842               	movf	modbusResponseCoilsRead@tx_buffer,w
  4304     04AE  3E02               	addlw	2
  4305     04AF  0084               	movwf	4
  4306     04B0  083E               	movf	modbusResponseCoilsRead@coil_num+1,w
  4307     04B1  00BC               	movwf	??_modbusResponseCoilsRead+1
  4308     04B2  083D               	movf	modbusResponseCoilsRead@coil_num,w
  4309     04B3  00BB               	movwf	??_modbusResponseCoilsRead
  4310     04B4  1003               	clrc
  4311     04B5  0CBC               	rrf	??_modbusResponseCoilsRead+1,f
  4312     04B6  0CBB               	rrf	??_modbusResponseCoilsRead,f
  4313     04B7  1003               	clrc
  4314     04B8  0CBC               	rrf	??_modbusResponseCoilsRead+1,f
  4315     04B9  0CBB               	rrf	??_modbusResponseCoilsRead,f
  4316     04BA  1003               	clrc
  4317     04BB  0CBC               	rrf	??_modbusResponseCoilsRead+1,f
  4318     04BC  0CBB               	rrf	??_modbusResponseCoilsRead,f
  4319     04BD  083B               	movf	??_modbusResponseCoilsRead,w
  4320     04BE  3E01               	addlw	1
  4321     04BF  0080               	movwf	0
  4322     04C0                     i1l1633:
  4323                           
  4324                           ;RS485_ModbusRTU_slave.c: 70:     uint8_t i;;RS485_ModbusRTU_slave.c: 71:     for (i = 0
      +                          ; i < coil_num; ++i)
  4325     04C0  01C1               	clrf	modbusResponseCoilsRead@i
  4326     04C1  2CD5               	goto	i1l1639
  4327     04C2                     i1l1635:
  4328                           
  4329                           ;RS485_ModbusRTU_slave.c: 72:         tx_buffer[i + 3] = coil_value[i];
  4330     04C2  0841               	movf	modbusResponseCoilsRead@i,w
  4331     04C3  077D               	addwf	modbusResponseCoilsRead@coil_value,w
  4332     04C4  00BB               	movwf	??_modbusResponseCoilsRead
  4333     04C5  083B               	movf	??_modbusResponseCoilsRead,w
  4334     04C6  0084               	movwf	4
  4335     04C7  0800               	movf	0,w
  4336     04C8  00FF               	movwf	btemp+1
  4337     04C9  0841               	movf	modbusResponseCoilsRead@i,w
  4338     04CA  0742               	addwf	modbusResponseCoilsRead@tx_buffer,w
  4339     04CB  00BC               	movwf	??_modbusResponseCoilsRead+1
  4340     04CC  083C               	movf	??_modbusResponseCoilsRead+1,w
  4341     04CD  3E03               	addlw	3
  4342     04CE  0084               	movwf	4
  4343     04CF  087F               	movf	btemp+1,w
  4344     04D0  0080               	movwf	0
  4345     04D1                     i1l1637:
  4346     04D1  3001               	movlw	1
  4347     04D2  00FF               	movwf	btemp+1
  4348     04D3  087F               	movf	btemp+1,w
  4349     04D4  07C1               	addwf	modbusResponseCoilsRead@i,f
  4350     04D5                     i1l1639:
  4351     04D5  0841               	movf	modbusResponseCoilsRead@i,w
  4352     04D6  00BB               	movwf	??_modbusResponseCoilsRead
  4353     04D7  01BC               	clrf	??_modbusResponseCoilsRead+1
  4354     04D8  083E               	movf	modbusResponseCoilsRead@coil_num+1,w
  4355     04D9  023C               	subwf	??_modbusResponseCoilsRead+1,w
  4356     04DA  1D03               	skipz
  4357     04DB  2CDE               	goto	u87_25
  4358     04DC  083D               	movf	modbusResponseCoilsRead@coil_num,w
  4359     04DD  023B               	subwf	??_modbusResponseCoilsRead,w
  4360     04DE                     u87_25:
  4361     04DE  1C03               	skipc
  4362     04DF  2CE1               	goto	u87_21
  4363     04E0  2CE2               	goto	u87_20
  4364     04E1                     u87_21:
  4365     04E1  2CC2               	goto	i1l1635
  4366     04E2                     u87_20:
  4367     04E2                     i1l1641:
  4368                           
  4369                           ;RS485_ModbusRTU_slave.c: 75:     uint16_t checksum = crc16(tx_buffer, i);
  4370     04E2  0841               	movf	modbusResponseCoilsRead@i,w
  4371     04E3  00BB               	movwf	??_modbusResponseCoilsRead
  4372     04E4  01BC               	clrf	??_modbusResponseCoilsRead+1
  4373     04E5  083B               	movf	??_modbusResponseCoilsRead,w
  4374     04E6  00F0               	movwf	crc16@length
  4375     04E7  083C               	movf	??_modbusResponseCoilsRead+1,w
  4376     04E8  00F1               	movwf	crc16@length+1
  4377     04E9  0842               	movf	modbusResponseCoilsRead@tx_buffer,w
  4378     04EA  120A  118A  274C  120A  118A  	fcall	_crc16
  4379     04EF  0871               	movf	?_crc16+1,w
  4380     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  4381     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  4382     04F2  00C0               	movwf	modbusResponseCoilsRead@checksum+1
  4383     04F3  0870               	movf	?_crc16,w
  4384     04F4  00BF               	movwf	modbusResponseCoilsRead@checksum
  4385     04F5                     i1l1643:
  4386                           
  4387                           ;RS485_ModbusRTU_slave.c: 76:     tx_buffer[i++] = checksum & 0xFF;
  4388     04F5  0841               	movf	modbusResponseCoilsRead@i,w
  4389     04F6  0742               	addwf	modbusResponseCoilsRead@tx_buffer,w
  4390     04F7  00BB               	movwf	??_modbusResponseCoilsRead
  4391     04F8  083B               	movf	??_modbusResponseCoilsRead,w
  4392     04F9  0084               	movwf	4
  4393     04FA  083F               	movf	modbusResponseCoilsRead@checksum,w
  4394     04FB  1383               	bcf	3,7	;select IRP bank0
  4395     04FC  0080               	movwf	0
  4396     04FD                     i1l1645:
  4397     04FD  3001               	movlw	1
  4398     04FE  00FF               	movwf	btemp+1
  4399     04FF  087F               	movf	btemp+1,w
  4400     0500  07C1               	addwf	modbusResponseCoilsRead@i,f
  4401     0501                     i1l1647:
  4402                           
  4403                           ;RS485_ModbusRTU_slave.c: 77:     tx_buffer[i] = (checksum >> 8) & 0xFF;
  4404     0501  0841               	movf	modbusResponseCoilsRead@i,w
  4405     0502  0742               	addwf	modbusResponseCoilsRead@tx_buffer,w
  4406     0503  00BB               	movwf	??_modbusResponseCoilsRead
  4407     0504  083B               	movf	??_modbusResponseCoilsRead,w
  4408     0505  0084               	movwf	4
  4409     0506  0840               	movf	modbusResponseCoilsRead@checksum+1,w
  4410     0507  0080               	movwf	0
  4411     0508                     i1l1649:
  4412                           
  4413                           ;RS485_ModbusRTU_slave.c: 80:     RS485sendString((char *)tx_buffer);
  4414     0508  0842               	movf	modbusResponseCoilsRead@tx_buffer,w
  4415     0509  120A  158A  2714  120A  118A  	fcall	_RS485sendString
  4416     050E                     i1l1651:
  4417                           
  4418                           ;RS485_ModbusRTU_slave.c: 82:     return 1;
  4419     050E  3001               	movlw	1
  4420     050F                     i1l285:
  4421     050F  0008               	return
  4422     0510                     __end_of_modbusResponseCoilsRead:
  4423                           
  4424                           	psect	text23
  4425     074C                     __ptext23:	
  4426 ;; *************** function _crc16 *****************
  4427 ;; Defined at:
  4428 ;;		line 40 in file "CRC.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  buffer          1    wreg     PTR unsigned char 
  4431 ;;		 -> tx_buffer(25), 
  4432 ;;  length          2    0[COMMON] unsigned int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  buffer          1    7[COMMON] PTR unsigned char 
  4435 ;;		 -> tx_buffer(25), 
  4436 ;;  crcWord         2    8[COMMON] unsigned int 
  4437 ;;  temp            1    6[COMMON] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2    0[COMMON] unsigned int 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4447 ;;      Params:         2       0       0       0       0
  4448 ;;      Locals:         4       0       0       0       0
  4449 ;;      Temps:          4       0       0       0       0
  4450 ;;      Totals:        10       0       0       0       0
  4451 ;;Total ram usage:       10 bytes
  4452 ;; Hardware stack levels used: 2
  4453 ;; This function calls:
  4454 ;;		Nothing
  4455 ;; This function is called by:
  4456 ;;		_modbusResponseCoilsRead
  4457 ;;		_modbusResponseRegistersRead
  4458 ;;		_modbusResponseMultipleWrite
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462     074C                     _crc16:	
  4463                           ;psect for function _crc16
  4464                           
  4465                           
  4466                           ;incstack = 0
  4467 ;; using string table level
  4468                           ; Regs used in _crc16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4469                           ;crc16@buffer stored from wreg
  4470     074C  00F7               	movwf	crc16@buffer
  4471     074D                     i1l1535:
  4472                           
  4473                           ;CRC.c: 40: uint16_t crc16(uint8_t *buffer, uint16_t length);CRC.c: 41: {;CRC.c: 42:    
      +                           uint8_t temp;;CRC.c: 43:     uint16_t crcWord = 0xFFFF;
  4474     074D  30FF               	movlw	255
  4475     074E  00F8               	movwf	crc16@crcWord
  4476     074F  30FF               	movlw	255
  4477     0750  00F9               	movwf	crc16@crcWord+1
  4478                           
  4479                           ;CRC.c: 45:     while (length--)
  4480     0751  2F83               	goto	i1l1545
  4481     0752                     i1l1537:
  4482                           
  4483                           ;CRC.c: 46:     {;CRC.c: 47:         temp = *buffer++ ^ crcWord;
  4484     0752  0877               	movf	crc16@buffer,w
  4485     0753  0084               	movwf	4
  4486     0754  1383               	bcf	3,7	;select IRP bank0
  4487     0755  0800               	movf	0,w
  4488     0756  0678               	xorwf	crc16@crcWord,w
  4489     0757  00F6               	movwf	crc16@temp
  4490     0758                     i1l1539:
  4491     0758  3001               	movlw	1
  4492     0759  00FF               	movwf	btemp+1
  4493     075A  087F               	movf	btemp+1,w
  4494     075B  07F7               	addwf	crc16@buffer,f
  4495     075C                     i1l1541:
  4496                           
  4497                           ;CRC.c: 48:         crcWord >>= 8;
  4498     075C  3008               	movlw	8
  4499     075D                     u72_25:
  4500     075D  1003               	clrc
  4501     075E  0CF9               	rrf	crc16@crcWord+1,f
  4502     075F  0CF8               	rrf	crc16@crcWord,f
  4503     0760  3EFF               	addlw	-1
  4504     0761  1D03               	skipz
  4505     0762  2F5D               	goto	u72_25
  4506     0763                     i1l1543:
  4507                           
  4508                           ;CRC.c: 49:         crcWord ^= wCRCTable[temp];
  4509     0763  0876               	movf	crc16@temp,w
  4510     0764  00F2               	movwf	??_crc16
  4511     0765  01F3               	clrf	??_crc16+1
  4512     0766  1003               	clrc
  4513     0767  0DF2               	rlf	??_crc16,f
  4514     0768  0DF3               	rlf	??_crc16+1,f
  4515     0769  3081               	movlw	high (_wCRCTable| (0+32768))
  4516     076A  0773               	addwf	??_crc16+1,w
  4517     076B  1283               	bcf	3,5	;RP0=0, select bank0
  4518     076C  1303               	bcf	3,6	;RP1=0, select bank0
  4519     076D  00FF               	movwf	btemp+1
  4520     076E  3012               	movlw	low (_wCRCTable| (0+32768))
  4521     076F  0772               	addwf	??_crc16,w
  4522     0770  0084               	movwf	4
  4523     0771  1803               	skipnc
  4524     0772  0AFF               	incf	btemp+1,f
  4525     0773  120A  118A  2100  120A  118A  	fcall	stringtab
  4526     0778  00F4               	movwf	??_crc16+2
  4527     0779  120A  118A  2100  120A  118A  	fcall	stringtab
  4528     077E  00F5               	movwf	??_crc16+3
  4529     077F  0874               	movf	??_crc16+2,w
  4530     0780  06F8               	xorwf	crc16@crcWord,f
  4531     0781  0875               	movf	??_crc16+3,w
  4532     0782  06F9               	xorwf	crc16@crcWord+1,f
  4533     0783                     i1l1545:
  4534                           
  4535                           ;CRC.c: 45:     while (length--)
  4536     0783  3001               	movlw	1
  4537     0784  02F0               	subwf	crc16@length,f
  4538     0785  3000               	movlw	0
  4539     0786  1C03               	skipc
  4540     0787  03F1               	decf	crc16@length+1,f
  4541     0788  02F1               	subwf	crc16@length+1,f
  4542     0789  0A70               	incf	crc16@length,w
  4543     078A  1D03               	skipz
  4544     078B  2F90               	goto	u73_21
  4545     078C  0A71               	incf	crc16@length+1,w
  4546     078D  1D03               	btfss	3,2
  4547     078E  2F90               	goto	u73_21
  4548     078F  2F91               	goto	u73_20
  4549     0790                     u73_21:
  4550     0790  2F52               	goto	i1l1537
  4551     0791                     u73_20:
  4552     0791                     i1l1547:
  4553                           
  4554                           ;CRC.c: 51:     return crcWord;
  4555     0791  0879               	movf	crc16@crcWord+1,w
  4556     0792  00F1               	movwf	?_crc16+1
  4557     0793  0878               	movf	crc16@crcWord,w
  4558     0794  00F0               	movwf	?_crc16
  4559     0795                     i1l240:
  4560     0795  0008               	return
  4561     0796                     __end_of_crc16:
  4562                           
  4563                           	psect	text24
  4564     0FA7                     __ptext24:	
  4565 ;; *************** function _clearBuffer *****************
  4566 ;; Defined at:
  4567 ;;		line 4 in file "RS485_ModbusRTU_slave.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  buffer          1    wreg     PTR unsigned char 
  4570 ;;		 -> tx_buffer(25), 
  4571 ;;  len             2    0[COMMON] unsigned int 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  buffer          1    4[COMMON] PTR unsigned char 
  4574 ;;		 -> tx_buffer(25), 
  4575 ;;  i               1    5[COMMON] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         2       0       0       0       0
  4586 ;;      Locals:         2       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0
  4588 ;;      Totals:         6       0       0       0       0
  4589 ;;Total ram usage:        6 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_modbusResponseCoilsRead
  4595 ;;		_modbusResponseRegistersRead
  4596 ;;		_modbusResponseSingleWrite
  4597 ;;		_modbusResponseMultipleWrite
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601     0FA7                     _clearBuffer:	
  4602                           ;psect for function _clearBuffer
  4603                           
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _clearBuffer: [wreg-fsr0h+status,2+status,0+btemp+1]
  4607                           ;clearBuffer@buffer stored from wreg
  4608     0FA7  00F4               	movwf	clearBuffer@buffer
  4609     0FA8                     i1l1551:
  4610                           
  4611                           ;RS485_ModbusRTU_slave.c: 4: static void clearBuffer(uint8_t *buffer, uint16_t len);RS48
      +                          5_ModbusRTU_slave.c: 5: {;RS485_ModbusRTU_slave.c: 6:     for (uint8_t i = 0; i < len; +
      +                          +i)
  4612     0FA8  01F5               	clrf	clearBuffer@i
  4613     0FA9  2FB5               	goto	i1l1557
  4614     0FAA                     i1l1553:
  4615                           
  4616                           ;RS485_ModbusRTU_slave.c: 7:         buffer[i] = 0;
  4617     0FAA  0875               	movf	clearBuffer@i,w
  4618     0FAB  0774               	addwf	clearBuffer@buffer,w
  4619     0FAC  00F2               	movwf	??_clearBuffer
  4620     0FAD  0872               	movf	??_clearBuffer,w
  4621     0FAE  0084               	movwf	4
  4622     0FAF  1383               	bcf	3,7	;select IRP bank0
  4623     0FB0  0180               	clrf	0
  4624     0FB1                     i1l1555:
  4625     0FB1  3001               	movlw	1
  4626     0FB2  00FF               	movwf	btemp+1
  4627     0FB3  087F               	movf	btemp+1,w
  4628     0FB4  07F5               	addwf	clearBuffer@i,f
  4629     0FB5                     i1l1557:
  4630     0FB5  0875               	movf	clearBuffer@i,w
  4631     0FB6  00F2               	movwf	??_clearBuffer
  4632     0FB7  01F3               	clrf	??_clearBuffer+1
  4633     0FB8  0871               	movf	clearBuffer@len+1,w
  4634     0FB9  0273               	subwf	??_clearBuffer+1,w
  4635     0FBA  1D03               	skipz
  4636     0FBB  2FBE               	goto	u74_25
  4637     0FBC  0870               	movf	clearBuffer@len,w
  4638     0FBD  0272               	subwf	??_clearBuffer,w
  4639     0FBE                     u74_25:
  4640     0FBE  1C03               	skipc
  4641     0FBF  2FC1               	goto	u74_21
  4642     0FC0  2FC2               	goto	u74_20
  4643     0FC1                     u74_21:
  4644     0FC1  2FAA               	goto	i1l1553
  4645     0FC2                     u74_20:
  4646     0FC2                     i1l260:
  4647     0FC2  0008               	return
  4648     0FC3                     __end_of_clearBuffer:
  4649                           
  4650                           	psect	text25
  4651     0F14                     __ptext25:	
  4652 ;; *************** function _RS485sendString *****************
  4653 ;; Defined at:
  4654 ;;		line 41 in file "PIC16F877A_RS485.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  str             1    wreg     PTR unsigned char 
  4657 ;;		 -> tx_buffer(25), 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  str             1    6[COMMON] PTR unsigned char 
  4660 ;;		 -> tx_buffer(25), 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       0       0       0       0
  4671 ;;      Locals:         1       0       0       0       0
  4672 ;;      Temps:          1       0       0       0       0
  4673 ;;      Totals:         2       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 2
  4677 ;; This function calls:
  4678 ;;		_UARTsendString
  4679 ;; This function is called by:
  4680 ;;		_modbusResponseCoilsRead
  4681 ;;		_modbusResponseRegistersRead
  4682 ;;		_modbusResponseSingleWrite
  4683 ;;		_modbusResponseMultipleWrite
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687     0F14                     _RS485sendString:	
  4688                           ;psect for function _RS485sendString
  4689                           
  4690                           
  4691                           ;incstack = 0
  4692 ;; hardware stack exceeded
  4693                           ; Regs used in _RS485sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4694                           ;RS485sendString@str stored from wreg
  4695     0F14  00F6               	movwf	RS485sendString@str
  4696     0F15                     i1l1527:
  4697                           
  4698                           ;PIC16F877A_RS485.c: 41: void RS485sendString(char* str);PIC16F877A_RS485.c: 42: {;PIC16
      +                          F877A_RS485.c: 44:     RD0 = 1;
  4699     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4700     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4701     0F17  1408               	bsf	8,0	;volatile
  4702     0F18                     i1l1529:
  4703                           
  4704                           ;PIC16F877A_RS485.c: 46:     UARTsendString(str);
  4705     0F18  0876               	movf	RS485sendString@str,w
  4706     0F19  120A  118A  20BB  120A  158A  	fcall	_UARTsendString
  4707     0F1E                     i1l1531:
  4708                           
  4709                           ;PIC16F877A_RS485.c: 48:     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4710     0F1E  309F               	movlw	159
  4711     0F1F  00F5               	movwf	??_RS485sendString
  4712     0F20                     u124_27:
  4713     0F20  2F21               	nop2
  4714     0F21  0BF5               	decfsz	??_RS485sendString,f
  4715     0F22  2F20               	goto	u124_27
  4716     0F23  2F24               	nop2
  4717     0F24  2F25               	nop2
  4718     0F25                     i1l1533:
  4719                           
  4720                           ;PIC16F877A_RS485.c: 50:     RD0 = 0;
  4721     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  4722     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  4723     0F27  1008               	bcf	8,0	;volatile
  4724     0F28                     i1l226:
  4725     0F28  0008               	return
  4726     0F29                     __end_of_RS485sendString:
  4727                           
  4728                           	psect	text26
  4729     00BB                     __ptext26:	
  4730 ;; *************** function _UARTsendString *****************
  4731 ;; Defined at:
  4732 ;;		line 82 in file "PIC16F877A_UART.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  str             1    wreg     PTR unsigned char 
  4735 ;;		 -> tx_buffer(25), 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  str             1    4[COMMON] PTR unsigned char 
  4738 ;;		 -> tx_buffer(25), 
  4739 ;;  i               2    2[COMMON] int 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4749 ;;      Params:         0       0       0       0       0
  4750 ;;      Locals:         3       0       0       0       0
  4751 ;;      Temps:          1       0       0       0       0
  4752 ;;      Totals:         4       0       0       0       0
  4753 ;;Total ram usage:        4 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 1
  4756 ;; This function calls:
  4757 ;;		_UARTsendChar
  4758 ;; This function is called by:
  4759 ;;		_RS485sendString
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     00BB                     _UARTsendString:	
  4764                           ;psect for function _UARTsendString
  4765                           
  4766                           
  4767                           ;incstack = 0
  4768 ;; hardware stack exceeded
  4769                           ; Regs used in _UARTsendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4770                           ;UARTsendString@str stored from wreg
  4771     00BB  00F4               	movwf	UARTsendString@str
  4772     00BC                     i1l1435:
  4773                           
  4774                           ;PIC16F877A_UART.c: 82: void UARTsendString(char *str);PIC16F877A_UART.c: 83: {;PIC16F87
      +                          7A_UART.c: 84:     for (int i = 0; str[i] != '\0'; ++i)
  4775     00BC  01F2               	clrf	UARTsendString@i
  4776     00BD  01F3               	clrf	UARTsendString@i+1
  4777     00BE  28D0               	goto	i1l1441
  4778     00BF                     i1l1437:
  4779                           
  4780                           ;PIC16F877A_UART.c: 85:         UARTsendChar(str[i]);
  4781     00BF  0872               	movf	UARTsendString@i,w
  4782     00C0  0774               	addwf	UARTsendString@str,w
  4783     00C1  00F1               	movwf	??_UARTsendString
  4784     00C2  0871               	movf	??_UARTsendString,w
  4785     00C3  0084               	movwf	4
  4786     00C4  0800               	movf	0,w
  4787     00C5  120A  158A  26C8  120A  118A  	fcall	_UARTsendChar
  4788     00CA                     i1l1439:
  4789     00CA  3001               	movlw	1
  4790     00CB  07F2               	addwf	UARTsendString@i,f
  4791     00CC  1803               	skipnc
  4792     00CD  0AF3               	incf	UARTsendString@i+1,f
  4793     00CE  3000               	movlw	0
  4794     00CF  07F3               	addwf	UARTsendString@i+1,f
  4795     00D0                     i1l1441:
  4796     00D0  0872               	movf	UARTsendString@i,w
  4797     00D1  0774               	addwf	UARTsendString@str,w
  4798     00D2  00F1               	movwf	??_UARTsendString
  4799     00D3  0871               	movf	??_UARTsendString,w
  4800     00D4  0084               	movwf	4
  4801     00D5  1383               	bcf	3,7	;select IRP bank0
  4802     00D6  0800               	movf	0,w
  4803     00D7  1D03               	btfss	3,2
  4804     00D8  28DA               	goto	u61_21
  4805     00D9  28DB               	goto	u61_20
  4806     00DA                     u61_21:
  4807     00DA  28BF               	goto	i1l1437
  4808     00DB                     u61_20:
  4809     00DB                     i1l55:
  4810     00DB  0008               	return
  4811     00DC                     __end_of_UARTsendString:
  4812                           
  4813                           	psect	text27
  4814     0EC8                     __ptext27:	
  4815 ;; *************** function _UARTsendChar *****************
  4816 ;; Defined at:
  4817 ;;		line 73 in file "PIC16F877A_UART.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  c               1    wreg     unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  c               1    0[COMMON] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         0       0       0       0       0
  4832 ;;      Locals:         1       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0
  4834 ;;      Totals:         1       0       0       0       0
  4835 ;;Total ram usage:        1 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_UARTsendString
  4841 ;;		_RS485sendChar
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845     0EC8                     _UARTsendChar:	
  4846                           ;psect for function _UARTsendChar
  4847                           
  4848                           
  4849                           ;incstack = 0
  4850 ;; hardware stack exceeded
  4851                           ; Regs used in _UARTsendChar: [wreg]
  4852                           ;UARTsendChar@c stored from wreg
  4853     0EC8  00F0               	movwf	UARTsendChar@c
  4854     0EC9                     i1l1431:
  4855     0EC9                     i1l46:	
  4856                           ;PIC16F877A_UART.c: 77:         ;
  4857                           
  4858                           
  4859                           ;PIC16F877A_UART.c: 76:     while (!TRMT)
  4860     0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  4861     0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  4862     0ECB  1C98               	btfss	24,1	;volatile
  4863     0ECC  2ECE               	goto	u60_21
  4864     0ECD  2ECF               	goto	u60_20
  4865     0ECE                     u60_21:
  4866     0ECE  2EC9               	goto	i1l46
  4867     0ECF                     u60_20:
  4868     0ECF                     i1l1433:
  4869                           
  4870                           ;PIC16F877A_UART.c: 78:     TXREG = c;
  4871     0ECF  0870               	movf	UARTsendChar@c,w
  4872     0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4873     0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4874     0ED2  0099               	movwf	25	;volatile
  4875     0ED3                     i1l49:
  4876     0ED3  0008               	return
  4877     0ED4                     __end_of_UARTsendChar:
  4878                           
  4879                           	psect	text28
  4880     00DC                     __ptext28:	
  4881 ;; *************** function _LCD_Write_String *****************
  4882 ;; Defined at:
  4883 ;;		line 91 in file "LCD16x2.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  str             1    wreg     PTR unsigned char 
  4886 ;;		 -> error_msg(19), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  str             1    9[COMMON] PTR unsigned char 
  4889 ;;		 -> error_msg(19), 
  4890 ;;  i               2    7[COMMON] int 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4900 ;;      Params:         0       0       0       0       0
  4901 ;;      Locals:         3       0       0       0       0
  4902 ;;      Temps:          1       0       0       0       0
  4903 ;;      Totals:         4       0       0       0       0
  4904 ;;Total ram usage:        4 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 2
  4907 ;; This function calls:
  4908 ;;		_LCD_Write_Char
  4909 ;; This function is called by:
  4910 ;;		_modbusMesHandling
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914     00DC                     _LCD_Write_String:	
  4915                           ;psect for function _LCD_Write_String
  4916                           
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4920                           ;LCD_Write_String@str stored from wreg
  4921     00DC  00F9               	movwf	LCD_Write_String@str
  4922     00DD                     i1l1655:
  4923                           
  4924                           ;LCD16x2.c: 91: void LCD_Write_String(char *str);LCD16x2.c: 92: {;LCD16x2.c: 93:   int i
      +                          ;;LCD16x2.c: 94:   for(i=0;str[i]!='\0';i++)
  4925     00DD  01F7               	clrf	LCD_Write_String@i
  4926     00DE  01F8               	clrf	LCD_Write_String@i+1
  4927     00DF  28F1               	goto	i1l1661
  4928     00E0                     i1l1657:
  4929                           
  4930                           ;LCD16x2.c: 95:     LCD_Write_Char(str[i]);
  4931     00E0  0877               	movf	LCD_Write_String@i,w
  4932     00E1  0779               	addwf	LCD_Write_String@str,w
  4933     00E2  00F6               	movwf	??_LCD_Write_String
  4934     00E3  0876               	movf	??_LCD_Write_String,w
  4935     00E4  0084               	movwf	4
  4936     00E5  0800               	movf	0,w
  4937     00E6  120A  118A  26B0  120A  118A  	fcall	_LCD_Write_Char
  4938     00EB                     i1l1659:
  4939     00EB  3001               	movlw	1
  4940     00EC  07F7               	addwf	LCD_Write_String@i,f
  4941     00ED  1803               	skipnc
  4942     00EE  0AF8               	incf	LCD_Write_String@i+1,f
  4943     00EF  3000               	movlw	0
  4944     00F0  07F8               	addwf	LCD_Write_String@i+1,f
  4945     00F1                     i1l1661:
  4946     00F1  0877               	movf	LCD_Write_String@i,w
  4947     00F2  0779               	addwf	LCD_Write_String@str,w
  4948     00F3  00F6               	movwf	??_LCD_Write_String
  4949     00F4  0876               	movf	??_LCD_Write_String,w
  4950     00F5  0084               	movwf	4
  4951     00F6  1383               	bcf	3,7	;select IRP bank0
  4952     00F7  0800               	movf	0,w
  4953     00F8  1D03               	btfss	3,2
  4954     00F9  28FB               	goto	u88_21
  4955     00FA  28FC               	goto	u88_20
  4956     00FB                     u88_21:
  4957     00FB  28E0               	goto	i1l1657
  4958     00FC                     u88_20:
  4959     00FC                     i1l182:
  4960     00FC  0008               	return
  4961     00FD                     __end_of_LCD_Write_String:
  4962                           
  4963                           	psect	text29
  4964     06B0                     __ptext29:	
  4965 ;; *************** function _LCD_Write_Char *****************
  4966 ;; Defined at:
  4967 ;;		line 72 in file "LCD16x2.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  Data            1    wreg     unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  Data            1    5[COMMON] unsigned char 
  4972 ;;  High4           1    4[COMMON] unsigned char 
  4973 ;;  Low4            1    3[COMMON] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       0       0       0       0
  4984 ;;      Locals:         3       0       0       0       0
  4985 ;;      Temps:          2       0       0       0       0
  4986 ;;      Totals:         5       0       0       0       0
  4987 ;;Total ram usage:        5 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; Hardware stack levels required when called: 1
  4990 ;; This function calls:
  4991 ;;		i1_LCD_DATA
  4992 ;; This function is called by:
  4993 ;;		_LCD_Write_String
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997     06B0                     _LCD_Write_Char:	
  4998                           ;psect for function _LCD_Write_Char
  4999                           
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5003                           ;LCD_Write_Char@Data stored from wreg
  5004     06B0  00F5               	movwf	LCD_Write_Char@Data
  5005     06B1                     i1l1501:
  5006                           
  5007                           ;LCD16x2.c: 72: void LCD_Write_Char(char Data);LCD16x2.c: 73: {;LCD16x2.c: 74:   char Lo
      +                          w4, High4;;LCD16x2.c: 75:   Low4 = Data & 0x0F;
  5008     06B1  0875               	movf	LCD_Write_Char@Data,w
  5009     06B2  390F               	andlw	15
  5010     06B3  00F3               	movwf	LCD_Write_Char@Low4
  5011                           
  5012                           ;LCD16x2.c: 76:   High4 = Data & 0xF0;
  5013     06B4  0875               	movf	LCD_Write_Char@Data,w
  5014     06B5  39F0               	andlw	240
  5015     06B6  00F4               	movwf	LCD_Write_Char@High4
  5016     06B7                     i1l1503:
  5017                           
  5018                           ;LCD16x2.c: 77:   RD2 = 1;
  5019     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  5020     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  5021     06B9  1508               	bsf	8,2	;volatile
  5022     06BA                     i1l1505:
  5023                           
  5024                           ;LCD16x2.c: 78:   LCD_DATA(High4>>4);
  5025     06BA  0874               	movf	LCD_Write_Char@High4,w
  5026     06BB  00F1               	movwf	??_LCD_Write_Char
  5027     06BC  3004               	movlw	4
  5028     06BD                     u71_25:
  5029     06BD  1003               	clrc
  5030     06BE  0CF1               	rrf	??_LCD_Write_Char,f
  5031     06BF  3EFF               	addlw	-1
  5032     06C0  1D03               	skipz
  5033     06C1  2EBD               	goto	u71_25
  5034     06C2  0871               	movf	??_LCD_Write_Char,w
  5035     06C3  120A  118A  27DB  120A  118A  	fcall	i1_LCD_DATA
  5036     06C8                     i1l1507:
  5037                           
  5038                           ;LCD16x2.c: 79:   RD3 = 1;
  5039     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5040     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5041     06CA  1588               	bsf	8,3	;volatile
  5042     06CB                     i1l1509:
  5043                           
  5044                           ;LCD16x2.c: 80:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  5045     06CB  3003               	movlw	3
  5046     06CC  00F2               	movwf	??_LCD_Write_Char+1
  5047     06CD  3097               	movlw	151
  5048     06CE  00F1               	movwf	??_LCD_Write_Char
  5049     06CF                     u125_27:
  5050     06CF  0BF1               	decfsz	??_LCD_Write_Char,f
  5051     06D0  2ECF               	goto	u125_27
  5052     06D1  0BF2               	decfsz	??_LCD_Write_Char+1,f
  5053     06D2  2ECF               	goto	u125_27
  5054     06D3  2ED4               	nop2
  5055     06D4                     i1l1511:
  5056                           
  5057                           ;LCD16x2.c: 81:   RD3 = 0;
  5058     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  5059     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  5060     06D6  1188               	bcf	8,3	;volatile
  5061     06D7                     i1l1513:
  5062                           
  5063                           ;LCD16x2.c: 82:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  5064     06D7  3003               	movlw	3
  5065     06D8  00F2               	movwf	??_LCD_Write_Char+1
  5066     06D9  3097               	movlw	151
  5067     06DA  00F1               	movwf	??_LCD_Write_Char
  5068     06DB                     u126_27:
  5069     06DB  0BF1               	decfsz	??_LCD_Write_Char,f
  5070     06DC  2EDB               	goto	u126_27
  5071     06DD  0BF2               	decfsz	??_LCD_Write_Char+1,f
  5072     06DE  2EDB               	goto	u126_27
  5073     06DF  2EE0               	nop2
  5074     06E0                     i1l1515:
  5075                           
  5076                           ;LCD16x2.c: 83:   LCD_DATA(Low4);
  5077     06E0  0873               	movf	LCD_Write_Char@Low4,w
  5078     06E1  120A  118A  27DB  120A  118A  	fcall	i1_LCD_DATA
  5079     06E6                     i1l1517:
  5080                           
  5081                           ;LCD16x2.c: 84:   RD3 = 1;
  5082     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  5083     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  5084     06E8  1588               	bsf	8,3	;volatile
  5085     06E9                     i1l1519:
  5086                           
  5087                           ;LCD16x2.c: 85:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  5088     06E9  3003               	movlw	3
  5089     06EA  00F2               	movwf	??_LCD_Write_Char+1
  5090     06EB  3097               	movlw	151
  5091     06EC  00F1               	movwf	??_LCD_Write_Char
  5092     06ED                     u127_27:
  5093     06ED  0BF1               	decfsz	??_LCD_Write_Char,f
  5094     06EE  2EED               	goto	u127_27
  5095     06EF  0BF2               	decfsz	??_LCD_Write_Char+1,f
  5096     06F0  2EED               	goto	u127_27
  5097     06F1  2EF2               	nop2
  5098     06F2                     i1l1521:
  5099                           
  5100                           ;LCD16x2.c: 86:   RD3 = 0;
  5101     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  5102     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  5103     06F4  1188               	bcf	8,3	;volatile
  5104     06F5                     i1l1523:
  5105                           
  5106                           ;LCD16x2.c: 87:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  5107     06F5  3003               	movlw	3
  5108     06F6  00F2               	movwf	??_LCD_Write_Char+1
  5109     06F7  3097               	movlw	151
  5110     06F8  00F1               	movwf	??_LCD_Write_Char
  5111     06F9                     u128_27:
  5112     06F9  0BF1               	decfsz	??_LCD_Write_Char,f
  5113     06FA  2EF9               	goto	u128_27
  5114     06FB  0BF2               	decfsz	??_LCD_Write_Char+1,f
  5115     06FC  2EF9               	goto	u128_27
  5116     06FD  2EFE               	nop2
  5117     06FE                     i1l176:
  5118     06FE  0008               	return
  5119     06FF                     __end_of_LCD_Write_Char:
  5120                           
  5121                           	psect	text30
  5122     0796                     __ptext30:	
  5123 ;; *************** function _LCD_Set_Cursor *****************
  5124 ;; Defined at:
  5125 ;;		line 107 in file "LCD16x2.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  r               1    wreg     unsigned char 
  5128 ;;  c               1    4[COMMON] unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  r               1    6[COMMON] unsigned char 
  5131 ;;  Temp            1    9[COMMON] unsigned char 
  5132 ;;  High4           1    8[COMMON] unsigned char 
  5133 ;;  Low4            1    7[COMMON] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5143 ;;      Params:         1       0       0       0       0
  5144 ;;      Locals:         4       0       0       0       0
  5145 ;;      Temps:          1       0       0       0       0
  5146 ;;      Totals:         6       0       0       0       0
  5147 ;;Total ram usage:        6 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 2
  5150 ;; This function calls:
  5151 ;;		i1_LCD_CMD
  5152 ;; This function is called by:
  5153 ;;		_ISR
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157     0796                     _LCD_Set_Cursor:	
  5158                           ;psect for function _LCD_Set_Cursor
  5159                           
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5163                           ;LCD_Set_Cursor@r stored from wreg
  5164     0796  00F6               	movwf	LCD_Set_Cursor@r
  5165     0797                     i1l1813:
  5166                           
  5167                           ;LCD16x2.c: 107: void LCD_Set_Cursor(uint8_t r, uint8_t c);LCD16x2.c: 108: {;LCD16x2.c: 
      +                          109:   uint8_t Temp, Low4, High4;;LCD16x2.c: 110:   if(r == 1)
  5168     0797  0376               	decf	LCD_Set_Cursor@r,w
  5169     0798  1D03               	btfss	3,2
  5170     0799  2F9B               	goto	u101_21
  5171     079A  2F9C               	goto	u101_20
  5172     079B                     u101_21:
  5173     079B  2FB8               	goto	i1l1823
  5174     079C                     u101_20:
  5175     079C                     i1l1815:
  5176                           
  5177                           ;LCD16x2.c: 111:   {;LCD16x2.c: 112:     Temp = 0x80 + c - 1;
  5178     079C  0874               	movf	LCD_Set_Cursor@c,w
  5179     079D  3E7F               	addlw	127
  5180     079E  00F9               	movwf	LCD_Set_Cursor@Temp
  5181                           
  5182                           ;LCD16x2.c: 113:     High4 = Temp >> 4;
  5183     079F  0879               	movf	LCD_Set_Cursor@Temp,w
  5184     07A0  00F5               	movwf	??_LCD_Set_Cursor
  5185     07A1  3004               	movlw	4
  5186     07A2                     u102_25:
  5187     07A2  1003               	clrc
  5188     07A3  0CF5               	rrf	??_LCD_Set_Cursor,f
  5189     07A4  3EFF               	addlw	-1
  5190     07A5  1D03               	skipz
  5191     07A6  2FA2               	goto	u102_25
  5192     07A7  0875               	movf	??_LCD_Set_Cursor,w
  5193     07A8  00F8               	movwf	LCD_Set_Cursor@High4
  5194     07A9                     i1l1817:
  5195                           
  5196                           ;LCD16x2.c: 114:     Low4 = Temp & 0x0F;
  5197     07A9  0879               	movf	LCD_Set_Cursor@Temp,w
  5198     07AA  390F               	andlw	15
  5199     07AB  00F7               	movwf	LCD_Set_Cursor@Low4
  5200     07AC                     i1l1819:
  5201                           
  5202                           ;LCD16x2.c: 115:     LCD_CMD(High4);
  5203     07AC  0878               	movf	LCD_Set_Cursor@High4,w
  5204     07AD  120A  158A  2757  120A  118A  	fcall	i1_LCD_CMD
  5205     07B2                     i1l1821:
  5206                           
  5207                           ;LCD16x2.c: 116:     LCD_CMD(Low4);
  5208     07B2  0877               	movf	LCD_Set_Cursor@Low4,w
  5209     07B3  120A  158A  2757  120A  118A  	fcall	i1_LCD_CMD
  5210     07B8                     i1l1823:
  5211                           
  5212                           ;LCD16x2.c: 118:   if(r == 2)
  5213     07B8  3002               	movlw	2
  5214     07B9  0676               	xorwf	LCD_Set_Cursor@r,w
  5215     07BA  1D03               	btfss	3,2
  5216     07BB  2FBD               	goto	u103_21
  5217     07BC  2FBE               	goto	u103_20
  5218     07BD                     u103_21:
  5219     07BD  2FDA               	goto	i1l190
  5220     07BE                     u103_20:
  5221     07BE                     i1l1825:
  5222                           
  5223                           ;LCD16x2.c: 119:   {;LCD16x2.c: 120:     Temp = 0xC0 + c - 1;
  5224     07BE  0874               	movf	LCD_Set_Cursor@c,w
  5225     07BF  3EBF               	addlw	191
  5226     07C0  00F9               	movwf	LCD_Set_Cursor@Temp
  5227                           
  5228                           ;LCD16x2.c: 121:     High4 = Temp >> 4;
  5229     07C1  0879               	movf	LCD_Set_Cursor@Temp,w
  5230     07C2  00F5               	movwf	??_LCD_Set_Cursor
  5231     07C3  3004               	movlw	4
  5232     07C4                     u104_25:
  5233     07C4  1003               	clrc
  5234     07C5  0CF5               	rrf	??_LCD_Set_Cursor,f
  5235     07C6  3EFF               	addlw	-1
  5236     07C7  1D03               	skipz
  5237     07C8  2FC4               	goto	u104_25
  5238     07C9  0875               	movf	??_LCD_Set_Cursor,w
  5239     07CA  00F8               	movwf	LCD_Set_Cursor@High4
  5240     07CB                     i1l1827:
  5241                           
  5242                           ;LCD16x2.c: 122:     Low4 = Temp & 0x0F;
  5243     07CB  0879               	movf	LCD_Set_Cursor@Temp,w
  5244     07CC  390F               	andlw	15
  5245     07CD  00F7               	movwf	LCD_Set_Cursor@Low4
  5246     07CE                     i1l1829:
  5247                           
  5248                           ;LCD16x2.c: 123:     LCD_CMD(High4);
  5249     07CE  0878               	movf	LCD_Set_Cursor@High4,w
  5250     07CF  120A  158A  2757  120A  118A  	fcall	i1_LCD_CMD
  5251     07D4                     i1l1831:
  5252                           
  5253                           ;LCD16x2.c: 124:     LCD_CMD(Low4);
  5254     07D4  0877               	movf	LCD_Set_Cursor@Low4,w
  5255     07D5  120A  158A  2757  120A  118A  	fcall	i1_LCD_CMD
  5256     07DA                     i1l190:
  5257     07DA  0008               	return
  5258     07DB                     __end_of_LCD_Set_Cursor:
  5259                           
  5260                           	psect	text31
  5261     0F57                     __ptext31:	
  5262 ;; *************** function i1_LCD_CMD *****************
  5263 ;; Defined at:
  5264 ;;		line 31 in file "LCD16x2.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  CMD             1    wreg     unsigned char 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  CMD             1    3[COMMON] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, pclath, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         0       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0
  5280 ;;      Temps:          2       0       0       0       0
  5281 ;;      Totals:         3       0       0       0       0
  5282 ;;Total ram usage:        3 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 1
  5285 ;; This function calls:
  5286 ;;		i1_LCD_DATA
  5287 ;; This function is called by:
  5288 ;;		_LCD_Set_Cursor
  5289 ;;		i1_LCD_Clear
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293     0F57                     i1_LCD_CMD:	
  5294                           ;psect for function i1_LCD_CMD
  5295                           
  5296                           
  5297                           ;incstack = 0
  5298                           ; Regs used in i1_LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  5299                           ;i1LCD_CMD@CMD stored from wreg
  5300     0F57  00F3               	movwf	i1LCD_CMD@CMD
  5301     0F58                     i1l1757:
  5302                           
  5303                           ;LCD16x2.c: 31: static void LCD_CMD(uint8_t CMD);LCD16x2.c: 32: {;LCD16x2.c: 34:   RD2 =
      +                           0;
  5304     0F58  1283               	bcf	3,5	;RP0=0, select bank0
  5305     0F59  1303               	bcf	3,6	;RP1=0, select bank0
  5306     0F5A  1108               	bcf	8,2	;volatile
  5307     0F5B                     i1l1759:
  5308                           
  5309                           ;LCD16x2.c: 36:   LCD_DATA(CMD);
  5310     0F5B  0873               	movf	i1LCD_CMD@CMD,w
  5311     0F5C  120A  118A  27DB  120A  158A  	fcall	i1_LCD_DATA
  5312     0F61                     i1l1761:
  5313                           
  5314                           ;LCD16x2.c: 38:   RD3 = 1;
  5315     0F61  1283               	bcf	3,5	;RP0=0, select bank0
  5316     0F62  1303               	bcf	3,6	;RP1=0, select bank0
  5317     0F63  1588               	bsf	8,3	;volatile
  5318     0F64                     i1l1763:
  5319                           
  5320                           ;LCD16x2.c: 39:   _delay((unsigned long)((500)*(16000000/4000000.0)));
  5321     0F64  3003               	movlw	3
  5322     0F65  00F2               	movwf	??i1_LCD_CMD+1
  5323     0F66  3097               	movlw	151
  5324     0F67  00F1               	movwf	??i1_LCD_CMD
  5325     0F68                     u129_27:
  5326     0F68  0BF1               	decfsz	??i1_LCD_CMD,f
  5327     0F69  2F68               	goto	u129_27
  5328     0F6A  0BF2               	decfsz	??i1_LCD_CMD+1,f
  5329     0F6B  2F68               	goto	u129_27
  5330     0F6C  2F6D               	nop2
  5331     0F6D                     i1l1765:
  5332                           
  5333                           ;LCD16x2.c: 40:   RD3 = 0;
  5334     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5335     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5336     0F6F  1188               	bcf	8,3	;volatile
  5337     0F70                     i1l170:
  5338     0F70  0008               	return
  5339     0F71                     __end_ofi1_LCD_CMD:
  5340                           
  5341                           	psect	text32
  5342     07DB                     __ptext32:	
  5343 ;; *************** function i1_LCD_DATA *****************
  5344 ;; Defined at:
  5345 ;;		line 9 in file "LCD16x2.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  Data            1    wreg     unsigned char 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  Data            1    0[COMMON] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5359 ;;      Params:         0       0       0       0       0
  5360 ;;      Locals:         1       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0
  5362 ;;      Totals:         1       0       0       0       0
  5363 ;;Total ram usage:        1 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_LCD_Write_Char
  5369 ;;		i1_LCD_CMD
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373     07DB                     i1_LCD_DATA:	
  5374                           ;psect for function i1_LCD_DATA
  5375                           
  5376                           
  5377                           ;incstack = 0
  5378                           ; Regs used in i1_LCD_DATA: [wreg]
  5379                           ;i1LCD_DATA@Data stored from wreg
  5380     07DB  00F0               	movwf	i1LCD_DATA@Data
  5381     07DC                     i1l1447:
  5382                           
  5383                           ;LCD16x2.c: 9: static void LCD_DATA(uint8_t Data);LCD16x2.c: 10: {;LCD16x2.c: 11:   if(D
      +                          ata & 1)
  5384     07DC  1C70               	btfss	i1LCD_DATA@Data,0
  5385     07DD  2FDF               	goto	u62_21
  5386     07DE  2FE0               	goto	u62_20
  5387     07DF                     u62_21:
  5388     07DF  2FE4               	goto	i1l159
  5389     07E0                     u62_20:
  5390     07E0                     i1l1449:
  5391                           
  5392                           ;LCD16x2.c: 12:     RD4 = 1;
  5393     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  5394     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  5395     07E2  1608               	bsf	8,4	;volatile
  5396     07E3  2FE7               	goto	i1l160
  5397     07E4                     i1l159:	
  5398                           ;LCD16x2.c: 13:   else
  5399                           
  5400                           
  5401                           ;LCD16x2.c: 14:     RD4 = 0;
  5402     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  5403     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  5404     07E6  1208               	bcf	8,4	;volatile
  5405     07E7                     i1l160:
  5406                           
  5407                           ;LCD16x2.c: 15:   if(Data & 2)
  5408     07E7  1CF0               	btfss	i1LCD_DATA@Data,1
  5409     07E8  2FEA               	goto	u63_21
  5410     07E9  2FEB               	goto	u63_20
  5411     07EA                     u63_21:
  5412     07EA  2FED               	goto	i1l161
  5413     07EB                     u63_20:
  5414     07EB                     i1l1451:
  5415                           
  5416                           ;LCD16x2.c: 16:     RD5 = 1;
  5417     07EB  1688               	bsf	8,5	;volatile
  5418     07EC  2FEE               	goto	i1l162
  5419     07ED                     i1l161:	
  5420                           ;LCD16x2.c: 17:   else
  5421                           
  5422                           
  5423                           ;LCD16x2.c: 18:     RD5 = 0;
  5424     07ED  1288               	bcf	8,5	;volatile
  5425     07EE                     i1l162:
  5426                           
  5427                           ;LCD16x2.c: 19:   if(Data & 4)
  5428     07EE  1D70               	btfss	i1LCD_DATA@Data,2
  5429     07EF  2FF1               	goto	u64_21
  5430     07F0  2FF2               	goto	u64_20
  5431     07F1                     u64_21:
  5432     07F1  2FF4               	goto	i1l163
  5433     07F2                     u64_20:
  5434     07F2                     i1l1453:
  5435                           
  5436                           ;LCD16x2.c: 20:     RD6 = 1;
  5437     07F2  1708               	bsf	8,6	;volatile
  5438     07F3  2FF5               	goto	i1l164
  5439     07F4                     i1l163:	
  5440                           ;LCD16x2.c: 21:   else
  5441                           
  5442                           
  5443                           ;LCD16x2.c: 22:     RD6 = 0;
  5444     07F4  1308               	bcf	8,6	;volatile
  5445     07F5                     i1l164:
  5446                           
  5447                           ;LCD16x2.c: 23:   if(Data & 8)
  5448     07F5  1DF0               	btfss	i1LCD_DATA@Data,3
  5449     07F6  2FF8               	goto	u65_21
  5450     07F7  2FF9               	goto	u65_20
  5451     07F8                     u65_21:
  5452     07F8  2FFB               	goto	i1l165
  5453     07F9                     u65_20:
  5454     07F9                     i1l1455:
  5455                           
  5456                           ;LCD16x2.c: 24:     RD7 = 1;
  5457     07F9  1788               	bsf	8,7	;volatile
  5458     07FA  2FFC               	goto	i1l167
  5459     07FB                     i1l165:	
  5460                           ;LCD16x2.c: 25:   else
  5461                           
  5462                           
  5463                           ;LCD16x2.c: 26:     RD7 = 0;
  5464     07FB  1388               	bcf	8,7	;volatile
  5465     07FC                     i1l167:
  5466     07FC  0008               	return
  5467     07FD                     __end_ofi1_LCD_DATA:
  5468     007E                     btemp	set	126	;btemp
  5469     007E                     wtemp0	set	126
  5470                           
  5471                           	psect	idloc
  5472                           
  5473                           ;Config register IDLOC0 @ 0x2000
  5474                           ;	unspecified, using default values
  5475     2000                     	org	8192
  5476     2000  3FFF               	dw	16383
  5477                           
  5478                           ;Config register IDLOC1 @ 0x2001
  5479                           ;	unspecified, using default values
  5480     2001                     	org	8193
  5481     2001  3FFF               	dw	16383
  5482                           
  5483                           ;Config register IDLOC2 @ 0x2002
  5484                           ;	unspecified, using default values
  5485     2002                     	org	8194
  5486     2002  3FFF               	dw	16383
  5487                           
  5488                           ;Config register IDLOC3 @ 0x2003
  5489                           ;	unspecified, using default values
  5490     2003                     	org	8195
  5491     2003  3FFF               	dw	16383
  5492                           
  5493                           	psect	config
  5494                           
  5495                           ;Config register CONFIG @ 0x2007
  5496                           ;	Oscillator Selection bits
  5497                           ;	FOSC = HS, HS oscillator
  5498                           ;	Watchdog Timer Enable bit
  5499                           ;	WDTE = OFF, WDT disabled
  5500                           ;	Power-up Timer Enable bit
  5501                           ;	PWRTE = OFF, PWRT disabled
  5502                           ;	Brown-out Reset Enable bit
  5503                           ;	BOREN = ON, BOR enabled
  5504                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5505                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  5506                           ;	Data EEPROM Memory Code Protection bit
  5507                           ;	CPD = OFF, Data EEPROM code protection off
  5508                           ;	Flash Program Memory Write Enable bits
  5509                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5510                           ;	In-Circuit Debugger Mode bit
  5511                           ;	DEBUG = 0x1, unprogrammed default
  5512                           ;	Flash Program Memory Code Protection bit
  5513                           ;	CP = OFF, Code protection off
  5514     2007                     	org	8199
  5515     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    512
    Data        27
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      60
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    memcpy@d1	PTR void  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    memcpy@s1	PTR const void  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusResponseMultipleWrite@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusResponseMultipleWrite@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    sp__memcpy	PTR void  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusResponseSingleWrite@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusResponseSingleWrite@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusResponseRegistersRead@register_value	PTR unsigned int  size(1) Largest target is 4
		 -> register_val(BANK0[4]), 

    modbusResponseRegistersRead@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusResponseRegistersRead@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusResponseCoilsRead@coil_value	PTR unsigned char  size(1) Largest target is 2
		 -> coil_val(BANK0[2]), 

    modbusResponseCoilsRead@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    modbusResponseCoilsRead@tx_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    modbusRcvRequest@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    clearBuffer@buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    crc16@buffer	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    RS485rcvString@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    RS485sendString@str	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 

    LCD_Write_String@str	PTR unsigned char  size(1) Largest target is 19
		 -> error_msg(BANK0[19]), 

    UARTrcvString@rcv_buffer	PTR unsigned char  size(1) Largest target is 25
		 -> rcv_buffer(BANK1[25]), 

    UARTsendString@str	PTR unsigned char  size(1) Largest target is 25
		 -> tx_buffer(BANK1[25]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_LCD_Clear->i1_LCD_CMD
    _modbusRcvRequest->_RS485rcvString
    _RS485rcvString->_UARTrcvString
    _UARTrcvString->_UARTrcvChar
    _modbusMesHandling->_modbusResponseCoilsRead
    _modbusMesHandling->_modbusResponseRegistersRead
    _modbusMesHandling->_modbusResponseSingleWrite
    _modbusResponseSingleWrite->_memcpy
    _memcpy->_strlen
    _modbusResponseRegistersRead->_crc16
    _modbusResponseMultipleWrite->_crc16
    _modbusResponseCoilsRead->_crc16
    _RS485sendString->_UARTsendString
    _UARTsendString->_UARTsendChar
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->i1_LCD_DATA
    _LCD_Set_Cursor->i1_LCD_CMD
    i1_LCD_CMD->i1_LCD_DATA

Critical Paths under _main in BANK0

    _main->_LCD_Init
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in BANK0

    _ISR->_modbusMesHandling
    _modbusMesHandling->_modbusResponseRegistersRead

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     308
                          _LCD_Clear
                           _LCD_Init
                      _modbusRTUInit
 ---------------------------------------------------------------------------------
 (1) _modbusRTUInit                                        0     0      0       0
                          _RS485Init
 ---------------------------------------------------------------------------------
 (2) _RS485Init                                            0     0      0       0
                      _RS485TxConfig
                   _UARTTransRcvInit
 ---------------------------------------------------------------------------------
 (3) _UARTTransRcvInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RS485TxConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                             22 BANK0      2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     110
                                             19 BANK0      3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_DATA                                             1     1      0      88
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0   10008
                                             14 BANK0      4     4      0
                     _LCD_Set_Cursor
                  _modbusMesHandling
                   _modbusRcvRequest
                        i1_LCD_Clear
 ---------------------------------------------------------------------------------
 (5) i1_LCD_Clear                                          0     0      0     110
                          i1_LCD_CMD
 ---------------------------------------------------------------------------------
 (5) _modbusRcvRequest                                     7     5      2     628
                                             11 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _RS485rcvString
 ---------------------------------------------------------------------------------
 (6) _RS485rcvString                                       5     3      2     396
                                              6 COMMON     5     3      2
                      _UARTrcvString
 ---------------------------------------------------------------------------------
 (7) _UARTrcvString                                        5     3      2     220
                                              1 COMMON     5     3      2
                        _UARTrcvChar
 ---------------------------------------------------------------------------------
 (8) _UARTrcvChar                                          1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _modbusMesHandling                                    1     1      0    8814
                                             13 BANK0      1     1      0
                   _LCD_Write_String
            _modbusResponseCoilsRead
        _modbusResponseMultipleWrite
        _modbusResponseRegistersRead
          _modbusResponseSingleWrite
 ---------------------------------------------------------------------------------
 (6) _modbusResponseSingleWrite                            4     1      3    1593
                                             11 COMMON     3     0      3
                                              0 BANK0      1     1      0
                    _RS485sendString
                        _clearBuffer
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     123
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _memcpy                                               7     4      3     328
                                              4 COMMON     7     4      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _modbusResponseRegistersRead                         17    13      4    2775
                                             10 COMMON     4     0      4
                                              0 BANK0     13    13      0
                    _RS485sendString
                            ___awdiv
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) _modbusResponseMultipleWrite                          9     6      3    1808
                                             10 COMMON     3     0      3
                                              0 BANK0      6     6      0
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (6) _modbusResponseCoilsRead                             12     8      4    2061
                                             10 COMMON     4     0      4
                                              0 BANK0      8     8      0
                    _RS485sendString
                        _clearBuffer
                              _crc16
 ---------------------------------------------------------------------------------
 (8) _crc16                                               10     8      2     442
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (7) _clearBuffer                                          6     4      2     526
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _RS485sendString                                      2     2      0     299
                                              5 COMMON     2     2      0
                     _UARTsendString
 ---------------------------------------------------------------------------------
 (8) _UARTsendString                                       4     4      0     145
                                              1 COMMON     4     4      0
                       _UARTsendChar
 ---------------------------------------------------------------------------------
 (9) _UARTsendChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _LCD_Write_String                                     4     4      0     400
                                              6 COMMON     4     4      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (7) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                         i1_LCD_DATA
 ---------------------------------------------------------------------------------
 (5) _LCD_Set_Cursor                                       6     5      1     456
                                              4 COMMON     6     5      1
                          i1_LCD_CMD
 ---------------------------------------------------------------------------------
 (6) i1_LCD_CMD                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_LCD_DATA
 ---------------------------------------------------------------------------------
 (7) i1_LCD_DATA                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CMD
       _LCD_DATA
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _modbusRTUInit
     _RS485Init
       _RS485TxConfig
       _UARTTransRcvInit

 _ISR (ROOT)
   _LCD_Set_Cursor
     i1_LCD_CMD
       i1_LCD_DATA
   _modbusMesHandling
     _LCD_Write_String
       _LCD_Write_Char
         i1_LCD_DATA
     _modbusResponseCoilsRead
       _RS485sendString
         _UARTsendString
           _UARTsendChar
       _clearBuffer
       _crc16
     _modbusResponseMultipleWrite
       _RS485sendString
       _clearBuffer
       _crc16
     _modbusResponseRegistersRead
       _RS485sendString
       ___awdiv
       _clearBuffer
       _crc16
     _modbusResponseSingleWrite
       _RS485sendString
       _clearBuffer
       _memcpy
         _strlen (ARG)
       _strlen
   _modbusRcvRequest
     _RS485rcvString
       _UARTrcvString
         _UARTrcvChar
   i1_LCD_Clear
     i1_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7C      12        0.0%
ABS                  0      0      7C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 08:25:31 2023

                                        pc 0002                                         l43 0FDF  
                             ___awdiv@sign 0075                                         fsr 0004  
                                      l111 0EFD                                        l112 0EFD  
                                      l220 0EC7                                        l160 0FEA  
                                      l161 0FF0                                        l217 0EB4  
                                      l162 0FF1                                        l170 0F8B  
                                      l163 0FF7                                        l164 0FF8  
                                      l165 0FFE                                        l173 05F4  
                                      l167 0FFF                                        l159 0FE9  
                                      l185 0EED                                        l267 0EAD  
                                      _GIE 005F                                        _RD0 0040  
                                      _RD2 0042                                        _RD3 0043  
                                      _RD4 0044                                        _RD5 0045  
                                      _RD6 0046                                        _RD7 0047  
                                      u700 0FFC                                        _ISR 0037  
                                      u701 0FFB                                        u670 0FE7  
                                      u671 0FE6                                        u680 0FEE  
                                      u681 0FED                                        u690 0FF5  
                                      u691 0FF4                                        _RX9 00C6  
                                      _TX9 04C6                                        fsr0 0004  
                                      indf 0000                            ??_UARTrcvString 0073  
                  UARTrcvString@rcv_buffer 0075                             i1LCD_DATA@Data 0070  
                          __end_of_LCD_CMD 0F8C                                ?i1_LCD_DATA 0070  
                                     ?_ISR 0070                             _LCD_Set_Cursor 0796  
                                     l1525 0EAE                                       l1461 0FDC  
                                     l1463 0FDD                                       l1465 0FDE  
                                     l1457 0FC3                                       l1491 0FE3  
                                     l1459 0FDA                                       l1493 0FE7  
                                     l1741 0F88                                       l1733 0F74  
                                     l1901 05E2                                       l1495 0FEE  
                                     l1735 0F75                                       l1903 05E8  
                                     l1497 0FF5                                       l1737 0F7B  
                                     l1809 0EE1                                       l1905 05EE  
                                     l1745 0EBD                                       l1499 0FFC  
                                     l1739 0F7E                                       l1747 0EC2  
                      LCD_Write_String@str 0079                                       l1871 0587  
                                     l1919 0EEE                                       l1881 059D  
                                     l1873 058A                                       l1891 05C4  
                                     l1883 05A7                                       l1875 058B  
                                     l1893 05CA                                       l1885 05AD  
                                     l1877 058C                                       l1869 0EA8  
                                     l1895 05D0                                       l1887 05B8  
                                     l1879 0592                                       l1897 05D6  
                                     l1889 05BE                                       l1899 05DC  
                                     _BRGH 04C2                                       _CREN 00C4  
                                     u1207 05A3                                       u1217 05B3  
                                     u1227 05C2                                       u1237 0F84  
                                     u1197 0598                                       _PEIE 005E  
                                     _RCIE 0465                                       _RCIF 0065  
                                     i1l46 0EC9                                       i1l62 074B  
                                     i1l55 00DB                                       i1l49 0ED3  
                                     i1l58 0EA7                                       _SPEN 00C7  
                                     _TRMT 04C1                                       _TXEN 04C5  
                                     _SYNC 04C4              modbusResponseCoilsRead@length 007A  
                        ?_LCD_Write_String 0070                                       _main 0EEE  
                                     btemp 007E                             _change_rcv_len 005B  
                                     start 0012                         ??_LCD_Write_String 0076  
                         ??_UARTsendString 0071        modbusResponseMultipleWrite@checksum 003D  
                          _RS485sendString 0F14                                      ??_ISR 0049  
                         __end_of_LCD_DATA 1000                           __end_of_LCD_Init 05F5  
                ??_modbusResponseCoilsRead 003B                               ?i1_LCD_Clear 0070  
                                    ?_main 0070                            __end_of___awdiv 065C  
  modbusRcvRequest@modbus_rcv_request_done 003D                            ___awdiv@divisor 0070  
                                    i1l121 047C                                      i1l106 0059  
                                    i1l301 06AF                                      i1l160 07E7  
                                    i1l240 0795                                      i1l136 047C  
                                    i1l232 0F56                                      i1l161 07ED  
                                    i1l162 07EE                                      i1l170 0F70  
                                    i1l226 0F28                                      i1l163 07F4  
                                    i1l164 07F5                                      i1l260 0FC2  
                                    i1l165 07FB                                      i1l190 07DA  
                                    i1l182 00FC                                      i1l167 07FC  
                                    i1l159 07E4                                      i1l176 06FE  
                                    i1l272 0586                                      i1l185 0EE0  
                                    i1l540 065B                                      i1l285 050F  
                                    i1l293 03E2                                      i1l277 055D  
                                    i1l296 0094                                      i1l289 034B  
                                    i1l841 00BA                                      i1l847 0F3F  
                          ___awdiv@counter 0074                                      _RCREG 001A  
                 __end_of_UARTTransRcvInit 0FE0                                      _SPBRG 0099  
                                    u60_20 0ECF                                      u60_21 0ECE  
                                    u61_20 00DB                                      u61_21 00DA  
                                    u62_20 07E0                                      u62_21 07DF  
                                    u63_20 07EB                                      u63_21 07EA  
                                    u71_25 06BD                                      u64_20 07F2  
                                    u64_21 07F1                                      u72_25 075D  
                                    u80_25 061A                                      u65_20 07F9  
                                    u73_20 0791                                      u81_20 0628  
                                    u65_21 07F8                                      u73_21 0790  
                                    u81_21 0627                                      _TRISD 0088  
                                    u74_20 0FC2                                      u90_20 03B5  
                                    u66_20 0714                                      u74_21 0FC1  
                                    u90_21 03B4                                      u66_21 0713  
                                    u74_25 0FBE                                      u82_25 0629  
                                    u90_25 03B1                                      u66_25 0710  
                                    u91_20 0682                                      u83_20 0639  
                                    u75_20 0F39                                      u91_21 0681  
                                    u83_21 0638                                      u75_21 0F38  
                                    u83_25 0635                                      u76_20 00BA  
                                    u92_20 0529                                      u76_21 00B9  
                                    u92_21 0528                                      u84_25 0641  
                                    u85_20 064D                                      u77_20 05FA  
                                    u93_20 0537                                      u85_21 064C  
                                    u77_21 05F9                                      u93_21 0536  
                                    u86_20 0652                                      u78_20 0605  
                                    u94_20 0545                                      u86_21 0651  
                                    u78_21 0604                                      u94_21 0544  
                                    u87_20 04E2                                      u79_20 0616  
                                    u95_20 054C                                      u87_21 04E1  
                                    u79_21 0615                                      u95_21 054B  
                                    u87_25 04DE                                      u88_20 00FC  
                                    u96_20 0555                                      u88_21 00FB  
                                    u96_21 0554                                      u89_20 034F  
                                    u97_20 055D                                      u89_21 034E  
                                    u97_21 055C                                      _TXREG 0019  
                                    u98_20 0564                                      u98_21 0563  
                                    u99_20 056A                                      u99_21 0569  
                   __end_of_LCD_Set_Cursor 07DB                                      _crc16 074C  
                                    pclath 000A               ?_modbusResponseRegistersRead 007A  
                                    status 0003                                      wtemp0 007E  
                           _LCD_Write_Char 06B0                            __initialization 0015  
                             __end_of_main 0F01                                     ??_main 0053  
             modbusResponseMultipleWrite@i 0040                          __end_of_LCD_Clear 0EEE  
                                ??_LCD_CMD 004E      modbusResponseMultipleWrite@rcv_buffer 007C  
                          ?_LCD_Set_Cursor 0074                                     ?_crc16 0070  
                        __end_of_RS485Init 0EC8                          __end_ofi1_LCD_CMD 0F71  
                         ___awdiv@dividend 0072                          ?_modbusRcvRequest 007B  
                                   u100_20 0571                                     u100_21 0570  
                                   u101_20 079C                                     u101_21 079B  
                                   u110_20 042D                                     u110_21 042C  
                                   u102_25 07A2                                     u103_20 07BE  
                                   u111_20 043A                                     u103_21 07BD  
                                   u111_21 0439                                     i1l1501 06B1  
                                   i1l1511 06D4                                     i1l1503 06B7  
                                   i1l1431 0EC9                                     u112_20 0440  
                                   i1l1521 06F2                                     i1l1513 06D7  
                                   i1l1505 06BA                                     i1l1433 0ECF  
                                   i1l1441 00D0                                     i1l1601 0620  
                                   u112_21 043F                                     i1l1451 07EB  
                                   i1l1523 06F5                                     i1l1515 06E0  
                                   i1l1507 06C8                                     i1l1435 00BC  
                                   i1l1531 0F1E                                     i1l1611 0640  
                                   i1l1603 0624                                     i1l1443 0EA2  
                                   i1l1453 07F2                                     u104_25 07C4  
                                   i1l1517 06E6                                     i1l1509 06CB  
                                   i1l1437 00BF                                     i1l1533 0F25  
                                   i1l1541 075C                                     i1l1613 0647  
                                   i1l1605 0628                                     i1l1701 0093  
                                   i1l1455 07F9                                     i1l1447 07DC  
                                   i1l1519 06E9                                     i1l1439 00CA  
                                   i1l1527 0F15                                     i1l1551 0FA8  
                                   i1l1543 0763                                     i1l1535 074D  
                                   i1l1631 04AD                                     i1l1623 0480  
                                   i1l1607 0639                                     i1l1615 064D  
                                   i1l1471 0720                                     u113_20 0451  
                                   u105_20 03EE                                     i1l1449 07E0  
                                   i1l1529 0F18                                     i1l1553 0FAA  
                                   i1l1537 0752                                     i1l1545 0783  
                                   i1l1641 04E2                                     i1l1633 04C0  
                                   i1l1625 048A                                     i1l1721 0695  
                                   i1l1713 066C                                     i1l1705 065F  
                                   i1l1617 0652                                     i1l1609 063F  
                                   i1l1561 0F2D                                     u113_21 0450  
                                   u105_21 03ED                                     i1l1473 0728  
                                   i1l1801 056A                                     i1l1555 0FB1  
                                   i1l1547 0791                                     i1l1539 0758  
                                   i1l1651 050E                                     i1l1643 04F5  
                                   i1l1635 04C2                                     i1l1627 0491  
                                   i1l1723 069D                                     i1l1715 0678  
                                   i1l1707 0669                                     i1l1619 0657  
                                   i1l1571 009B                                     i1l1563 0F31  
                                   i1l1475 072E                                     i1l1483 0735  
                                   i1l1467 0700                                     i1l1803 0571  
                                   i1l1821 07B2                                     i1l1813 0797  
                                   i1l1661 00F1                                     i1l1557 0FB5  
                                   i1l1645 04FD                                     i1l1637 04D1  
                                   i1l1629 0499                                     i1l1725 06A1  
                                   i1l1717 067C                                     i1l1581 05F6  
                                   i1l1573 00A0                                     i1l1565 0F39  
                                   i1l1485 0741                                     i1l1477 0730  
                                   i1l1469 0714                                     i1l1805 0582  
                                   i1l1831 07D4                                     i1l1815 079C  
                                   i1l1823 07B8                                     i1l1655 00DD  
                                   i1l1647 0501                                     i1l1639 04D5  
                                   i1l1727 06A8                                     i1l1719 0682  
                                   i1l1591 060A                                     i1l1583 05FA  
                                   i1l1671 0342                                     i1l1663 0315  
                                   i1l1575 00A4                                     i1l1559 0F2A  
                                   i1l1487 0749                                     i1l1751 0F44  
                                   i1l1911 0037                                     u114_20 045E  
                                   u106_20 03F4                                     i1l1761 0F61  
                                   i1l1825 07BE                                     i1l1817 07A9  
                                   i1l1657 00E0                                     i1l1649 0508  
                                   i1l1729 06AE                                     i1l1593 060E  
                                   i1l1585 05FF                                     i1l1681 03A1  
                                   i1l1673 0349                                     i1l1665 031F  
                                   i1l1577 00AC                                     i1l1569 0096  
                                   u114_21 045D                                     i1l1841 0407  
                                   u106_21 03F3                                     i1l1833 03E3  
                                   i1l1753 0F52                                     i1l1913 003B  
                                   i1l1763 0F64                                     i1l1827 07CB  
                                   i1l1819 07AC                                     i1l1659 00EB  
                                   i1l1595 0610                                     i1l1587 0601  
                                   i1l1579 05F5                                     i1l1691 03DB  
                                   i1l1683 03B5                                     i1l1675 034F  
                                   i1l1667 0326                                     i1l1851 0434  
                                   i1l1843 040E                                     i1l1835 03E9  
                                   i1l1771 0523                                     i1l1907 0ED4  
                                   i1l1915 0047                                     i1l1765 0F6D  
                                   i1l1757 0F58                                     i1l1829 07CE  
                                   i1l1597 0616                                     i1l1589 0605  
                                   i1l1693 03E1                                     i1l1685 03C8  
                                   i1l1677 0379                                     i1l1669 032E  
                                   i1l1861 045E                                     i1l1853 043A  
                                   i1l1845 0414                                     i1l1837 03EE  
                                   i1l1749 0F41                                     i1l1773 0529  
                                   i1l1917 0054                                     i1l1759 0F5B  
                                   i1l1599 0619                                     i1l1687 03D0  
                                   i1l1679 039D                                     i1l1863 0464  
                                   i1l1855 0440                                     i1l1847 041A  
                                   i1l1839 03F4                                     i1l1791 0545  
                                   i1l1775 052D            __end_of_modbusResponseCoilsRead 0510  
                                   u115_20 0464                                     u107_20 0407  
                                   i1l1689 03D4                                     i1l1697 0069  
                                   i1l1865 0475                                     u115_21 0463  
                                   i1l1857 0451                                     i1l1849 042D  
                                   u107_21 0406                                     i1l1793 054C  
                                   i1l1785 053A                                     i1l1777 052E  
                                   i1l1769 0513                                     i1l1699 008B  
                                   i1l1859 0458                                     i1l1795 0555  
                                   i1l1779 0537                                     i1l1797 055F  
                                   i1l1789 053F                                     i1l1799 0564  
                                   u116_20 0475                                     u108_20 0414  
                                   u116_21 0474                                     u108_21 0413  
                                   u124_27 0F20                                     u109_20 041A  
                                   u117_20 003B                                     u109_21 0419  
                                   u117_21 003A                                     u125_27 06CF  
                                   u118_20 0047                                     u118_21 0046  
                                   u126_27 06DB                                     u127_27 06ED  
                                   u128_27 06F9                                     u129_27 0F68  
                  __end_of_RS485sendString 0F29                         ??_modbusRcvRequest 003B  
                                   _TRISD0 0440                                     _TRISD2 0442  
                                   _TRISD3 0443                                     _TRISC6 043E  
                                   _TRISC7 043F              ??_modbusResponseRegistersRead 003B  
                   __end_of_LCD_Write_Char 06FF  modbusResponseRegistersRead@register_value 007D  
                            _RS485TxConfig 0EAE                                  ??___awdiv 0074  
                                   _memcpy 0095                           ___awdiv@quotient 0076  
                                   _strlen 0F29                               ?_UARTrcvChar 0070  
                                   saved_w 007E                               crc16@crcWord 0078  
                        _modbusMesHandling 03E3                            LCD_Set_Cursor@c 0074  
                        UARTsendString@str 0074                            LCD_Set_Cursor@r 0076  
                       ?_modbusMesHandling 0070                                  ?_LCD_DATA 0070  
                  __end_of__initialization 0033                                  ?_LCD_Init 0070  
                             i1LCD_CMD@CMD 0073                            ?_LCD_Write_Char 0070  
                      ??_modbusMesHandling 007E                             ?_RS485TxConfig 0070  
                           __pcstackCOMMON 0070                               __pidataBANK0 0F8C  
                            __end_of_crc16 0796                 ?_modbusResponseSingleWrite 007B  
                __end_of_modbusMesHandling 047D                                    ??_crc16 0072  
                             ??i1_LCD_DATA 0070                                 __pbssBANK0 0053  
                               __pbssBANK1 00A0                                 ??_LCD_DATA 004D  
                         ?_RS485sendString 0070                                 ??_LCD_Init 0051  
                               __pmaintext 0EEE                          __end_of_wCRCTable 0312  
                               __pintentry 0004                                    ?_memcpy 0074  
                       __end_ofi1_LCD_DATA 07FD         modbusResponseSingleWrite@tx_buffer 003B  
                                  ?_strlen 0070                                    _LCD_CMD 0F71  
  modbusResponseRegistersRead@register_num 0042                          ?_UARTTransRcvInit 0070  
                       ??_UARTTransRcvInit 004D                      __end_of_UARTrcvString 074C  
                     _slave_rcv_buffer_len 0020                                 __stringtab 0100  
                          ??_RS485TxConfig 004D                 modbusRcvRequest@rcv_buffer 003F  
                                  ___awdiv 05F5                           ??_LCD_Set_Cursor 0075  
                                  __ptext1 0EA8                                    __ptext2 0EBD  
                                  __ptext3 0FC3                                    __ptext4 0EAE  
                                  __ptext5 0587                                    __ptext6 0EE1  
                                  __ptext7 0F71                                    __ptext8 0FE0  
                                  __ptext9 0037                                  _LCD_Clear 0EE1  
                                  clrloop0 0EB6                              _modbusRTUInit 0EA8  
                     end_of_initialization 0033               ?_modbusResponseMultipleWrite 007A  
                            ?_UARTsendChar 0070                                  _RS485Init 0EBD  
                                  memcpy@d 0079                              ??_clearBuffer 0072  
                                  memcpy@n 0075                                    memcpy@s 007A  
                               _rcv_buffer 00B9                                  i1_LCD_CMD 0F57  
                 ?_modbusResponseCoilsRead 007A                               __pstringtext 0100  
                                  strlen@s 0072                                 LCD_CMD@CMD 0050  
                               ?_LCD_Clear 0070                             ?_modbusRTUInit 0070  
                        LCD_Write_String@i 0077                           ??_LCD_Write_Char 0071  
                           ??_UARTsendChar 0070                                 ?_RS485Init 0070  
                               ?i1_LCD_CMD 0070              ??_modbusResponseMultipleWrite 003B  
                           _RS485rcvString 0F40                        __end_of_clearBuffer 0FC3  
                         _LCD_Write_String 00DC                             __end_of_memcpy 00BB  
        _uart_str_idx@PIC16F877A_UART$F117 0057          _uart_str_idx@PIC16F877A_UART$F221 0053  
        _uart_str_idx@PIC16F877A_UART$F183 0055                ??_modbusResponseSingleWrite 007E  
                           __end_of_strlen 0F40                        start_initialization 0015  
                              __end_of_ISR 0066           modbusResponseCoilsRead@tx_buffer 0042  
        modbusResponseCoilsRead@coil_value 007D        __end_of_modbusResponseRegistersRead 03E3  
              _modbusResponseRegistersRead 0312       modbusResponseRegistersRead@tx_buffer 0047  
                   __end_of_RS485rcvString 0F57                       RS485rcvString@length 0076  
                               init_fetch0 0F01                                __pdataBANK0 0020  
                                 ??_memcpy 0077                              ??i1_LCD_Clear 0074  
                 RS485rcvString@rcv_buffer 007A                                crc16@buffer 0077  
                                _wCRCTable 0112                                   ??_strlen 0072  
                              crc16@length 0070                                   ?_LCD_CMD 0070  
                          ??_modbusRTUInit 004D                                  ___latbits 0002  
                            __pcstackBANK0 003B                                ??_LCD_Clear 0051  
      modbusResponseSingleWrite@rcv_buffer 007D                                ??_RS485Init 004D  
                       RS485rcvString@done 0078                                _clearBuffer 0FA7  
                              ??i1_LCD_CMD 0071                                  crc16@temp 0076  
                          ?_RS485rcvString 0076                  _modbusResponseSingleWrite 0066  
        modbusResponseCoilsRead@rcv_buffer 007C                                   ?___awdiv 0070  
                         _modbusRcvRequest 0510                       __end_of_UARTsendChar 0ED4  
                           _UARTsendString 00BB                         RS485sendString@str 0076  
    modbusResponseRegistersRead@rcv_buffer 007C                        __end_ofi1_LCD_Clear 0EE1  
                                _error_msg 0022                                   _LCD_DATA 0FE0  
                        interrupt_function 0004                                   _LCD_Init 0587  
                                clear_ram0 0EB5                      __end_of_RS485TxConfig 0EB5  
                   __end_of_UARTsendString 00DC          modbusResponseRegistersRead@length 007A  
                             clearBuffer@i 0075                                __stringbase 0112  
                            ??_UARTrcvChar 0070                                  _tx_buffer 00A0  
        modbusResponseMultipleWrite@length 007A                   __end_of_LCD_Write_String 00FD  
                modbusMesHandling@function 0048                               _register_val 0035  
                        clearBuffer@buffer 0074                                  memcpy@tmp 0077  
                      LCD_Write_Char@High4 0074                            ?_UARTsendString 0070  
                          UARTsendString@i 0072                        UARTrcvString@length 0071  
     modbusResponseMultipleWrite@tx_buffer 003F                         __end_of__stringtab 0112  
                              i1_LCD_Clear 0ED4                          ??_RS485sendString 0075  
                                 __ptext10 0ED4                                   __ptext11 0510  
                                 __ptext20 05F5                                   __ptext12 0F40  
                                 __ptext21 065C                                   __ptext13 06FF  
                                 __ptext30 0796                                   __ptext22 047D  
                                 __ptext14 0EA2                                   __ptext31 0F57  
                                 __ptext23 074C                                   __ptext15 03E3  
                                 __ptext32 07DB                                   __ptext24 0FA7  
                                 __ptext16 0066                                   __ptext25 0F14  
                                 __ptext17 0F29                                   __ptext26 00BB  
                                 __ptext18 0095                                   __ptext27 0EC8  
                                 __ptext19 0312                                   __ptext28 00DC  
                                 __ptext29 06B0                        __end_of_UARTrcvChar 0EA8  
                                 _coil_val 0039               modbusResponseRegistersRead@i 0046  
                            _UARTrcvString 06FF            modbusResponseSingleWrite@length 007B  
                         _UARTTransRcvInit 0FC3                        LCD_Set_Cursor@High4 0078  
                                 memcpy@d1 0078                                   memcpy@s1 0074  
                       LCD_Write_Char@Data 0075                         LCD_Write_Char@Low4 0073  
                                 init_ram0 0F05                             ?_UARTrcvString 0071  
                               i1_LCD_DATA 07DB                   __end_of_modbusRcvRequest 0587  
      __end_of_modbusResponseMultipleWrite 06B0                _modbusResponseMultipleWrite 065C  
                         ??_RS485rcvString 0078                                   intlevel1 0000  
                             _UARTsendChar 0EC8                               ?_clearBuffer 0070  
                                stringcode 010A                               _uart_str_idx 0059  
                            UARTsendChar@c 0070                         LCD_Set_Cursor@Low4 0077  
                       LCD_Set_Cursor@Temp 0079            modbusResponseCoilsRead@checksum 003F  
      modbusResponseRegistersRead@checksum 0044            modbusResponseCoilsRead@coil_num 003D  
        __end_of_modbusResponseSingleWrite 0095                                _UARTrcvChar 0EA2  
                             LCD_DATA@Data 004D                    _modbusResponseCoilsRead 047D  
                 modbusResponseCoilsRead@i 0041                               UARTrcvChar@c 0070  
                                 strlen@cp 0073                                   stringtab 0100  
                    __end_of_modbusRTUInit 0EAE                             clearBuffer@len 0070  
